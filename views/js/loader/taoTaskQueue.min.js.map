{"version":3,"sources":["../../core/format.js","../../core/promise.js","../../lib/uuid.js","../../core/logger/api.js","../../core/logger.js","../../core/eventifier.js","../../ui/hider.js","../../ui/component/css/components!css","../../ui/component.js","../../ui/badge/css/badge!css","../../ui/badge/badge.js","../../ui/transformer.js","../../ui/component/placeable.js","../../ui/component/alignable.js","../../ui/animable/absorbable/css/absorb!css","../../ui/animable/absorbable/absorbable.js","../../ui/animable/pulsable/css/pulse!css","../../ui/animable/pulsable/pulsable.js","../component/listing/tpl/element!tpl","../component/listing/css/element!css","../component/listing/element.js","../../ui/report.js","../component/listing/tpl/report!tpl","../component/listing/css/report!css","../component/listing/report.js","../component/listing/tpl/list!tpl","../component/listing/tpl/elementWrapper!tpl","../component/listing/css/list!css","../component/listing/list.js","../component/manager/tpl/manager!tpl","../component/manager/css/manager!css","../component/manager/manager.js","../../util/url.js","../../core/polling.js","../../core/promiseQueue.js","../../core/store/localstorage.js","../../core/store/indexeddb.js","../../core/store/memory.js","../../core/store.js","../../core/tokenStore.js","../../core/tokenHandler.js","../../core/request.js","../../core/dataProvider/request.js","../../util/regexEscape.js","../../util/wrapLongWords.js","../../util/encode.js","../../ui/feedback.js","../../ui/taskQueue/taskQueueModel.js","../../ui/taskQueue/taskQueue.js","../controller/main.js","../controller/routes.js","onLayerEnd0.js","module-create.js"],"names":[],"mappings":"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","sourcesContent":["define('core/format',['lodash'], function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var pattern = /(%[sdj])/g;\n    /**\n     * Enables you to format strings/message, using the pattern:\n     *  - %s : string\n     *  - %d : number\n     *  - %j : json\n     *\n     * @example format('Resize %s to %d%', 'width', 100); //returns Resize width to 100%\n     * @exports core/format\n     * @param {String} message - the message to format\n     * @param {...String|Number|Object} [replacements] -  the replacements arguments in the order defined in the message\n     * @returns {String} the formatted message\n     */\n\n    function format (message) {\n      var replacements = Array.prototype.slice.call(arguments, 1);\n      return _.reduce(message.match(pattern), function (acc, match, index) {\n        var replacement = '';\n\n        if (undefined !== replacements[index]) {\n          switch (match) {\n            case '%d':\n              replacement = Number(replacements[index]);\n              break;\n\n            case '%j':\n              try {\n                replacement = JSON.stringify(replacements[index]).replace(/\"/g, '');\n              } catch (e) {}\n\n              break;\n\n            default:\n              replacement = replacements[index];\n              break;\n          }\n\n          message = message.replace(match, replacement);\n        }\n\n        return message;\n      }, message);\n    }\n\n    return format;\n\n});\n\n","define('core/promise',[],function () { 'use strict';\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2015-2019 Open Assessment Technologies SA\n\t */\n\n\treturn Promise;\n\n});\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('lib/uuid',factory) :\n    (global = global || self, global.uuid = factory());\n}(this, function () { 'use strict';\n\n    /**\n     * UUID generator\n     *\n     * This is a modified version of Robert Kieffer's Math.uuid\n     * from http://www.broofa.com/2008/09/javascript-uuid-function/\n     *\n     * It differs in three ways from the original work:\n     * - uuid is no longer attached to the Math object\n     * - script is now written in require.js style\n     * - alternative implementations have been removed\n     *\n     * Additionally the usage examples have been adapted to reflect these changes.\n     *\n     * Original credits:\n     * Math.uuid.js (v1.4)\n     * http://www.broofa.com\n     * mailto:robert@broofa.com\n     *\n     * Copyright (c) 2010 Robert Kieffer\n     * Dual licensed under the MIT and GPL licenses.\n     *\n     */\n\n    // Private array of chars to use\n    var CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n\n    /**\n        * Generate a random uuid\n        *\n        * USAGE: uuid(length, radix)\n        *   length - the desired number of characters\n        *   radix  - the number of allowable values for each character.\n        *\n        * EXAMPLES:\n        *   // No arguments  - returns RFC4122, version 4 ID\n        *   >>> uuid()\n        *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\n        *\n        *   // One argument - returns ID of the specified length\n        *   >>> uuid(15)     // 15 character ID (default base=62)\n        *   \"VcydxgltxrVZSTV\"\n        *\n        *   // Two arguments - returns ID of the specified length, and radix. (Radix must be <= 62)\n        *   >>> uuid(8, 2)  // 8 character ID (base=2)\n        *   \"01001010\"\n        *   >>> uuid(8, 10) // 8 character ID (base=10)\n        *   \"47473046\"\n        *   >>> uuid(8, 16) // 8 character ID (base=16)\n        *   \"098F4D35\"\n        *\n        * @param len\n        * @param radix\n        * @returns {*}\n        * @private\n        */\n    var uuid = function (len, radix) {\n        var chars = CHARS, uuid = [], i, r;\n        radix = radix || chars.length;\n\n        // Compact form\n        if (len) {\n            for (i = 0; i < len; i++) {\n                uuid[i] = chars[0 | Math.random() * radix];\n            }\n        }\n        // rfc4122 form\n        else {\n\n            // rfc4122 requires these characters\n            uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n            uuid[14] = '4';\n\n            // Fill in random data.  At i === 19 set the high bits of clock sequence as\n            // per rfc4122, sec. 4.1.5\n            for (i = 0; i < 36; i++) {\n                if (!uuid[i]) {\n                    r = 0 | Math.random() * 16;\n                    uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\n                }\n            }\n        }\n\n        return uuid.join('');\n    };\n\n    return uuid;\n\n}));\n\n","define('core/logger/api',['lodash', 'core/format', 'core/promise'], function (_, format, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    format = format && format.hasOwnProperty('default') ? format['default'] : format;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n    /**\n     * The default level\n     */\n\n    var defaultLevel = 'info';\n    var levels = {\n      fatal: 60,\n      // The service/app is going to stop or become unusable now. An operator should definitely look into this soon.\n      error: 50,\n      // Fatal for a particular request, but the service/app continues servicing other requests. An operator should look at this soon(ish).\n      warn: 40,\n      // A note on something that should probably be looked at by an operator eventually.\n      info: 30,\n      // Detail on regular operation.\n      debug: 20,\n      // Anything else, i.e. too verbose to be included in \"info\" level.\n      trace: 10 // Logging from external libraries used by your app or very detailed application logging.\n\n    };\n    /**\n     * Major version of the node-bunyan package (for compat)\n     */\n\n    var bunyanVersion = 0;\n    /**\n     * Where messages dwells\n     */\n\n    var logQueue = [];\n    /**\n     * Get the actual level as a string,\n     * fallback to the default level.\n     * @param {String|Number} [level] - the level\n     * @returns {String} the level\n     */\n\n    var getLevel = function getLevel(level) {\n      if (typeof level === 'undefined' || _.isString(level) && !_.has(levels, level)) {\n        return defaultLevel;\n      }\n\n      if (_.isNumber(level)) {\n        return _.findKey(levels, function (l) {\n          return l === level;\n        }) || defaultLevel;\n      }\n\n      return level;\n    };\n    /**\n     * Get the actual level as a number,\n     * fallback to the default level.\n     * @param {String|Number} [level] - the level\n     * @returns {Number} the level\n     */\n\n\n    var getLevelNum = function getLevelNum(level) {\n      if (_.isString(level) && _.has(levels, level)) {\n        return levels[level];\n      }\n\n      if (_.isNumber(level) && _.contains(levels, level)) {\n        return level;\n      }\n\n      return levels[defaultLevel];\n    };\n    /**\n     * Check whether the given level is above the minimum level threshold\n     * @param {String|Number} minlevel- the minimum level\n     * @param {String|Number} [level] - the level to check\n     * @returns {Boolean}\n     */\n\n\n    var checkMinLevel = function checkMinLevel(minLevel, level) {\n      return getLevelNum(level) >= getLevelNum(minLevel);\n    };\n    /**\n     * Creates a logger instance\n     *\n     * @param {String} name - each logger instance MUST have a name\n     * @param {String|Number} [minLevel] - the minimum logging level\n     * @param {Object} [fields] - fields to add to all records\n     *\n     * @returns {logger} a new logger instance\n     */\n\n\n    var loggerFactory = function loggerFactory(name, minLevel, fields) {\n      var baseRecord;\n      var logger;\n\n      if (!_.isString(name) || _.isEmpty(name)) {\n        throw new TypeError('A logger needs a name');\n      }\n\n      if (_.isPlainObject(minLevel) && typeof field === 'undefined') {\n        fields = minLevel;\n        minLevel = defaultLevel;\n      }\n\n      baseRecord = _.defaults(fields || {}, {\n        name: name,\n        pid: 1,\n        // only for compat\n        hostname: navigator.userAgent\n      });\n      /**\n       * Exposes a log method and one by log level, like logger.trace()\n       *\n       * @typedef logger\n       */\n\n      logger = {\n        /**\n         * Log messages by delegating to the provider\n         *\n         * @param {String|Number} level - the log level\n         * @param {Object} [recordFields] - fields to add to the log record\n         * @param {String|Error} message - the message to log\n         * @param {...String} [rest] - rest parameters if the message is formatted\n         * @returns {logger} chains\n         */\n        log: function log(level, recordFields, message) {\n          var record;\n          var err;\n          var rest = [];\n          var time = new Date().toISOString(); //without providers or not the level, we don't log.\n\n          if (loggerFactory.providers === false || !checkMinLevel(minLevel || defaultLevel, level)) {\n            return;\n          }\n\n          if (_.isString(recordFields) || recordFields instanceof Error) {\n            message = recordFields;\n            recordFields = {};\n            rest = [].slice.call(arguments, 2);\n          } else {\n            rest = [].slice.call(arguments, 3);\n          }\n\n          record = {\n            level: getLevel(level),\n            v: bunyanVersion,\n            time: time\n          };\n\n          if (checkMinLevel(levels.error, level) || message instanceof Error) {\n            if (message instanceof Error) {\n              err = message;\n            } else {\n              message = _.isObject(message) ? JSON.stringify(message) : message;\n              err = new Error(message);\n            }\n\n            record.msg = err.message;\n            record.err = err;\n          } else {\n            record.msg = format.apply(null, [message].concat(rest));\n          }\n\n          _.merge(record, baseRecord, recordFields);\n\n          logQueue.push(record);\n          loggerFactory.flush();\n          return this;\n        },\n\n        /**\n         * Get/set the default level of the logger\n         * @param {String|Number} [level] - set the default level\n         * @returns {String|logger} the default level as a getter or chains as a setter\n         */\n        level: function level(value) {\n          if (typeof value !== 'undefined') {\n            //update the partial function\n            minLevel = getLevelNum(value);\n            return this;\n          }\n\n          return getLevel(minLevel);\n        },\n\n        /**\n         * Fork the current logger to create a child logger :\n         * same config + child fields\n         *\n         * @param {Object} [childFields] - specialized child fields\n         * @return {logger} the child logger\n         */\n        child: function child(childFields) {\n          return loggerFactory(name, minLevel, _.defaults(childFields, baseRecord));\n        }\n      }; //augment the logger by each level\n\n      return _.reduce(levels, function reduceLogLevel(target, level, levelName) {\n        target[levelName] = _.partial(logger.log, level);\n        return target;\n      }, logger);\n    };\n    /**\n     * Exposes the levels\n     * @type {Object}\n     */\n\n\n    loggerFactory.levels = levels;\n    /**\n     * The list of providers bound to the logger.\n     * @type {Boolean|Array} false means we don't log, array even empty we keep the logs\n     */\n\n    loggerFactory.providers = false;\n    /**\n     * Load providers from AMD modules\n     * @param {Object} providerConfigs - provider's modules to load and register\n     * @returns {Promise} resolves once modules are registered\n     */\n\n    loggerFactory.load = function load(providerConfigs) {\n      var self = this;\n      var modules = [];\n      this.providers = [];\n      return new Promise(function (resolve, reject) {\n        //we can load the loggers dynamically\n        _.forEach(providerConfigs, function (providerConfig, providerName) {\n          modules.push(providerName);\n        });\n\n        require(modules, function () {\n          var loadedProviders = [].slice.call(arguments);\n\n          _.forEach(loadedProviders, function (provider, moduleKey) {\n            try {\n              self.register(provider, providerConfigs[modules[moduleKey]]);\n            } catch (err) {\n              reject(err);\n            }\n          }); //flush messages that arrived before the providers are there\n\n\n          self.flush();\n          resolve();\n        }, reject);\n      });\n    };\n    /**\n     * A logger provider provides with a way to log\n     * @typedef {Object} loggerProvider\n     * @property {Function} log - called with the message in parameter\n     * @param {Object} providerConfig - provider's config\n     * @throws TypeError\n     */\n\n\n    loggerFactory.register = function register(provider, providerConfig) {\n      if (!_.isPlainObject(provider) || !_.isFunction(provider.log)) {\n        throw new TypeError('A log provider is an object with a log method');\n      } //propogate checkMinLevel function\n\n\n      provider.checkMinLevel = checkMinLevel;\n\n      if (_.isFunction(provider.setConfig)) {\n        provider.setConfig(providerConfig);\n      }\n\n      this.providers = this.providers || [];\n      this.providers.push(provider);\n    };\n    /**\n     * Flush the messages queue into the providers\n     */\n\n\n    loggerFactory.flush = function flush() {\n      if (_.isArray(this.providers) && this.providers.length > 0) {\n        _.forEach(logQueue, function (message) {\n          //forward to the providers\n          _.forEach(loggerFactory.providers, function (provider) {\n            provider.log.call(provider, message);\n          });\n        }); //clear the queue\n\n\n        logQueue = [];\n      }\n    };\n    /**\n     * Change the default level for all loggers\n     * @param {String|Number} [level] - set the default level\n     * @returns {String} the defined level\n     */\n\n\n    loggerFactory.setDefaultLevel = function setDefaultLevel(level) {\n      defaultLevel = getLevel(level);\n      return defaultLevel;\n    };\n\n    return loggerFactory;\n\n});\n\n","define('core/logger',['lodash', 'module', 'core/logger/api'], function (_, module, loggerFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n    /**\n     * The default configuration if nothing\n     * is found on the module config\n     */\n\n    var defaultConfig = {\n      level: loggerFactory.levels.warn,\n      loggers: {\n        'core/logger/console': {\n          level: 'warn'\n        }\n      }\n    }; //the logger providers are configured through the AMD module config\n\n    var config = _.defaults(module.config() || {}, defaultConfig);\n\n    var logger = loggerFactory('core/logger');\n    loggerFactory.setDefaultLevel(config.level);\n    loggerFactory.load(config.loggers);\n    /**\n     * Catch uncaught errors\n     * @param msg - error message\n     * @param url - current url\n     * @param line - line number\n     * @param col - column number\n     * @param error - error object (not all browsers support).\n     * @return {boolean}\n     */\n\n    window.onerror = function (msg, url, line, col, error) {\n      logger.error(\"Caught[via window.onerror]: '\" + msg + \"' from \" + url + ':' + line + ':' + col);\n    };\n    /**\n     * Expose explicitely an direct way to activate log levels\n     * @param {String|Number} level - the new log level\n     * @returns {String} the defined level\n     */\n\n\n    window.setTaoLogLevel = function setTaoLogLevel(level) {\n      return loggerFactory.setDefaultLevel(level);\n    }; //exposes the API\n\n    return loggerFactory;\n\n});\n\n","define('core/eventifier',['lodash', 'core/promise', 'lib/uuid', 'core/logger'], function (_, Promise, uuid, loggerFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n    /**\n     * All events have a namespace, this one is the default\n     */\n\n    var defaultNs = '@';\n    /**\n     * Namespace that targets all event\n     */\n\n    var globalNs = '*';\n    /**\n     * Create a logger\n     */\n\n    var eventifierLogger = loggerFactory('core/eventifier');\n    /**\n     * Get the list of events from an eventName string (ie, separated by spaces)\n     * @param {String} eventNames - the event strings\n     * @returns {String[]} the event list (no empty, no duplicate)\n     */\n\n    function getEventNames(eventNames) {\n      if (!_.isString(eventNames) || _.isEmpty(eventNames)) {\n        return [];\n      }\n\n      return _(eventNames.split(/\\s/g)).compact().uniq().value();\n    }\n    /**\n     * Get the name part of an event name: the 'foo' of 'foo.bar'\n     * @param {String} eventName - the name of the event\n     * @returns {String} the name part\n     */\n\n\n    function getName(eventName) {\n      if (eventName.indexOf('.') > -1) {\n        return eventName.substr(0, eventName.indexOf('.'));\n      }\n\n      return eventName;\n    }\n    /**\n     * Get the namespace part of an event name: the 'bar' of 'foo.bar'\n     * @param {String} eventName - the name of the event\n     * @returns {String} the namespace, that defaults to defaultNs\n     */\n\n\n    function getNamespace(eventName) {\n      if (eventName.indexOf('.') > -1) {\n        return eventName.substr(eventName.indexOf('.') + 1);\n      }\n\n      return defaultNs;\n    }\n    /**\n     * Creates a new EventHandler object structure\n     * @returns {Object} the handler structure\n     */\n\n\n    function getHandlerObject() {\n      return {\n        before: [],\n        between: [],\n        after: []\n      };\n    }\n    /**\n     * Makes the target an event emitter by delegating calls to the event API.\n     * @param {Object} [target] - the target object, a new plain object is created when omited.\n     * @returns {Object} the target for conveniance\n     */\n\n\n    function eventifier(target) {\n      var targetName;\n      var logger;\n      var stoppedEvents; //it stores all the handlers under ns/name/[handlers]\n\n      var eventHandlers = {};\n      /**\n       * Get the handlers for an event type\n       * @param {String} eventName - the event name, namespace included\n       * @param {String} [type='between'] - the type of event in before, between and after\n       * @returns {Function[]} the handlers\n       */\n\n      var getHandlers = function getHandlers(eventName, type) {\n        var name = getName(eventName);\n        var ns = getNamespace(eventName);\n        type = type || 'between';\n        eventHandlers[ns] = eventHandlers[ns] || {};\n        eventHandlers[ns][name] = eventHandlers[ns][name] || getHandlerObject();\n        return eventHandlers[ns][name][type];\n      };\n      /**\n       * The API itself is just a placeholder, all methods will be delegated to a target.\n       */\n\n\n      var eventApi = {\n        /**\n         * Attach an handler to an event.\n         * Calling `on` with the same eventName multiple times add callbacks: they\n         * will all be executed.\n         *\n         * @example target.on('foo', function(bar){ console.log('Cool ' + bar) } );\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @param {Function} handler - the callback to run once the event is triggered\n         * @returns {Object} the target object\n         */\n        on: function on(eventNames, handler) {\n          if (_.isFunction(handler)) {\n            _.forEach(getEventNames(eventNames), function (eventName) {\n              getHandlers(eventName).push(handler);\n            });\n          }\n\n          return this;\n        },\n\n        /**\n         * Remove ALL handlers for an event.\n         *\n         * @example remove ALL\n         * target.off('foo');\n         *\n         * @example remove targeted namespace\n         * target.off('foo.bar');\n         *\n         * @example remove all handlers by namespace\n         * target.off('.bar');\n         *\n         * @example remove all namespaces, keep non namespace\n         * target.off('.*');\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @returns {Object} the target object\n         */\n        off: function off(eventNames) {\n          _.forEach(getEventNames(eventNames), function (eventName) {\n            var name = getName(eventName);\n            var ns = getNamespace(eventName);\n            var offNamespaces;\n\n            if (ns && !name) {\n              if (ns === globalNs) {\n                offNamespaces = {};\n                offNamespaces[defaultNs] = eventHandlers[defaultNs];\n                eventHandlers = offNamespaces;\n              } else {\n                //off the complete namespace\n                eventHandlers[ns] = {};\n              }\n            } else {\n              _.forEach(eventHandlers, function (nsHandlers, namespace) {\n                if (nsHandlers[name] && (ns === defaultNs || ns === namespace)) {\n                  nsHandlers[name] = getHandlerObject();\n                }\n              });\n            }\n          });\n\n          return this;\n        },\n\n        /**\n         * Remove ALL registered handlers\n         *\n         * @example remove ALL\n         * target.removeAllListeners();\n         *\n         * @this the target\n         * @returns {Object} the target object\n         */\n        removeAllListeners: function removeAllListeners() {\n          // full erase\n          eventHandlers = {};\n          return this;\n        },\n\n        /**\n         * Trigger an event.\n         *\n         * @example target.trigger('foo', 'Awesome');\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event to trigger, or multiple events separated by a space\n         * @returns {Object} the target object\n         */\n        trigger: function trigger(eventNames) {\n          var self = this;\n          var args = [].slice.call(arguments, 1);\n          stoppedEvents = {};\n\n          _.forEach(getEventNames(eventNames), function (eventName) {\n            var ns = getNamespace(eventName);\n            var name = getName(eventName); //check which ns needs to be executed and then merge the handlers to be executed\n\n            var mergedHandlers = _(eventHandlers).filter(function (nsHandlers, namespace) {\n              return nsHandlers[name] && (ns === defaultNs || ns === namespace || namespace === globalNs);\n            }).reduce(function (acc, nsHandlers) {\n              acc.before = acc.before.concat(nsHandlers[name].before);\n              acc.between = acc.between.concat(nsHandlers[name].between);\n              acc.after = acc.after.concat(nsHandlers[name].after);\n              return acc;\n            }, getHandlerObject());\n\n            logger.trace({\n              event: eventName,\n              args: args\n            }, 'trigger %s', eventName);\n\n            if (mergedHandlers) {\n              triggerAllHandlers(mergedHandlers, name, ns);\n            }\n          });\n\n          function triggerAllHandlers(allHandlers, name, ns) {\n            var event = {\n              name: name,\n              namespace: ns\n            };\n\n            if (allHandlers.before.length) {\n              triggerBefore(allHandlers.before, event).then(function () {\n                triggerBetween(allHandlers, event);\n              }).catch(function (err) {\n                logHandlerStop('before', event, err);\n              });\n            } else {\n              triggerBetween(allHandlers, event);\n            }\n          }\n\n          function triggerBefore(handlers, event) {\n            var pHandlers,\n                beforeArgs = args.slice(); // .before() handlers will get a special 'event' object as their first parameter\n\n            beforeArgs.unshift(event);\n            pHandlers = handlers.map(function (handler) {\n              // .before() handlers use to return false to cancel the call stack\n              // to maintain backward compatibility, we treat this case as a rejected Promise\n              var value = shouldStop(event.name) ? false : handler.apply(self, beforeArgs);\n              return value === false ? Promise.reject() : value;\n            });\n            return Promise.all(pHandlers);\n          }\n\n          function triggerBetween(allHandlers, event) {\n            if (shouldStop(event.name)) {\n              logHandlerStop('before', event); // .stopEvent() has been called in an async .before() callback\n            } else {\n              // trigger the event handlers\n              triggerHandlers(allHandlers.between, event).then(function () {\n                triggerAfter(allHandlers.after, event);\n              }).catch(function (err) {\n                logHandlerStop('on', event, err);\n              });\n            }\n          }\n\n          function triggerAfter(handlers, event) {\n            if (shouldStop(event.name)) {\n              logHandlerStop('on', event); // .stopEvent() has been called in an async .on() callback\n            } else {\n              triggerHandlers(handlers, event).then(function () {\n                if (shouldStop(event.name)) {\n                  logHandlerStop('after', event); // .stopEvent() has been called in an async .after() callback\n                }\n              }).catch(function (err) {\n                logHandlerStop('after', event, err);\n              });\n            }\n          }\n\n          function triggerHandlers(handlers, event) {\n            var pHandlers;\n            pHandlers = handlers.map(function (handler) {\n              return shouldStop(event.name) ? Promise.reject() : handler.apply(self, args);\n            });\n            return Promise.all(pHandlers);\n          }\n\n          function logHandlerStop(stoppedIn, event, err) {\n            if (err instanceof Error) {\n              logger.error(err);\n            }\n\n            logger.trace({\n              err: err,\n              event: event.name,\n              stoppedIn: stoppedIn\n            }, event.name + ' handlers stopped');\n          }\n\n          function shouldStop(name) {\n            return stoppedEvents[name];\n          }\n\n          return this;\n        },\n\n        /**\n         * Register a callback that is executed before the given event name\n         * Provides an opportunity to cancel the execution of the event if one of the returned value is false\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @param {Function} handler - the callback to run once the event is triggered\n         * @returns {Object} the target object\n         */\n        before: function before(eventNames, handler) {\n          if (_.isFunction(handler)) {\n            _.forEach(getEventNames(eventNames), function (eventName) {\n              getHandlers(eventName, 'before').push(handler);\n            });\n          }\n\n          return this;\n        },\n\n        /**\n         * Register a callback that is executed after the given event name\n         * The handlers will all be executed, no matter what\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @param {Function} handler - the callback to run once the event is triggered\n         * @returns {Object} the target object\n         */\n        after: function after(eventNames, handler) {\n          if (_.isFunction(handler)) {\n            _.forEach(getEventNames(eventNames), function (eventName) {\n              getHandlers(eventName, 'after').push(handler);\n            });\n          }\n\n          return this;\n        },\n\n        /**\n         * If triggered into an sync handler, this immediately cancels the execution of all following handlers\n         * regardless of their category\n         * If triggered asynchronously, this will only cancel the next category of handlers:\n         * - .on() and .after() if triggered during a .before() handler\n         * - .after() if triggered during a .on() handler\n         * - nothing if triggered during a .after() handler\n         * In an async context, you can also reject a Promise with the same results\n         *\n         * @param {string} name - of the event to stop\n         */\n        stopEvent: function stopEvent(name) {\n          if (_.isString(name) && !_.isEmpty(name.trim())) {\n            stoppedEvents[name.trim()] = true;\n          }\n        },\n\n        /**\n         * Spread events to another eventifier object.\n         * So when an event is triggered on the current target,\n         * it get's triggered on the destination too.\n         *\n         * Be careful, the forward will be triggered only if the event reach the `on` steps\n         * (it can be canceled by a before).\n         *\n         * @param {eventifier} destination - the destination emitter\n         * @param {String|String[]} eventNames - the list of events to forward\n         * @returns {Object} target - chains\n         */\n        spread: function spread(destination, eventNames) {\n          var self = this;\n\n          if (destination && _.isFunction(destination.trigger)) {\n            if (_.isString(eventNames)) {\n              eventNames = getEventNames(eventNames);\n            }\n\n            _.forEach(eventNames, function (eventName) {\n              self.on(eventName, function forwardEventTo() {\n                var args = [eventName].concat([].slice.call(arguments));\n                destination.trigger.apply(destination, args);\n              });\n            });\n          }\n\n          return this;\n        }\n      };\n      target = target || {}; //try to get something that looks like a name, an id or generate one only for logging purposes\n\n      targetName = target.name || target.id || target.serial || uuid(6); //create a child logger per eventifier\n\n      logger = eventifierLogger.child({\n        target: targetName\n      });\n\n      _(eventApi).functions().forEach(function (method) {\n        if (_.isFunction(target[method])) {\n          eventifierLogger.warn('The target object has already a method named ' + method, target);\n        }\n\n        target[method] = function delegate() {\n          var args = [].slice.call(arguments);\n          return eventApi[method].apply(target, args);\n        };\n      });\n\n      return target;\n    }\n\n    return eventifier;\n\n});\n\n","define('ui/hider',['jquery', 'core/eventifier'], function ($, eventifier) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n    var hiddenClass = 'hidden';\n    /**\n     * Wrap an element to ensure it's a jquery elt.\n     * @private\n     * @param {jQueryElement|HTMLElement|String} element - the element/node/selector\n     * @returns {jQueryElement} the element\n     */\n\n    function jqWrap(element) {\n      return element instanceof $ ? element : $(element);\n    }\n    /**\n     * The hider object\n     */\n\n\n    var hider = {\n      /**\n       * Show the given element (let say unhide)\n       * @param {jQueryElement|HTMLElement|String} element - the element/node/selector\n       * @returns {jQueryElement} the element\n       */\n      show: function show(element) {\n        return jqWrap(element).removeClass(hiddenClass);\n      },\n\n      /**\n       * Hide the given element\n       * @param {jQueryElement|HTMLElement|String} element - the element/node/selector\n       * @returns {jQueryElement} the element\n       */\n      hide: function hide(element) {\n        return jqWrap(element).addClass(hiddenClass);\n      },\n\n      /**\n       * Toggle (show if hidden / hide if shown) the given element\n       * @param {jQueryElement|HTMLElement|String} element - the element/node/selector\n       * @param {Boolean} [state] - An optional flag that tells if the element must be shown (true) or hidden (false)\n       * @returns {jQueryElement} the element\n       */\n      toggle: function toggle(element, state) {\n        if ('undefined' !== typeof state) {\n          state = !state;\n        }\n\n        return jqWrap(element).toggleClass(hiddenClass, state);\n      },\n\n      /**\n       * Check whether the given element is hidden\n       * @param {jQueryElement|HTMLElement|String} element - the element/node/selector\n       * @param {Boolean} [real = false] - if the check takes in account the real display/visibility status.\n       * @returns {jQueryElement} the element\n       */\n      isHidden: function isHidden(element, real) {\n        var $elt = jqWrap(element);\n\n        if (!real) {\n          return $elt.hasClass(hiddenClass);\n        }\n\n        return $elt.hasClass(hiddenClass) || $elt.css('display') === 'none' || $elt.css('visibility') === 'hidden';\n      }\n    };\n\n    return hider;\n\n});\n\n","\ndefine('css!ui/component/css/components',[],function(){});\n","define('ui/component',['jquery', 'lodash', 'core/eventifier', 'handlebars', 'i18n', 'lib/dompurify/purify', 'css!ui/component/css/components.css'], function ($$1, _, eventifier, Handlebars, __, DOMPurify, components_css) { 'use strict';\n\n  $$1 = $$1 && $$1.hasOwnProperty('default') ? $$1['default'] : $$1;\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n  Handlebars = Handlebars && Handlebars.hasOwnProperty('default') ? Handlebars['default'] : Handlebars;\n  __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n  DOMPurify = DOMPurify && DOMPurify.hasOwnProperty('default') ? DOMPurify['default'] : DOMPurify;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function Helpers0 (hb) {\n    //register a i18n helper\n    hb.registerHelper('__', function (key) {\n      return __(key);\n    });\n    /**\n     * Register dompurify helper\n     *\n     * https://github.com/cure53/DOMPurify\n     * with config SAFE_FOR_TEMPLATES: true\n     * to make output safe for template systems\n     */\n\n    hb.registerHelper('dompurify', function (context) {\n      return DOMPurify.sanitize(context);\n    });\n    /**\n     * Register join helper\n     *\n     * Example :\n     * var values = {a:v1, b:v2, c:v3};\n     * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n     * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n     */\n\n    hb.registerHelper('join', function (arr, keyValueGlue, fragmentGlue, wrapper) {\n      var fragments = [];\n      keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n      fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n      wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n      _.forIn(arr, function (value, key) {\n        var fragment = '';\n\n        if (value !== null || value !== undefined) {\n          if (typeof value === 'boolean') {\n            value = value ? 'true' : 'false';\n          } else if (_typeof(value) === 'object') {\n            value = _.values(value).join(' ');\n          }\n        } else {\n          value = '';\n        }\n\n        if (keyValueGlue !== undefined) {\n          fragment += key + keyValueGlue;\n        }\n\n        fragment += wrapper + value + wrapper;\n        fragments.push(fragment);\n      });\n\n      return fragments.join(fragmentGlue);\n    }); //register a classic \"for loop\" helper\n    //it also adds a local variable \"i\" as the index in each iteration loop\n\n    hb.registerHelper('for', function (startIndex, stopIndex, increment, options) {\n      var ret = '';\n      startIndex = parseInt(startIndex);\n      stopIndex = parseInt(stopIndex);\n      increment = parseInt(increment);\n\n      for (var i = startIndex; i < stopIndex; i += increment) {\n        ret += options.fn(_.extend({}, this, {\n          i: i\n        }));\n      }\n\n      return ret;\n    });\n    hb.registerHelper('equal', function (var1, var2, options) {\n      if (var1 == var2) {\n        return options.fn(this);\n      } else {\n        return options.inverse(this);\n      }\n    }); // register a \"get property\" helper\n    // it gets the named property from the provided context\n\n    hb.registerHelper('property', function (name, context) {\n      return context[name] || '';\n    }); // register an 'includes' helper\n    // it checks if value is in array\n\n    hb.registerHelper('includes', function (haystack, needle, options) {\n      if (_.contains(haystack, needle)) {\n        return options.fn(this);\n      }\n    });\n  }\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n    return \"<div class=\\\"component\\\"></div>\";\n    });\n  function defaultTpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /**\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n   */\n  var _slice = [].slice;\n  /**\n   * Handles the resize of the component regarding the config set\n   */\n\n  function delegatedResize() {\n    var width = this.config.width;\n    var height = this.config.height;\n    var $container = this.getContainer();\n    var $element = this.getElement();\n\n    if ($container) {\n      if ('auto' === width) {\n        width = $container.width();\n      }\n\n      if ('auto' === height) {\n        height = $container.height();\n      }\n    }\n\n    if ($element) {\n      if (_.isNumber(width)) {\n        $element.css({\n          width: \"\".concat(width, \"px\")\n        });\n      }\n\n      if (_.isNumber(height)) {\n        $element.css({\n          height: \"\".concat(height, \"px\")\n        });\n      }\n    }\n\n    this._width = width;\n    this._height = height;\n  }\n  /**\n   * Builds a component from a base skeleton\n   * @param {Object} [specs] - Some extra methods to assign to the component instance\n   * @param {Object} [defaults] - Some default config entries\n   * @returns {component}\n   */\n\n\n  function component(specs, defaults) {\n    // the template is a private property\n    var componentTpl = defaultTpl; //contains the states of the components\n\n    var componentState = {}; //where the component is added\n\n    var $container; // base skeleton\n\n    /**\n     * @typedef {Object} Component\n     */\n\n    var componentApi = {\n      /**\n       * Initializes the component\n       * @param {Object} config\n       * @param {jQuery|HTMLElement|String} [config.renderTo] - An optional container in which renders the component\n       * @param {Boolean} [config.replace] - When the component is appended to its container, clears the place before\n       * @param {Number|String} [config.width] - The width in pixels, or 'auto' to use the container's width\n       * @param {Number|String} [config.height] - The height in pixels, or 'auto' to use the container's height\n       * @returns {component}\n       * @fires component#init\n       */\n      init: function init(config) {\n        this.config = _(config || {}).omit(function (value) {\n          return value === null || typeof value === 'undefined';\n        }).defaults(defaults || {}).value();\n        componentState = {};\n        /**\n         * Executes extra init tasks\n         * @event component#init\n         */\n\n        this.trigger('init');\n\n        if (this.config.renderTo) {\n          $container = $$1(this.config.renderTo);\n          this.render();\n        }\n\n        return this;\n      },\n\n      /**\n       * Uninstalls the component\n       * @returns {component}\n       * @fires component#destroy\n       */\n      destroy: function destroy() {\n        /**\n         * Executes extra destroy tasks\n         * @event component#destroy\n         */\n        this.trigger('destroy');\n\n        if (this.$component) {\n          this.$component.remove();\n        }\n\n        this.$component = null;\n        componentState = {};\n        return this;\n      },\n\n      /**\n       * Renders the component\n       * @param {jQuery|HTMLElement|String} [container] - where the component is rendered\n       * @returns {component}\n       * @fires component#render\n       */\n      render: function render(container) {\n        if (container) {\n          $container = $$1(container);\n        }\n\n        this.$component = $$1(componentTpl(this.config));\n\n        if ($container) {\n          if (this.config.replace) {\n            $container.empty();\n          }\n\n          $container.append(this.$component);\n        }\n\n        this.setState('rendered', true);\n        delegatedResize.call(this);\n        /**\n         * Executes extra render tasks\n         * @event component#render\n         * @param {jQuery} $component\n         */\n\n        this.trigger('render', this.$component);\n        return this;\n      },\n\n      /**\n       * Sets the component's size\n       * @param {Number|String} width - The width in pixels, or 'auto' to use the container's width\n       * @param {Number|String} height - The height in pixels, or 'auto' to use the container's height\n       * @returns {component}\n       * @fires component#setsize\n       */\n      setSize: function setSize(width, height) {\n        this.config.width = width;\n        this.config.height = height;\n\n        if (this.is('rendered')) {\n          delegatedResize.call(this);\n        }\n        /**\n         * Executes extra resize tasks\n         * @event component#setsize\n         * @param {Number|String} width\n         * @param {Number|String} height\n         */\n\n\n        this.trigger('setsize', width, height);\n        return this;\n      },\n\n      /**\n       * Get the component's size\n       * @returns {Object}\n       * @fires component#setsize\n       */\n      getSize: function getSize() {\n        if (this.is('rendered')) {\n          return {\n            width: this._width || 0,\n            height: this._height || 0\n          };\n        }\n      },\n\n      /**\n       * Get the component rendered size\n       * @param {Boolean} includeMargin - include the margins in the returned size\n       * @returns {{width: number, height: number}}\n       */\n      getOuterSize: function getOuterSize(includeMargin) {\n        var $component;\n\n        if (this.is('rendered')) {\n          $component = this.getElement();\n          includeMargin = includeMargin || false;\n          return {\n            width: Math.round($component.outerWidth(includeMargin)),\n            height: Math.round($component.outerHeight(includeMargin))\n          };\n        }\n      },\n\n      /**\n       * Shows the component\n       * @returns {component}\n       * @fires component#show\n       */\n      show: function show() {\n        /**\n         * Executes extra tasks on show\n         * @event component#show\n         * @param {component} component\n         */\n        this.trigger('show', this);\n        return this.setState('hidden', false);\n      },\n\n      /**\n       * Hides the component\n       * @returns {component}\n       * @fires component#hide\n       */\n      hide: function hide() {\n        /**\n         * Executes extra tasks on hide\n         * @event component#hide\n         * @param {component} component\n         */\n        this.trigger('hide', this);\n        return this.setState('hidden', true);\n      },\n\n      /**\n       * Enables the component\n       * @returns {component}\n       * @fires component#enable\n       */\n      enable: function enable() {\n        /**\n         * Executes extra tasks on enable\n         * @event component#enable\n         * @param {component} component\n         */\n        this.trigger('enable', this);\n        return this.setState('disabled', false);\n      },\n\n      /**\n       * Disables the component\n       * @returns {component}\n       * @fires component#disable\n       */\n      disable: function disable() {\n        /**\n         * Executes extra tasks on disable\n         * @event component#disable\n         * @param {component} component\n         */\n        this.trigger('disable', this);\n        return this.setState('disabled', true);\n      },\n\n      /**\n       * Checks if the component has a particular state\n       * @param {String} state\n       * @returns {Boolean}\n       */\n      is: function is(state) {\n        return !!componentState[state];\n      },\n\n      /**\n       * Sets the component to a particular state\n       * @param {String} state\n       * @param {Boolean} flag\n       * @returns {component}\n       * @fires component#state\n       */\n      setState: function setState(state, flag) {\n        flag = !!flag;\n        componentState[state] = flag;\n\n        if (this.$component) {\n          this.$component.toggleClass(state, flag);\n        }\n        /**\n         * Executes extra tasks on state change\n         * @event component#state\n         * @param {String} state\n         * @param {Boolean} flag\n         * @param {component} component\n         */\n\n\n        this.trigger('state', state, flag, this);\n        return this;\n      },\n\n      /**\n       * Gets the underlying DOM element\n       * @returns {jQuery}\n       */\n      getContainer: function getContainer() {\n        return $container;\n      },\n\n      /**\n       * Gets the underlying DOM element\n       * @returns {jQuery}\n       */\n      getElement: function getElement() {\n        return this.$component;\n      },\n\n      /**\n       * Gets the template used to render this component\n       * @returns {Function}\n       */\n      getTemplate: function getTemplate() {\n        return componentTpl;\n      },\n\n      /**\n       * Sets the template used to render this component\n       * @param {Function} template\n       * @returns {componentApi}\n       * @fires component#template\n       */\n      setTemplate: function setTemplate(template) {\n        var tpl = template || defaultTpl;\n        componentTpl = tpl; // ensure the template is defined as a function\n\n        if (!_.isFunction(componentTpl)) {\n          componentTpl = function componentTpl() {\n            return tpl;\n          };\n        }\n        /**\n         * Executes extra tasks on template change\n         * @event component#template\n         * @param {function} componentTpl\n         */\n\n\n        this.trigger('template', componentTpl);\n        return this;\n      },\n\n      /**\n       * Get the component's configuration\n       */\n      getConfig: function getConfig() {\n        return this.config || defaults || {};\n      }\n    }; // let's extend the instance with extra methods\n\n    if (specs) {\n      _(specs).functions().forEach(function (method) {\n        componentApi[method] = function delegate() {\n          return specs[method].apply(componentApi, _slice.call(arguments));\n        };\n      });\n    }\n\n    return eventifier(componentApi);\n  }\n\n  return component;\n\n});\n\n","\ndefine('css!ui/badge/css/badge',[],function(){});\n","define('ui/badge/badge',['lodash', 'ui/hider', 'ui/component', 'handlebars', 'i18n', 'lib/dompurify/purify', 'css!ui/badge/css/badge.css'], function (_, hider, component, Handlebars, __, DOMPurify, badge_css) { 'use strict';\n\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  hider = hider && hider.hasOwnProperty('default') ? hider['default'] : hider;\n  component = component && component.hasOwnProperty('default') ? component['default'] : component;\n  Handlebars = Handlebars && Handlebars.hasOwnProperty('default') ? Handlebars['default'] : Handlebars;\n  __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n  DOMPurify = DOMPurify && DOMPurify.hasOwnProperty('default') ? DOMPurify['default'] : DOMPurify;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function Helpers0 (hb) {\n    //register a i18n helper\n    hb.registerHelper('__', function (key) {\n      return __(key);\n    });\n    /**\n     * Register dompurify helper\n     *\n     * https://github.com/cure53/DOMPurify\n     * with config SAFE_FOR_TEMPLATES: true\n     * to make output safe for template systems\n     */\n\n    hb.registerHelper('dompurify', function (context) {\n      return DOMPurify.sanitize(context);\n    });\n    /**\n     * Register join helper\n     *\n     * Example :\n     * var values = {a:v1, b:v2, c:v3};\n     * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n     * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n     */\n\n    hb.registerHelper('join', function (arr, keyValueGlue, fragmentGlue, wrapper) {\n      var fragments = [];\n      keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n      fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n      wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n      _.forIn(arr, function (value, key) {\n        var fragment = '';\n\n        if (value !== null || value !== undefined) {\n          if (typeof value === 'boolean') {\n            value = value ? 'true' : 'false';\n          } else if (_typeof(value) === 'object') {\n            value = _.values(value).join(' ');\n          }\n        } else {\n          value = '';\n        }\n\n        if (keyValueGlue !== undefined) {\n          fragment += key + keyValueGlue;\n        }\n\n        fragment += wrapper + value + wrapper;\n        fragments.push(fragment);\n      });\n\n      return fragments.join(fragmentGlue);\n    }); //register a classic \"for loop\" helper\n    //it also adds a local variable \"i\" as the index in each iteration loop\n\n    hb.registerHelper('for', function (startIndex, stopIndex, increment, options) {\n      var ret = '';\n      startIndex = parseInt(startIndex);\n      stopIndex = parseInt(stopIndex);\n      increment = parseInt(increment);\n\n      for (var i = startIndex; i < stopIndex; i += increment) {\n        ret += options.fn(_.extend({}, this, {\n          i: i\n        }));\n      }\n\n      return ret;\n    });\n    hb.registerHelper('equal', function (var1, var2, options) {\n      if (var1 == var2) {\n        return options.fn(this);\n      } else {\n        return options.inverse(this);\n      }\n    }); // register a \"get property\" helper\n    // it gets the named property from the provided context\n\n    hb.registerHelper('property', function (name, context) {\n      return context[name] || '';\n    }); // register an 'includes' helper\n    // it checks if value is in array\n\n    hb.registerHelper('includes', function (haystack, needle, options) {\n      if (_.contains(haystack, needle)) {\n        return options.fn(this);\n      }\n    });\n  }\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n    return \"<div class=\\\"badge-component\\\">\\n    <div class=\\\"loader\\\"></div>\\n    <span class=\\\"badge-border\\\"></span>\\n    <span class=\\\"badge\\\"></span>\\n</div>\";\n    });\n  function badgeTpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /**\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n   */\n  var _defaults = {\n    loading: false,\n    type: 'info',\n    value: 0\n  };\n  var _allowedTypes = ['success', 'warning', 'error', 'info'];\n  var badgeApi = {\n    /**\n     * Update and refresh the rendering of the badge\n     * @param {Object} config - the display config\n     * @param {Number} config.value - the number to be display in the badge, if above 99, the 99+ will be displayed instead\n     * @param {String} config.type - define the type of the badge (success, error, info)\n     * @param {Boolean} [config.loading] - if true, show the loading animation around it\n     * @returns {badgeApi}\n     */\n    update: function update(config) {\n      var $component = this.getElement();\n      var $border = $component.find('.badge-border');\n      var $badge = $component.find('.badge').removeClass('badge-info badge-success badge-warning badge-error icon-result-ok');\n      var $loader = $component.find('.loader');\n      var displayValue;\n\n      _.assign(this.config, config);\n\n      if (this.config && this.config.value) {\n        displayValue = parseInt(this.config.value, 10);\n        displayValue = displayValue > 99 ? '99+' : displayValue; //only display up to a value of 99\n        //set status\n\n        if (_allowedTypes.indexOf(this.config.type) === -1) {\n          throw new Error('Invalid badge type : '.this.config.type);\n        }\n\n        $badge.addClass('badge-' + this.config.type).html(displayValue); //if any is running\n\n        if (this.config.loading) {\n          //replace by loading\n          hider.show($loader);\n          hider.hide($border);\n        } else {\n          hider.hide($loader);\n          hider.show($border);\n        }\n      } else {\n        //idle state as no border nor loader\n        hider.hide($loader);\n        hider.hide($border); //set the complete state (with the check box icon and clear any number in it)\n\n        $badge.addClass('icon-result-ok').empty();\n      }\n\n      return this;\n    }\n  };\n  /**\n   * Create a badge that indicates the status and a number\n   *\n   * @param {Object} config - the component config\n   * @param {Number} config.value - the number to be display in the badge, if above 99, the 99+ will be displayed instead\n   * @param {String} config.type - define the type of the badge (success, error, info)\n   * @param {Boolean} [config.loading] - if true, show the loading animation around it\n   * @returns {badge} the component\n   */\n\n  function badgeFactory(config) {\n    var initConfig = _.defaults(config || {}, _defaults);\n    /**\n     * The component\n     * @typedef {ui/component} badge\n     */\n\n\n    return component(badgeApi).setTemplate(badgeTpl).on('render', function () {\n      this.update(this.config);\n    }).init(initConfig);\n  }\n\n  return badgeFactory;\n\n});\n\n","define('ui/transformer',['jquery', 'lodash', 'lib/unmatrix/unmatrix'], function ($, _, _unmatrix) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    _unmatrix = _unmatrix && _unmatrix.hasOwnProperty('default') ? _unmatrix['default'] : _unmatrix;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n     *\n     */\n    var ns = 'transformer';\n    var vendorPrefixes = ['webkit', 'ms'];\n    /**\n     * Figure out the vendor prefix, if any\n     */\n\n    var prefix = function () {\n      var i = vendorPrefixes.length,\n          style = window.getComputedStyle(document.body, null);\n\n      if (style.getPropertyValue('transform')) {\n        return '';\n      }\n\n      while (i--) {\n        if (style[vendorPrefixes[i] + 'Transform'] !== undefined) {\n          return '-' + vendorPrefixes[i] + '-';\n        }\n      }\n    }();\n    /**\n     * Get the transformation of an element\n     *\n     * @param elem\n     * @returns {{matrix: string, obj: obj }}\n     */\n\n\n    var _getTransformation = function _getTransformation(elem) {\n      var _style = window.getComputedStyle(elem, null),\n          matrix = _style.getPropertyValue('transform') || _style.getPropertyValue('-webkit-transform') || _style.getPropertyValue('-ms-transform') || 'none',\n          obj = _unmatrix(matrix);\n\n      return {\n        matrix: matrix,\n        obj: obj\n      };\n    };\n    /**\n     * Get the transformation origin of an element\n     *\n     * @param elem\n     * @returns {string}\n     * @private\n     */\n\n\n    var _getTransformOrigin = function _getTransformOrigin(elem) {\n      var _style = window.getComputedStyle(elem, null);\n\n      return _style.getPropertyValue('transform-origin') || _style.getPropertyValue('-webkit-transform-origin') || _style.getPropertyValue('-ms-transform-origin') || '50% 50% 0';\n    };\n    /**\n     * Normalize property keys to the same format unmatrix uses\n     *\n     * @param transforms\n     * @returns {*}\n     * @private\n     */\n\n\n    function _normalizeTransforms(transforms) {\n      var xy = ['translate', 'scale'],\n          i = xy.length;\n\n      while (i--) {\n        if (transforms[xy[i]]) {\n          if (_.isArray(transforms[xy[i]]) && transforms[xy[i]].length === 2) {\n            transforms[xy[i] + 'X'] = transforms[xy[i]][0];\n            transforms[xy[i] + 'Y'] = transforms[xy[i]][1];\n          } else {\n            transforms[xy[i] + 'X'] = transforms[xy[i]];\n            transforms[xy[i] + 'Y'] = transforms[xy[i]];\n          }\n\n          delete transforms[xy[i]];\n        }\n      }\n\n      return transforms;\n    }\n    /**\n     * Transform the container with the given configuration\n     *\n     * @param $elem\n     * @param {Object} transforms\n     * @param {Number|Array} [transforms.translate] 20|[20,30], assumes px\n     * @param {Number} [transforms.translateX] dto.\n     * @param {Number} [transforms.translateY] dto.\n     * @param {Number} [transforms.rotate] 20, assumes deg\n     * @param {Number} [transforms.skew] 20 dto.\n     * @param {Number|Array} [transforms.scale] 2|[2,3], assumes 'times original size'\n     * @param {Number} [transforms.scaleX] dto.\n     * @param {Number} [transforms.scaleY] dto.\n     */\n\n\n    function _transform($elem, transforms) {\n      var cssObj = {},\n          defaults = _unmatrix('none'),\n          classNames = [],\n          oriTrans;\n\n      transforms = _normalizeTransforms(transforms); // memorize old transformation\n\n      if (!$elem.data('oriTrans')) {\n        oriTrans = _getTransformation($elem[0]);\n        oriTrans.origin = _getTransformOrigin($elem[0]);\n        $elem.data('oriTrans', oriTrans);\n      }\n\n      cssObj[prefix + 'transform'] = ''; // generate the style\n\n      _.forIn(transforms, function (value, key) {\n        // ignore values that aren't numeric\n        if (_.isNaN(value)) {\n          return true;\n        }\n\n        value = parseFloat(value); // apply original transformation if applicable\n\n        if ($elem.data('oriTrans').obj[key] !== defaults[key]) {\n          if (key.indexOf('scale') > -1) {\n            value *= $elem.data('oriTrans').obj[key];\n          } else {\n            value += $elem.data('oriTrans').obj[key];\n          }\n        }\n\n        if (undefined !== defaults[key] && value !== defaults[key]) {\n          if (key.indexOf('translate') > -1) {\n            value += 'px';\n          } else if (key === 'rotate' || key.indexOf('skew') > -1) {\n            value += 'deg';\n          }\n\n          cssObj[prefix + 'transform'] += key + '(' + value + ') ';\n          classNames.push('transform-' + key.replace(/(X|Y)$/i, ''));\n        }\n      });\n\n      cssObj[prefix + 'transform'] = $.trim(cssObj[prefix + 'transform']);\n      $elem.css(cssObj);\n      $elem.removeClass('transform-translate transform-rotate transform-skew transform-scale');\n      $elem.addClass(_.unique(classNames).join(' '));\n      $elem.trigger('transform.' + ns, transforms);\n    }\n    /**\n     * @exports\n     */\n\n\n    var transformer = {\n      /**\n       * Translate\n       *\n       * @param $elem\n       * @param {Number} valueX\n       * @param {Number} [valueY], defaults to valueX\n       */\n      translate: function translate($elem, valueX, valueY) {\n        valueY = valueY || valueX;\n\n        _transform($elem, {\n          translateX: valueX,\n          translateY: valueY\n        });\n      },\n\n      /**\n       * Translate X/Y\n       *\n       * @param $elem\n       * @param {Number} valueX\n       * @param {Number} valueY, does not default to valueX\n       */\n      translateXY: function translateXY($elem, valueX, valueY) {\n        _transform($elem, {\n          translateX: valueX,\n          translateY: valueY\n        });\n      },\n\n      /**\n       * TranslateX\n       *\n       * @param $elem\n       * @param value\n       */\n      translateX: function translateX($elem, value) {\n        _transform($elem, {\n          translateX: value\n        });\n      },\n\n      /**\n       * TranslateY\n       *\n       * @param $elem\n       * @param value\n       */\n      translateY: function translateY($elem, value) {\n        _transform($elem, {\n          translateY: value\n        });\n      },\n\n      /**\n       * Rotate\n       *\n       * @param $elem\n       * @param value\n       */\n      rotate: function rotate($elem, value) {\n        _transform($elem, {\n          rotate: value\n        });\n      },\n\n      /**\n       * Skew\n       *\n       * @param $elem\n       * @param value\n       */\n      skew: function skew($elem, value) {\n        _transform($elem, {\n          skew: value\n        });\n      },\n\n      /**\n       * Scale\n       *\n       * @param $elem\n       * @param {Number} valueX\n       * @param {Number} [valueY], defaults to valueX\n       */\n      scale: function scale($elem, valueX, valueY) {\n        valueY = valueY || valueX;\n\n        _transform($elem, {\n          scaleX: valueX,\n          scaleY: valueY\n        });\n      },\n\n      /**\n       * ScaleX\n       *\n       * @param $elem\n       * @param value\n       */\n      scaleX: function scaleX($elem, value) {\n        _transform($elem, {\n          scaleX: value\n        });\n      },\n\n      /**\n       * ScaleY\n       *\n       * @param $elem\n       * @param value\n       */\n      scaleY: function scaleY($elem, value) {\n        _transform($elem, {\n          scaleY: value\n        });\n      },\n\n      /**\n       * Remove all transformations added by this code\n       *\n       * @param $elem\n       * @param value\n       */\n      reset: function reset($elem) {\n        var cssObj = {}; // when called on a container that has never been transformed\n\n        if (!$elem.data('oriTrans')) {\n          return;\n        }\n\n        cssObj[prefix + 'transform'] = $elem.data('oriTrans').matrix;\n        cssObj[prefix + 'transform-origin'] = $elem.data('oriTrans').origin;\n        $elem.css(cssObj);\n        $elem.removeClass('transform-translate transform-rotate transform-skew transform-scale');\n        $elem.trigger('reset.' + ns, $elem.data('oriTrans'));\n      },\n\n      /**\n       * Get current transformation. Though _getTransformation() expects a DOM element\n       * jQuery elements are also accepted to keep the same format the other functions have.\n       *\n       * @param {DomElement|jQueryElement} elem\n       * @returns {{matrix: string, obj: obj}}\n       */\n      getTransformation: function getTransformation(elem) {\n        if (elem instanceof $) {\n          elem = elem[0];\n        }\n\n        return _getTransformation(elem);\n      },\n\n      /**\n       * Set the transformation origin to another value\n       *\n       * @param $elem\n       * @param {String|Number} valueX\n       * @param {String|Number} [valueY]\n       * @private\n       */\n      setTransformOrigin: function setTransformOrigin($elem, valueX, valueY) {\n        var cssObj = {};\n        cssObj[prefix + 'transform-origin'] = !valueY && valueY !== 0 ? valueX : valueX + ' ' + valueY;\n        $elem.css(cssObj);\n      }\n    };\n\n    return transformer;\n\n});\n\n","define('ui/component/placeable',['lodash', 'ui/transformer'], function (_, transformer) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    transformer = transformer && transformer.hasOwnProperty('default') ? transformer['default'] : transformer;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n     */\n    var defaultConfig = {\n      initialX: 0,\n      initialY: 0\n    };\n    var positioningMode = 'absolute';\n    var placeableComponent = {\n      /**\n       * Set the translation of the component\n       * @param {Number} xOffsetAbsolute\n       * @param {Number} yOffsetAbsolute\n       *\n       * @fires Component#move\n       * @private\n       */\n      _translate: function _translate(xOffsetAbsolute, yOffsetAbsolute) {\n        var $element = this.getElement();\n        transformer.translateXY($element, xOffsetAbsolute, yOffsetAbsolute); // retrieving current translate values is a costly process (see ui/transformer and/or lib/unmatrix)\n        // thus, we store them as custom attributes for later use, and especially when a relative transform will be needed (eg, .moveBy())\n\n        this._translateX = xOffsetAbsolute;\n        this._translateY = yOffsetAbsolute; // we also save current coordinates instead so we don't need to compute them each time they are needed\n\n        this._x = xOffsetAbsolute + this.config.initialX;\n        this._y = yOffsetAbsolute + this.config.initialY;\n        /**\n         * @event Component#move - the component has moved\n         * @param {Number} newX\n         * @param {Number} newY\n         */\n\n        this.trigger('move', this._x, this._y);\n      },\n\n      /**\n       * Center the component inside its parent container\n       * @returns {Component} chains\n       *\n       * @fires Component#center\n       */\n      center: function center() {\n        var $container = this.getContainer(),\n            $element = this.getElement(),\n            centerX,\n            centerY;\n\n        if (this.is('rendered') && !this.is('disabled')) {\n          if ($container.length) {\n            centerX = $container.width() / 2 - $element.width() / 2;\n            centerY = $container.height() / 2 - $element.height() / 2;\n            this.moveTo(centerX, centerY);\n            /**\n             * @event Component#center the component has been centered\n             * @param {Number} centerX\n             * @param {Number} centerY\n             */\n\n            this.trigger('center', centerX, centerY);\n          }\n        }\n\n        return this;\n      },\n\n      /**\n       * Moves the component by the given offset, which is relative to the current position\n       * @param {Number} xOffsetRelative\n       * @param {Number} yOffsetRelative\n       * @returns {Component} chains\n       */\n      moveBy: function moveBy(xOffsetRelative, yOffsetRelative) {\n        var xOffsetAbsolute, yOffsetAbsolute;\n\n        if (this.is('rendered') && !this.is('disabled')) {\n          xOffsetAbsolute = this._translateX + xOffsetRelative;\n          yOffsetAbsolute = this._translateY + yOffsetRelative;\n\n          this._translate(xOffsetAbsolute, yOffsetAbsolute);\n        }\n\n        return this;\n      },\n\n      /**\n       * Moves the component to the given position\n       * @param {Number} x\n       * @param {Number} y\n       * @returns {Component} chains\n       */\n      moveTo: function moveTo(x, y) {\n        var xOffsetAbsolute, yOffsetAbsolute;\n\n        if (this.is('rendered') && !this.is('disabled')) {\n          xOffsetAbsolute = x - this.config.initialX;\n          yOffsetAbsolute = y - this.config.initialY;\n\n          this._translate(xOffsetAbsolute, yOffsetAbsolute);\n        }\n\n        return this;\n      },\n\n      /**\n       * Moves the component to the given X position\n       * @param {Number} x\n       * @returns {Component} chains\n       */\n      moveToX: function moveToX(x) {\n        return this.moveTo(x, this._y);\n      },\n\n      /**\n       * Moves the component to the given Y position\n       * @param {Number} y\n       * @returns {Component} chains\n       */\n      moveToY: function moveToY(y) {\n        return this.moveTo(this._x, y);\n      },\n\n      /**\n       * Restore the default position of the component\n       * @returns {Component} chains\n       */\n      resetPosition: function resetPosition() {\n        var $element = this.getElement();\n\n        if (this.is('rendered')) {\n          // set default position\n          $element.css({\n            left: this.config.initialX,\n            top: this.config.initialY\n          }); // reset translations\n\n          this._translate(0, 0);\n        }\n\n        return this;\n      },\n\n      /**\n       * Gets the actual position of the component inside its container,\n       * with respect to the possible translation\n       * @returns {Object}\n       */\n      getPosition: function getPosition() {\n        var position;\n\n        if (this.is('rendered')) {\n          position = {\n            x: this._x || 0,\n            y: this._y || 0\n          };\n        }\n\n        return position;\n      }\n    };\n    /**\n     * @param {Component} component - an instance of ui/component\n     * @param {Object} config\n     * @param {Number} config.initialX - x start position\n     * @param {Number} config.initialY - y start position\n     */\n\n    function makePlaceable(component, config) {\n      _.assign(component, placeableComponent);\n\n      return component.off('.makePlaceable').on('init.makePlaceable', function () {\n        _.defaults(this.config, config || {}, defaultConfig);\n      }).on('render.makePlaceable', function () {\n        var $element = this.getElement();\n        $element.css({\n          position: positioningMode\n        });\n        this.resetPosition();\n      });\n    }\n    /**\n     * Check that the given component implements the placeableComponent API\n     * @param {Component} component - an instance of ui/component\n     * @returns {boolean}\n     */\n\n\n    makePlaceable.isPlaceable = function isPlaceable(component) {\n      return Object.keys(placeableComponent).every(function (method) {\n        return typeof component[method] === 'function';\n      });\n    };\n\n    return makePlaceable;\n\n});\n\n","define('ui/component/alignable',['lodash', 'ui/component/placeable'], function (_, makePlaceable) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    makePlaceable = makePlaceable && makePlaceable.hasOwnProperty('default') ? makePlaceable['default'] : makePlaceable;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n    var defaultConfig = {};\n    var alignDefaults = {\n      hPos: 'center',\n      vPos: 'center'\n    };\n    var alignableComponent = {\n      /**\n       * Place the component using another element as a reference position\n       * @param {jQuery} $element - the reference element\n       * @param {Object} [options]\n       * @param {('left'|'center'|'right')} [options.hPos] - horizontal position relative to the reference element\n       * @param {('left'|'center'|'right')} [options.hOrigin] - the origin of the transformation\n       * @param {Number} [options.hOffset] - horizontal offset\n       * @param {('top'|'center'|'bottom')} [options.vPos] - vertical position relative to the reference element\n       * @param {('top'|'center'|'bottom')} [options.vOrigin] - the origin of the transformation\n       * @param {Number} [options.vOffset] - vertical offset\n       * @returns {Component} chains\n       */\n      alignWith: function alignWith($element, options) {\n        var alignedCoords = this._getAlignedCoords($element, options);\n\n        return this.moveTo(alignedCoords.x, alignedCoords.y);\n      },\n\n      /**\n       * Place the component so it is horizontally aligned with a reference element\n       * @param {jQuery} $element - the reference element\n       * @param {('left'|'center'|'right')} [hPos] - horizontal position relative to the reference element\n       * @param {('left'|'center'|'right')} [hOrigin] - the origin of the transformation\n       * @param {Number} [hOffset] - horizontal offset\n       * @returns {Component} chains\n       */\n      hAlignWith: function hAlignWith($element, hPos, hOrigin, hOffset) {\n        var alignedCoords = this._getAlignedCoords($element, {\n          hPos: hPos,\n          hOrigin: hOrigin,\n          hOffset: hOffset\n        });\n\n        return this.moveToX(alignedCoords.x);\n      },\n\n      /**\n       * Place the component so it is vertically aligned with a reference element\n       * @param {jQuery} $element - the reference element\n       * @param {('top'|'center'|'bottom')} [vPos] - vertical position relative to the reference element\n       * @param {('top'|'center'|'bottom')} [vOrigin] - the origin of the transformation\n       * @param {Number} [vOffset] - vertical offset\n       * @returns {Component} chains\n       */\n      vAlignWith: function vAlignWith($element, vPos, vOrigin, vOffset) {\n        var alignedCoords = this._getAlignedCoords($element, {\n          vPos: vPos,\n          vOrigin: vOrigin,\n          vOffset: vOffset\n        });\n\n        return this.moveToY(alignedCoords.y);\n      },\n\n      /**\n       * Get the coordinates of the component so it is aligned with a reference element\n       * @param {jQuery} $element - the reference element\n       * @param {Object} [options]\n       * @param {('left'|'center'|'right')} [options.hPos] - horizontal position relative to the reference element\n       * @param {('left'|'center'|'right')} [options.hOrigin] - the origin of the transformation\n       * @param {Number} [options.hOffset] - horizontal offset\n       * @param {('top'|'center'|'bottom')} [options.vPos] - vertical position relative to the reference element\n       * @param {('top'|'center'|'bottom')} [options.vOrigin] - the origin of the transformation\n       * @param {Number} [options.vOffset] - vertical offset\n       * @returns {x,y} - the aligned coordinates\n       * @private\n       */\n      _getAlignedCoords: function _getAlignedCoords($element, options) {\n        var $container = this.getContainer(),\n            componentOuterSize,\n            containerOffset,\n            elementOffset,\n            elementWidth,\n            elementHeight,\n            x,\n            y,\n            hPos,\n            vPos,\n            hOrigin,\n            vOrigin;\n        options = options || {};\n        componentOuterSize = this.getOuterSize();\n        containerOffset = $container.offset();\n        elementOffset = $element.offset();\n        elementWidth = $element.outerWidth();\n        elementHeight = $element.outerHeight();\n        hPos = options.hPos || alignDefaults.hPos;\n        vPos = options.vPos || alignDefaults.vPos;\n        hOrigin = options.hOrigin || this._getDefaultHOrigin(options.hPos);\n        vOrigin = options.vOrigin || this._getDefaultVOrigin(options.vPos);\n        x = elementOffset.left - containerOffset.left;\n        y = elementOffset.top - containerOffset.top; // compute X\n\n        switch (hPos) {\n          case 'center':\n            {\n              x += elementWidth / 2;\n              break;\n            }\n\n          case 'right':\n            {\n              x += elementWidth;\n              break;\n            }\n        }\n\n        switch (hOrigin) {\n          case 'center':\n            {\n              x -= componentOuterSize.width / 2;\n              break;\n            }\n\n          case 'right':\n            {\n              x -= componentOuterSize.width;\n              break;\n            }\n        }\n\n        x += options.hOffset || 0; // compute Y\n\n        switch (vPos) {\n          case 'center':\n            {\n              y += elementHeight / 2;\n              break;\n            }\n\n          case 'bottom':\n            {\n              y += elementHeight;\n              break;\n            }\n        }\n\n        switch (vOrigin) {\n          case 'center':\n            {\n              y -= componentOuterSize.height / 2;\n              break;\n            }\n\n          case 'bottom':\n            {\n              y -= componentOuterSize.height;\n              break;\n            }\n        }\n\n        y += options.vOffset || 0;\n        return {\n          x: x,\n          y: y\n        };\n      },\n\n      /**\n       * The default hOrigin changes according to the hPos value\n       * - left => right\n       *              REFERENCE_ELEMENT\n       *     COMPONENT\n       * - center => center\n       *              REFERENCE_ELEMENT\n       *                  COMPONENT\n       * - right => left\n       *              REFERENCE_ELEMENT\n       *                               COMPONENT\n       * @returns {('left'|'center'|'right')}\n       * @private\n       */\n      _getDefaultHOrigin: function _getDefaultHOrigin(hPos) {\n        var hOrigin;\n\n        switch (hPos) {\n          default:\n          case 'center':\n            {\n              hOrigin = 'center';\n              break;\n            }\n\n          case 'left':\n            {\n              hOrigin = 'right';\n              break;\n            }\n\n          case 'right':\n            {\n              hOrigin = 'left';\n              break;\n            }\n        }\n\n        return hOrigin;\n      },\n\n      /**\n       * The default vOrigin changes according to the vPos value\n       * - top => bottom\n       *                               COMPONENT\n       *              REFERENCE_ELEMENT\n       * - center => center\n       *              REFERENCE_ELEMENT COMPONENT\n       * - bottom => top\n       *              REFERENCE_ELEMENT\n       *                               COMPONENT\n       * @returns {('top'|'center'|'bottom')}\n       * @private\n       */\n      _getDefaultVOrigin: function _getDefaultVOrigin(vPos) {\n        var vOrigin;\n\n        switch (vPos) {\n          default:\n          case 'center':\n            {\n              vOrigin = 'center';\n              break;\n            }\n\n          case 'top':\n            {\n              vOrigin = 'bottom';\n              break;\n            }\n\n          case 'bottom':\n            {\n              vOrigin = 'top';\n              break;\n            }\n        }\n\n        return vOrigin;\n      }\n    };\n    /**\n     * @param {Component} component - an instance of ui/component\n     * @param {Object} config\n     */\n\n    function makeAlignable(component, config) {\n      _.assign(component, alignableComponent);\n\n      if (!makePlaceable.isPlaceable(component)) {\n        makePlaceable(component);\n      }\n\n      return component.off('.makeAlignable').on('init.makeAlignable', function () {\n        _.defaults(this.config, config || {}, defaultConfig);\n      });\n    }\n\n    return makeAlignable;\n\n});\n\n","\ndefine('css!ui/animable/absorbable/css/absorb',[],function(){});\n","define('ui/animable/absorbable/absorbable',['lodash', 'ui/component', 'ui/component/alignable', 'handlebars', 'i18n', 'lib/dompurify/purify', 'css!ui/animable/absorbable/css/absorb.css'], function (_, componentFactory, makeAlignable, Handlebars, __, DOMPurify, absorb_css) { 'use strict';\n\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  componentFactory = componentFactory && componentFactory.hasOwnProperty('default') ? componentFactory['default'] : componentFactory;\n  makeAlignable = makeAlignable && makeAlignable.hasOwnProperty('default') ? makeAlignable['default'] : makeAlignable;\n  Handlebars = Handlebars && Handlebars.hasOwnProperty('default') ? Handlebars['default'] : Handlebars;\n  __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n  DOMPurify = DOMPurify && DOMPurify.hasOwnProperty('default') ? DOMPurify['default'] : DOMPurify;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function Helpers0 (hb) {\n    //register a i18n helper\n    hb.registerHelper('__', function (key) {\n      return __(key);\n    });\n    /**\n     * Register dompurify helper\n     *\n     * https://github.com/cure53/DOMPurify\n     * with config SAFE_FOR_TEMPLATES: true\n     * to make output safe for template systems\n     */\n\n    hb.registerHelper('dompurify', function (context) {\n      return DOMPurify.sanitize(context);\n    });\n    /**\n     * Register join helper\n     *\n     * Example :\n     * var values = {a:v1, b:v2, c:v3};\n     * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n     * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n     */\n\n    hb.registerHelper('join', function (arr, keyValueGlue, fragmentGlue, wrapper) {\n      var fragments = [];\n      keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n      fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n      wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n      _.forIn(arr, function (value, key) {\n        var fragment = '';\n\n        if (value !== null || value !== undefined) {\n          if (typeof value === 'boolean') {\n            value = value ? 'true' : 'false';\n          } else if (_typeof(value) === 'object') {\n            value = _.values(value).join(' ');\n          }\n        } else {\n          value = '';\n        }\n\n        if (keyValueGlue !== undefined) {\n          fragment += key + keyValueGlue;\n        }\n\n        fragment += wrapper + value + wrapper;\n        fragments.push(fragment);\n      });\n\n      return fragments.join(fragmentGlue);\n    }); //register a classic \"for loop\" helper\n    //it also adds a local variable \"i\" as the index in each iteration loop\n\n    hb.registerHelper('for', function (startIndex, stopIndex, increment, options) {\n      var ret = '';\n      startIndex = parseInt(startIndex);\n      stopIndex = parseInt(stopIndex);\n      increment = parseInt(increment);\n\n      for (var i = startIndex; i < stopIndex; i += increment) {\n        ret += options.fn(_.extend({}, this, {\n          i: i\n        }));\n      }\n\n      return ret;\n    });\n    hb.registerHelper('equal', function (var1, var2, options) {\n      if (var1 == var2) {\n        return options.fn(this);\n      } else {\n        return options.inverse(this);\n      }\n    }); // register a \"get property\" helper\n    // it gets the named property from the provided context\n\n    hb.registerHelper('property', function (name, context) {\n      return context[name] || '';\n    }); // register an 'includes' helper\n    // it checks if value is in array\n\n    hb.registerHelper('includes', function (haystack, needle, options) {\n      if (_.contains(haystack, needle)) {\n        return options.fn(this);\n      }\n    });\n  }\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n    return \"<div class=\\\"absorbable\\\"></div>\";\n    });\n  function absorbTpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /**\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n   */\n  var defaultConfig = {\n    animationDuration: 1\n  };\n  var absorbableComponent = {\n    /**\n     * Generate an absorbing animation from a target element to the component\n     * @param {JQuery} $target - the target dom where the absorb animation should start\n     * @returns {Promise} - resolved when the animation is over\n     */\n    absorb: function absorb($target) {\n      var self = this;\n      var $component = this.getElement();\n      var targetWidth = $target.width();\n      var targetHeight = $target.height();\n      var finalWidth = 10;\n      var finalHeight = 10;\n      var animationDuration = parseInt(this.config.animationDuration, 10) || defaultConfig.animationDuration;\n      var animationStartOffset = 10; //safety duration padding to allow styles to be properly applied\n\n      var animatedComponent = makeAlignable(componentFactory()).setTemplate(absorbTpl).init().render($component).setSize(targetWidth, targetHeight).alignWith($target, {\n        hPos: 'center',\n        vPos: 'center',\n        hOrigin: 'center',\n        vOrigin: 'center'\n      });\n\n      if ($component.css('position') === 'static') {\n        $component.css('position', 'relative');\n      }\n\n      return new Promise(function (resolve) {\n        _.delay(function () {\n          //css\n          animatedComponent.getElement().addClass('animate').css({\n            transitionDuration: animationDuration + 's'\n          });\n          animatedComponent.setSize(finalWidth, finalHeight).alignWith($component, {\n            hPos: 'center',\n            vPos: 'center',\n            hOrigin: 'center',\n            vOrigin: 'center',\n            hOffset: targetWidth / 2 - finalWidth / 2,\n            vOffset: targetHeight / 2 - finalHeight / 2\n          });\n\n          _.delay(function () {\n            animatedComponent.destroy();\n            resolve(self); //finish the animation by resolving the promise\n          }, 1000 * animationDuration + animationStartOffset);\n        }, animationStartOffset);\n      });\n    },\n\n    /**\n     * Generate a sequence of absorbing animation from a target element to the component.\n     *\n     * @param {JQuery} $target - the target dom where the absorb animation should start\n     * @param {Array} delayArray - the array of time an absorb animation should successively start\n     * @returns {Promise} - resolved when the animation is over\n     */\n    absorbBurst: function absorbBurst($target, delayArray) {\n      var animations = [];\n      var self = this;\n      delayArray = _.isArray(delayArray) ? delayArray : [0];\n\n      _.forEach(delayArray, function (startTimeOffset) {\n        animations.push(new Promise(function (resolve) {\n          _.delay(function () {\n            self.absorb($target).then(resolve);\n          }, startTimeOffset);\n        }));\n      });\n\n      return Promise.all(animations);\n    }\n  };\n  /**\n   * @param {Component} component - an instance of ui/component\n   * @param {Object} config\n   */\n\n  function makeAbsorbable(component, config) {\n    _.assign(component, absorbableComponent);\n\n    return component.off('.makeAbsorbable').on('init.makeAbsorbable', function () {\n      _.defaults(this.config, config || {}, defaultConfig);\n    });\n  }\n\n  return makeAbsorbable;\n\n});\n\n","\ndefine('css!ui/animable/pulsable/css/pulse',[],function(){});\n","define('ui/animable/pulsable/pulsable',['lodash', 'ui/component', 'ui/component/alignable', 'handlebars', 'i18n', 'lib/dompurify/purify', 'css!ui/animable/pulsable/css/pulse.css'], function (_, componentFactory, makeAlignable, Handlebars, __, DOMPurify, pulse_css) { 'use strict';\n\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  componentFactory = componentFactory && componentFactory.hasOwnProperty('default') ? componentFactory['default'] : componentFactory;\n  makeAlignable = makeAlignable && makeAlignable.hasOwnProperty('default') ? makeAlignable['default'] : makeAlignable;\n  Handlebars = Handlebars && Handlebars.hasOwnProperty('default') ? Handlebars['default'] : Handlebars;\n  __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n  DOMPurify = DOMPurify && DOMPurify.hasOwnProperty('default') ? DOMPurify['default'] : DOMPurify;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function Helpers0 (hb) {\n    //register a i18n helper\n    hb.registerHelper('__', function (key) {\n      return __(key);\n    });\n    /**\n     * Register dompurify helper\n     *\n     * https://github.com/cure53/DOMPurify\n     * with config SAFE_FOR_TEMPLATES: true\n     * to make output safe for template systems\n     */\n\n    hb.registerHelper('dompurify', function (context) {\n      return DOMPurify.sanitize(context);\n    });\n    /**\n     * Register join helper\n     *\n     * Example :\n     * var values = {a:v1, b:v2, c:v3};\n     * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n     * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n     */\n\n    hb.registerHelper('join', function (arr, keyValueGlue, fragmentGlue, wrapper) {\n      var fragments = [];\n      keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n      fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n      wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n      _.forIn(arr, function (value, key) {\n        var fragment = '';\n\n        if (value !== null || value !== undefined) {\n          if (typeof value === 'boolean') {\n            value = value ? 'true' : 'false';\n          } else if (_typeof(value) === 'object') {\n            value = _.values(value).join(' ');\n          }\n        } else {\n          value = '';\n        }\n\n        if (keyValueGlue !== undefined) {\n          fragment += key + keyValueGlue;\n        }\n\n        fragment += wrapper + value + wrapper;\n        fragments.push(fragment);\n      });\n\n      return fragments.join(fragmentGlue);\n    }); //register a classic \"for loop\" helper\n    //it also adds a local variable \"i\" as the index in each iteration loop\n\n    hb.registerHelper('for', function (startIndex, stopIndex, increment, options) {\n      var ret = '';\n      startIndex = parseInt(startIndex);\n      stopIndex = parseInt(stopIndex);\n      increment = parseInt(increment);\n\n      for (var i = startIndex; i < stopIndex; i += increment) {\n        ret += options.fn(_.extend({}, this, {\n          i: i\n        }));\n      }\n\n      return ret;\n    });\n    hb.registerHelper('equal', function (var1, var2, options) {\n      if (var1 == var2) {\n        return options.fn(this);\n      } else {\n        return options.inverse(this);\n      }\n    }); // register a \"get property\" helper\n    // it gets the named property from the provided context\n\n    hb.registerHelper('property', function (name, context) {\n      return context[name] || '';\n    }); // register an 'includes' helper\n    // it checks if value is in array\n\n    hb.registerHelper('includes', function (haystack, needle, options) {\n      if (_.contains(haystack, needle)) {\n        return options.fn(this);\n      }\n    });\n  }\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n    return \"<div class=\\\"pulsable animate\\\"></div>\";\n    });\n  function pulseTpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /**\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n   */\n  var defaultConfig = {\n    pulseCount: 3\n  };\n  var pulsableComponent = {\n    /**\n     * Show a pulse animation for a given number of time\n     * @param {Integer} [pulseCount] - number of time the component should pulse, if it is not given, takes the value define in the config\n     * @returns {Promise}\n     */\n    pulse: function pulse(pulseCount) {\n      var self = this;\n      var $component, pulseNb, animatedComponent;\n\n      if (this.config && this.is('rendered')) {\n        $component = this.getElement();\n\n        if ($component.css('position') === 'static') {\n          $component.css('position', 'relative');\n        }\n\n        pulseNb = parseInt(pulseCount || this.config.pulseCount || defaultConfig.pulseCount, 10);\n        animatedComponent = makeAlignable(componentFactory()).setTemplate(pulseTpl).init().render($component).alignWith($component, {\n          hPos: 'center',\n          vPos: 'center',\n          hOrigin: 'center',\n          vOrigin: 'center'\n        });\n        return new Promise(function (resolve) {\n          _.delay(function () {\n            animatedComponent.destroy();\n            resolve(self);\n          }, pulseNb * 1000); //one pulse per second\n\n        });\n      }\n\n      return Promise.resolve(this);\n    }\n  };\n  /**\n   * @param {Component} component - an instance of ui/component\n   * @param {Object} config\n   */\n\n  function makePulsable(component, config) {\n    _.assign(component, pulsableComponent);\n\n    return component.off('.makePulsable').on('init.makePulsable', function () {\n      _.defaults(this.config, config || {}, defaultConfig);\n    });\n  }\n\n  return makePulsable;\n\n});\n\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/element', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"task-element \";\n  if (helper = helpers.status) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.status); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <div class=\\\"container-icon\\\">\\n        <div class=\\\"shape\\\">\\n            <span class=\\\"\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"/>\\n        </div>\\n    </div>\\n    <div class=\\\"container-text\\\">\\n        <div class=\\\"label\\\">\";\n  if (helper = helpers.taskLabel) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.taskLabel); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"time\\\">\";\n  if (helper = helpers.time) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.time); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n    </div>\\n    <div class=\\\"action-group action-top\\\">\\n        <span data-role=\\\"remove\\\" class=\\\"icon-result-nok\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"remove\", options) : helperMissing.call(depth0, \"__\", \"remove\", options)))\n    + \"\\\"/>\\n    </div>\\n    <div class=\\\"action-group action-bottom\\\">\\n        <span data-role=\\\"notify\\\" class=\\\"icon-preview\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"notify me when done\", options) : helperMissing.call(depth0, \"__\", \"notify me when done\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"download\\\" class=\\\"icon-download\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"download\", options) : helperMissing.call(depth0, \"__\", \"download\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"redirect\\\" class=\\\"icon-external\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"go to resource\", options) : helperMissing.call(depth0, \"__\", \"go to resource\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"report\\\" class=\\\"icon-document\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"see report\", options) : helperMissing.call(depth0, \"__\", \"see report\", options)))\n    + \"\\\"/>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/element',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/element',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/component',\n    'ui/hider',\n    'tpl!taoTaskQueue/component/listing/tpl/element',\n    'css!taoTaskQueue/component/listing/css/element'\n], function ($, _, __, moment, component, hider, elementTpl) {\n    'use strict';\n\n    var _defaults = {\n    };\n\n    var _allowedStatus = ['in_progress', 'failed', 'completed'];\n\n    var _categoryMap = {\n        import : 'import',\n        export : 'export',\n        delivery_comp : 'delivery',\n        transfer : 'connect',\n        create : 'magicwand',\n        update : 'edit',\n        delete : 'bin'\n    };\n\n    var _statusIcon = {\n        in_progress : 'property-advanced',\n        completed: 'result-ok',\n        failed: 'result-nok',\n    };\n\n    /**\n     * Get the task name to be displayed to the user\n     * @param {Object} data - the standard task object\n     * @returns {String}\n     */\n    var getLabelString = function getLabelString(data){\n        return data.taskLabel;\n    };\n\n    /**\n     * Get the formatted duration string\n     * @param {Number} from - the start time in unix timestamp\n     * @param {Number} elapsed - the duration in seconds\n     * @returns {Number}\n     */\n    var getFormattedTime = function getFormattedTime(from, elapsed){\n        return moment.unix(from).from(moment.unix(parseInt(from, 10)+parseInt(elapsed, 10)));\n    };\n\n    /**\n     * Get the formatted time string according to the current task data\n     * @param data - the standard task object\n     * @returns {String}\n     */\n    var getTimeString = function getTimeString(data){\n        switch(data.status){\n            case 'created':\n            case 'in_progress':\n                return __('Started %s', getFormattedTime(data.createdAt, data.createdAtElapsed));\n            case 'completed':\n                return __('Completed %s', getFormattedTime(data.updatedAt, data.updatedAtElapsed));\n            case 'failed':\n                return __('Failed %s', getFormattedTime(data.updatedAt, data.updatedAtElapsed));\n            default:\n                return '';\n        }\n    };\n\n    /**\n     * Get the appropriate icon according to the task data\n     * @param {Object} data - the standard task object\n     * @returns {string}\n     */\n    var getIcon = function getIcon(data){\n        var icon;\n        if(!_.isPlainObject(data)){\n            throw new Error('invalid data');\n        }\n        if(data.category && _categoryMap[data.category]){\n            icon = _categoryMap[data.category];\n        }else if(data.status && _statusIcon[data.status]){\n            icon = _statusIcon[data.status];\n        }else {\n            icon = _statusIcon.in_progress;\n        }\n        return 'icon-'+icon;\n    };\n\n    var taskElementApi = {\n\n        /**\n         * Get the id of the task element\n         * @returns {String}\n         */\n        getId : function getId(){\n            if(this.data && this.data.id){\n                return this.data.id;\n            }\n        },\n\n        /**\n         * Get the status of the task element\n         * @returns {String}\n         */\n        getStatus : function getStatus(){\n            if(this.data && this.data.status){\n                return this.data.status;\n            }\n        },\n\n        /**\n         * Get the data of the task element\n         * @returns {Object}\n         */\n        getData : function getData(){\n            return this.data;\n        },\n\n        /**\n         * Update the data and rendering of it\n         * @param data\n         * @returns {taskElement}\n         */\n        update : function update(data){\n            var $container = this.getElement();\n\n            _.assign(this.data || {}, data);\n\n            $container.find('.shape > span').removeAttr('class').addClass(getIcon(this.data));\n            $container.find('.label').html(getLabelString(this.data));\n            $container.find('.time').html(getTimeString(this.data));\n\n            this.setStatus(this.data.status);\n            //bonus: check if there is any report and display the report button only when needed\n\n            hider.toggle($container.find('.action-bottom [data-role=\"download\"]'), this.data.hasFile);\n            hider.toggle($container.find('.action-bottom [data-role=\"redirect\"]'), !!this.data.redirectUrl);\n\n            this.trigger('update');\n            return this;\n        },\n\n        /**\n         * Add transition to highlight the element (useful after an update for instance)\n         * @returns {taskElement}\n         */\n        highlight : function highlight(){\n            var $container = this.getElement();\n            $container.addClass('highlight');\n            _.delay(function(){\n                $container.removeClass('highlight');\n            }, 500);\n            return this;\n        },\n\n        /**\n         * Set the status of the task element\n         * @param {String} status\n         * @returns {taskElement}\n         */\n        setStatus : function setStatus(status){\n            var self = this;\n            if(!status){\n                throw new Error('status should not be empty');\n            }\n\n            if(['created'].indexOf(status) !== -1){\n                status = 'in_progress';\n            }\n\n            if(_allowedStatus.indexOf(status) === -1){\n                throw new Error('unknown status '+status);\n            }\n            if(!this.is(status)){\n                _.forEach(_.without(_allowedStatus, status), function(st){\n                    self.setState(st, false);\n                });\n                this.setState(status, true);\n            }\n            return this;\n        }\n    };\n\n    /**\n     * Builds a task listing element\n     *\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskElement} the component\n     *\n     * @event remove - Emitted when the element requests to be removed\n     * @event download - Emitted when the element requests downloading its associated file\n     * @event report - Emitted when a list element requests its related report to be displayed\n     * @event update - Emitted when the display update is done\n     */\n    return function taskElementFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskElement\n         */\n        return component(taskElementApi)\n            .setTemplate(elementTpl)\n            .on('init', function(){\n                this.data = data || {};\n            })\n            .on('render', function() {\n\n                var self = this;\n                var $component = this.getElement();\n\n                this.update(data);\n\n                $component.find('[data-role=\"download\"]').click(function(){\n                    self.trigger('download');\n                });\n                $component.find('[data-role=\"remove\"]').click(function(){\n                    self.trigger('remove');\n                });\n                $component.find('[data-role=\"report\"]').click(function(){\n                    self.trigger('report');\n                });\n                $component.find('[data-role=\"redirect\"]').click(function(){\n                    self.trigger('redirect');\n                });\n\n            })\n            .init(initConfig);\n    };\n\n});\n","define('ui/report',['jquery', 'lodash', 'ui/component', 'handlebars', 'i18n', 'lib/dompurify/purify'], function ($$1, _, component, Handlebars, __, DOMPurify) { 'use strict';\n\n  $$1 = $$1 && $$1.hasOwnProperty('default') ? $$1['default'] : $$1;\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  component = component && component.hasOwnProperty('default') ? component['default'] : component;\n  Handlebars = Handlebars && Handlebars.hasOwnProperty('default') ? Handlebars['default'] : Handlebars;\n  __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n  DOMPurify = DOMPurify && DOMPurify.hasOwnProperty('default') ? DOMPurify['default'] : DOMPurify;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function Helpers0 (hb) {\n    //register a i18n helper\n    hb.registerHelper('__', function (key) {\n      return __(key);\n    });\n    /**\n     * Register dompurify helper\n     *\n     * https://github.com/cure53/DOMPurify\n     * with config SAFE_FOR_TEMPLATES: true\n     * to make output safe for template systems\n     */\n\n    hb.registerHelper('dompurify', function (context) {\n      return DOMPurify.sanitize(context);\n    });\n    /**\n     * Register join helper\n     *\n     * Example :\n     * var values = {a:v1, b:v2, c:v3};\n     * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n     * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n     */\n\n    hb.registerHelper('join', function (arr, keyValueGlue, fragmentGlue, wrapper) {\n      var fragments = [];\n      keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n      fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n      wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n      _.forIn(arr, function (value, key) {\n        var fragment = '';\n\n        if (value !== null || value !== undefined) {\n          if (typeof value === 'boolean') {\n            value = value ? 'true' : 'false';\n          } else if (_typeof(value) === 'object') {\n            value = _.values(value).join(' ');\n          }\n        } else {\n          value = '';\n        }\n\n        if (keyValueGlue !== undefined) {\n          fragment += key + keyValueGlue;\n        }\n\n        fragment += wrapper + value + wrapper;\n        fragments.push(fragment);\n      });\n\n      return fragments.join(fragmentGlue);\n    }); //register a classic \"for loop\" helper\n    //it also adds a local variable \"i\" as the index in each iteration loop\n\n    hb.registerHelper('for', function (startIndex, stopIndex, increment, options) {\n      var ret = '';\n      startIndex = parseInt(startIndex);\n      stopIndex = parseInt(stopIndex);\n      increment = parseInt(increment);\n\n      for (var i = startIndex; i < stopIndex; i += increment) {\n        ret += options.fn(_.extend({}, this, {\n          i: i\n        }));\n      }\n\n      return ret;\n    });\n    hb.registerHelper('equal', function (var1, var2, options) {\n      if (var1 == var2) {\n        return options.fn(this);\n      } else {\n        return options.inverse(this);\n      }\n    }); // register a \"get property\" helper\n    // it gets the named property from the provided context\n\n    hb.registerHelper('property', function (name, context) {\n      return context[name] || '';\n    }); // register an 'includes' helper\n    // it checks if value is in array\n\n    hb.registerHelper('includes', function (haystack, needle, options) {\n      if (_.contains(haystack, needle)) {\n        return options.fn(this);\n      }\n    });\n  }\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType=\"function\";\n\n  function program1(depth0,data) {\n    \n    \n    return \" no-border\";\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", helper, options;\n    buffer += \"\\n    <label class=\\\"fold pseudo-label-box\\\">\\n        <span class=\\\"check-txt hide\\\">\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide detailed report\", options) : helperMissing.call(depth0, \"__\", \"Hide detailed report\", options)))\n      + \"</span>\\n        <span class=\\\"check-txt show\\\">\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show detailed report\", options) : helperMissing.call(depth0, \"__\", \"Show detailed report\", options)))\n      + \"</span>\\n        <input type=\\\"checkbox\\\"/>\\n        <span class=\\\"icon-checkbox\\\"></span>\\n    </label>\\n    \";\n    return buffer;\n    }\n\n    buffer += \"<div class=\\\"component-report\";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.noBorder), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\">\\n    \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.detailsButtonVisible), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n    <div class=\\\"content\\\">\";\n    if (helper = helpers.content) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.content); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"</div>\\n</div>\";\n    return buffer;\n    });\n  function layoutTpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    \n    return \"hierarchical\";\n    }\n\n  function program3(depth0,data) {\n    \n    \n    return \"leaf\";\n    }\n\n  function program5(depth0,data) {\n    \n    \n    return \" hierarchical-icon\";\n    }\n\n  function program7(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"\\n        \";\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n    \";\n    return buffer;\n    }\n\n  function program9(depth0,data) {\n    \n    var buffer = \"\", stack1, helper;\n    buffer += \"\\n        <button data-trigger=\\\"\";\n    if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" class=\\\"action btn-info\\\" title=\\\"\";\n    if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"><span class=\\\"icon-\";\n    if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"></span>\";\n    if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"</button>\\n        \";\n    return buffer;\n    }\n\n    buffer += \"<div class=\\\"feedback-\";\n    if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \" \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasChildren), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\">\\n    <span class=\\\"icon-\";\n    if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1);\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasChildren), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\"></span>\\n    <div class=\\\"message\\\">\";\n    stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.message), options) : helperMissing.call(depth0, \"dompurify\", (depth0 && depth0.message), options));\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"</div>\\n    \";\n    stack1 = helpers.each.call(depth0, (depth0 && depth0.children), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n    <div class=\\\"actions\\\">\\n        \";\n    stack1 = helpers.each.call(depth0, (depth0 && depth0.actions), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n    </div>\\n</div>\";\n    return buffer;\n    });\n  function feedbackTpl(data, options, asString) {\n    var html = Template$1(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /**\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n   */\n  var _defaults = {\n    showDetailsButton: true,\n    actions: []\n  };\n  /**\n   * Array of authorized report types\n   * @type {Array}\n   */\n\n  var authorizedTypes = ['success', 'info', 'warning', 'error'];\n  /**\n   * Recursive function to render report messages\n   *\n   * @private\n   * @param {Object} data - a standard report object sent by the backend\n   * @param {String} data.type - the error type\n   * @param {String} data.message - the feedback message\n   * @param {Array} [data.children] - children report object\n   * @param {Array} [actions] - the actions buttons to be added, only for the first level of the hierarchy\n   * @returns {*}\n   */\n\n  var _renderFeebacks = function _renderFeebacks(data, actions) {\n    var children = [];\n\n    if (!data.type || authorizedTypes.indexOf(data.type) === -1) {\n      throw new TypeError('Unkown report type: ' + data.type);\n    }\n\n    if (_.isArray(data.children) && data.children.length) {\n      _.each(data.children, function (child) {\n        children.push(_renderFeebacks(child));\n      });\n    }\n\n    data.hasChildren = children.length > 0;\n    data.children = children;\n    data.actions = actions;\n    return feedbackTpl(data);\n  };\n\n  var report = {\n    /**\n     * Check if the details of the report are currently visible\n     * @returns {Boolean}\n     */\n    isDetailed: function isDetailed() {\n      return this.is('detailed');\n    },\n\n    /**\n     * Show the report details\n     *\n     * @returns {this}\n     * @fires reportComponent#showDetails\n     */\n    showDetails: function showDetails() {\n      if (this.is('rendered')) {\n        this.setState('detailed', true);\n        this.getElement().find('.fold input').prop('checked', true);\n        this.trigger('showDetails');\n      }\n\n      return this;\n    },\n\n    /**\n     * Hide the report details\n     *\n     * @returns {this}\n     * @fires reportComponent#hideDetails\n     */\n    hideDetails: function hideDetails() {\n      if (this.is('rendered')) {\n        this.setState('detailed');\n        this.getElement().find('.fold input').prop('checked', false);\n        this.trigger('hideDetails');\n      }\n\n      return this;\n    }\n  };\n  /**\n   * Create a simple report component\n   *\n   * @param {Object} config\n   * @param {Boolean} [config.showDetailsButton=true] - display the show/hide details toggle\n   * @param {Array} [config.actions] - possibility to add more button controls\n   * @param {Object} data - a standard report object\n   * @param {String} data.type - the type of the report\n   * @param {String} data.message - the message to be included in the report body (html allowed)\n   * @param {Array} [data.children] - children report object\n   * @returns {reportComponent}\n   */\n\n  var reportComponentFactory = function reportComponentFactory(config, data) {\n    var initConfig = _.defaults(config || {}, _defaults);\n\n    if (data && _.isArray(data.children) && data.children.length) {\n      initConfig.detailsButtonVisible = initConfig.showDetailsButton;\n    }\n    /**\n     * THe report component\n     * @typedef reportComponent\n     * @fires reportComponent#action\n     * @fires reportComponent#action-{custom action name}\n     */\n\n\n    return component(report).setTemplate(layoutTpl).on('render', function () {\n      var self = this;\n      var $content = this.getElement().find('.content');\n      var $checkbox = this.getElement().find('.fold input');\n      $content.append(_renderFeebacks(_.cloneDeep(data), this.config.actions)); //init actions:\n\n      $content.on('click', '.action', function () {\n        var actionId = $$1(this).data('trigger');\n        self.trigger('action-' + actionId);\n        self.trigger('action', actionId);\n      }); //ensure multiple fast clicks only activate the toggle once\n\n      $checkbox.on('change', _.throttle(function () {\n        if (self.isDetailed()) {\n          self.hideDetails();\n        } else {\n          self.showDetails();\n        }\n      }, 100));\n    }).init(initConfig);\n  };\n\n  return reportComponentFactory;\n\n});\n\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/report', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-detail-element\\\">\\n    <div class=\\\"detail-description\\\">\\n        <span class=\\\"label\\\"></span>\\n        <span class=\\\"time\\\"></span>\\n    </div>\\n    <div class=\\\"action-group action-top\\\">\\n        <span data-role=\\\"close\\\" class=\\\"icon-compress\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"close report\", options) : helperMissing.call(depth0, \"__\", \"close report\", options)))\n    + \"\\\"/>\\n    </div>\\n    <div class=\\\"detail-body\\\">\\n    </div>\\n    <div class=\\\"no-detail\\\">\\n        <span class=\\\"message\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No report available\", options) : helperMissing.call(depth0, \"__\", \"No report available\", options)))\n    + \"</span>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/report',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/report',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/component',\n    'ui/hider',\n    'ui/report',\n    'tpl!taoTaskQueue/component/listing/tpl/report',\n    'css!taoTaskQueue/component/listing/css/report'\n], function ($, _, __, moment, component, hider, reportFactory, elementTpl) {\n    'use strict';\n\n    var _defaults = {\n    };\n\n    var reportElementApi = {\n        /**\n         * Update the task report with the data\n         * @param {Object} data - the standard task log data\n         * @param {String} data.taskLabel - the task name to be displayed to user\n         * @param {Object} data.report - the standard report object\n         */\n        update : function update(data){\n\n            var $component = this.getElement();\n            $component.find('.label').html(data.taskLabel);\n\n            //set report here\n            if(data.report && _.isArray(data.report.children) && data.report.children.length){\n                this.setState('noreport', false);\n                reportFactory({replace:true}, data.report.children[0]).render($component.find('.detail-body'));\n            }else{\n                this.setState('noreport', true);\n            }\n        }\n    };\n\n    /**\n     * Builds a task listing element\n     *\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskReport} the component\n     *\n     * @event close - Emitted when the report needs to be closed\n     */\n    return function taskReportFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskReport\n         */\n        return component(reportElementApi)\n            .setTemplate(elementTpl)\n            .on('render', function() {\n\n                var self = this;\n                var $component = this.getElement();\n\n                this.update(data);\n\n                $component.find('[data-role=\"close\"]').click(function(){\n                    self.trigger('close');\n                });\n\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/list', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"task-listing\\\">\\n    <div class=\\\"box\\\">\\n        <div class=\\\"arrow\\\"></div>\\n        <div class=\\\"description\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"empty-placeholder\\\">\";\n  if (helper = helpers.emptyText) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.emptyText); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <ul class=\\\"task-list plain\\\"></ul>\\n        <div class=\\\"clear-box\\\">\\n            <a class=\\\"clear-all\\\" href=\\\"#\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Clear all finished tasks\", options) : helperMissing.call(depth0, \"__\", \"Clear all finished tasks\", options)))\n    + \"\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Clear all finished\", options) : helperMissing.call(depth0, \"__\", \"Clear all finished\", options)))\n    + \"</a>\\n        </div>\\n        <div class=\\\"view-detail\\\"></div>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/elementWrapper', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></li>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/list',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/list',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'taoTaskQueue/component/listing/element',\n    'tpl!taoTaskQueue/component/listing/tpl/list',\n    'tpl!taoTaskQueue/component/listing/tpl/elementWrapper',\n    'css!taoTaskQueue/component/listing/css/list'\n], function ($, _, __, component, listElementFactory, listTpl, elementWrapperTpl) {\n    'use strict';\n\n    var _defaults = {\n        title : 'Task List',\n        emptyText : __('The list is currently empty.')\n    };\n\n    var listApi = {\n        /**\n         * Remove a list element\n         * @param {taoTaskQueue/component/listing/element} listElement\n         * @returns {taskList}\n         */\n        removeElement : function removeElement(listElement){\n            listElement.destroy();\n            this.getElement().find('ul li[data-id=\"'+listElement.getId()+'\"]').remove();\n            return this;\n        },\n\n        /**\n         * Insert a list element\n         * @param {taoTaskQueue/component/listing/element} listElement\n         * @returns {taskList}\n         */\n        insertElement : function insertElement(listElement){\n            var id = listElement.getId();\n            var $li = $(elementWrapperTpl({\n                id : id\n            }));\n            this.getElement().find('ul').prepend($li);\n            listElement.render($li);\n            return this;\n        },\n\n        /**\n         * Show the detail\n         * @param {taoTaskQueue/component/listing/report} detailElement - the detail element to be shown\n         * @param {Booleam} [show] - should the detail of an element be immediately shown or not\n         * @returns {taskList}\n         */\n        setDetail : function setDetail(detailElement, show){\n            detailElement.render(this.getElement().find('.view-detail'));\n            if(show){\n                this.setState('detail-view', true);\n            }\n            return this;\n        },\n\n        /**\n         * Hide the detail panel and display the default list view again\n         * @returns {taskList}\n         */\n        hideDetail : function hideDetail(){\n            this.setState('detail-view', false);\n            return this;\n        },\n\n        /**\n         * Scroll to the top of the list\n         * @returns {taskList}\n         */\n        scrollToTop : function scrollToTop(){\n            this.getElement().find('.task-list').get(0).scrollTo(0, 0);\n            return this;\n        },\n\n        /**\n         * Animate the insertion tset emphasis on it\n         * @param listElement\n         * @returns {taskList}\n         */\n        animateInsertion : function animateInsertion(listElement){\n            var $listElement = listElement.getElement();\n            var $container = $listElement.parent();\n            $container.addClass('inserting');\n            $listElement.addClass('new-element');\n            _.delay(function(){\n                $container.removeClass('inserting');\n                _.delay(function(){\n                    $listElement.removeClass('new-element');\n                }, 400);\n            },100);\n            return this;\n        }\n    };\n\n    /**\n     * Builds a simple task list component\n     *\n     * @param {Object} config - the component config\n     * @returns {taskList} the component\n     */\n    return function taskListFactory(config) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskList\n         */\n        return component(listApi)\n            .setTemplate(listTpl)\n            .on('render', function(){\n                var self = this;\n                this.getElement().find('.clear-all').on('click', function(e){\n                    e.preventDefault();\n                    self.trigger('clearall');\n                });\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/manager/tpl/manager', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-manager-container\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Background tasks\", options) : helperMissing.call(depth0, \"__\", \"Background tasks\", options)))\n    + \"\\\">\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/manager/css/manager',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/manager/manager',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'layout/loading-bar',\n    'ui/hider',\n    'ui/component',\n    'ui/badge/badge',\n    'ui/component/alignable',\n    'ui/animable/absorbable/absorbable',\n    'ui/animable/pulsable/pulsable',\n    'taoTaskQueue/component/listing/element',\n    'taoTaskQueue/component/listing/report',\n    'taoTaskQueue/component/listing/list',\n    'tpl!taoTaskQueue/component/manager/tpl/manager',\n    'css!taoTaskQueue/component/manager/css/manager'\n], function ($, _, __, loadingBar, hider, component, badgeFactory, makeAlignable, makeAbsorbable, makePulsable, listElementFactory, reportElementFactory, taskListFactory, managerTpl) {\n    'use strict';\n\n    /**\n     * Transform the task log summary into a configuration set for the badge\n     * @param {Object} tasksStatuses - the task log summary\n     * @returns {Object} the new badge data to be displayed following the format {type, loading, value}\n     */\n    var getBadgeDataFromStatus = function getBadgeDataFromStatus(tasksStatuses){\n        var total =  0;\n        var data = {loading : false};\n        if(tasksStatuses){\n            if(tasksStatuses.numberOfTasksInProgress){\n                total += parseInt(tasksStatuses.numberOfTasksInProgress, 10);\n                data.type = 'info';\n                data.loading = (tasksStatuses.numberOfTasksInProgress > 0);\n            }\n            if(tasksStatuses.numberOfTasksCompleted){\n                total += parseInt(tasksStatuses.numberOfTasksCompleted, 10);\n                data.type = 'success';\n            }\n            if(tasksStatuses.numberOfTasksFailed){\n                total += parseInt(tasksStatuses.numberOfTasksFailed, 10);\n                if(data.type === 'success'){\n                    data.type = 'warning';//if there are both success and failures, the status should be a warning\n                }else{\n                    data.type = 'error';\n                }\n            }\n            data.value = total;\n            return data;\n        }\n    };\n\n    /**\n     * Transform the internal list of elements into a configuration set for the badge\n     * @param {Object} elements - internal collection of task elements\n     * @returns {Object} the new badge data to be displayed following the format {type, loading, value}\n     */\n    var getBadgeDataFromElements = function getBadgeDataFromElements(elements){\n\n        var statusMap = {\n            in_progress: 'numberOfTasksInProgress',\n            created: 'numberOfTasksInProgress',\n            failed: 'numberOfTasksFailed',\n            completed: 'numberOfTasksCompleted',\n        };\n\n        var stats = {\n            numberOfTasksFailed : 0,\n            numberOfTasksCompleted : 0,\n            numberOfTasksInProgress : 0\n        };\n\n        _.forEach(elements, function(element){\n            var status = element.getStatus();\n            if(statusMap[status]){\n                //it is a know state, so add to the stats array\n                stats[statusMap[status]]++;\n            }\n        });\n\n        return getBadgeDataFromStatus(stats);\n    };\n\n    /**\n     * The collection of config used for component alignments\n     * the values have been adjusted to make it work well with the list's css\n     * @type {Object}\n     * @private\n     */\n    var _alignementConfig = {\n        initial : {\n            hPos: 'center',\n            hOrigin: 'center',\n            vPos: 'bottom',\n            vOrigin: 'top',\n            hOffset: -156\n        },\n        showDetail : {\n            hPos: 'center',\n            hOrigin: 'center',\n            vPos: 'bottom',\n            vOrigin: 'top',\n            hOffset: -156-121\n        }\n    };\n\n    var taskQueue = {\n\n        /**\n         * Get the list of task elements\n         * @returns {taskQueueManager} - self for chaining\n         */\n        getTaskElements : function getTaskElements(){\n            return this.taskElements;\n        },\n\n        /**\n         * Show the details associated to a task\n         * @param {Object} tasksData - a single task data to view the report form\n         * @returns {taskQueueManager} - self for chaining\n         */\n        showDetail : function showDetail(taskData){\n            var $component = this.getElement();\n            var list = this.list;\n            var reportElement = reportElementFactory({replace:true}, taskData)\n                .on('close', function(){\n                    list.hideDetail();\n                    list.alignWith($component, _alignementConfig.initial);\n                    this.destroy();\n                });\n            list.setDetail(reportElement, true);\n            list.alignWith($component, _alignementConfig.showDetail);\n            return this;\n        },\n\n        /**\n         * Add a new task\n         * @param {Object} tasksData - a single task data to be added to the list\n         * @param {Boolean} [animate=false] - tells if the new task addition should be made through a smooth transition effect\n         * @returns {taskQueueManager} - self for chaining\n         */\n        addNewTask : function addNewTask(taskData, animate){\n            var self = this;\n            var taskId = taskData.id;\n            var listElement = listElementFactory({}, taskData)\n                .on('remove', function(){\n                    delete self.taskElements[taskId];\n                    self.list.removeElement(listElement);\n                    self.trigger('remove', taskId);\n                    self.trigger('listchange');\n                })\n                .on('report', function(){\n                    self.trigger('report', taskId);\n                })\n                .on('download', function(){\n                    self.trigger('download', taskId);\n                })\n                .on('redirect', function(){\n                    loadingBar.start();\n\n                    self.hideList();\n\n                    self.trigger('redirect', taskId);\n                });\n\n\n            if(animate){\n                if(this.list.is('hidden')){\n                    this.list.show();\n                }\n                this.list.scrollToTop();\n            }\n\n            this.list.insertElement(listElement);\n            this.taskElements[taskId] = listElement;\n            this.trigger('listchange');\n\n            if(animate){\n                this.list.animateInsertion(listElement);\n            }\n            return this;\n        },\n\n        /**\n         * Update the badge display according to the current status of the tasks in the list\n         * @returns {taskQueueManager} - self for chaining\n         */\n        selfUpdateBadge : function selfUpdateBadge(){\n            var badgeData = getBadgeDataFromElements(this.getTaskElements());\n            if(!this.badge){\n                this.badge = makePulsable(badgeFactory(badgeData)).render(this.getElement());\n            }else{\n                this.badge.update(badgeData);\n            }\n            return this;\n        },\n\n        /**\n         * Load the the array of task element data requested form the server REST API\n         * @param {Array} tasksData - the task data to be loaded from the server REST API call\n         * @returns {taskQueueManager} - self for chaining\n         */\n        loadData : function loadData(tasksData){\n            var self = this;\n            var found = [];\n            _.forEach(tasksData, function(entry){\n                var id = entry.id;\n                if(self.taskElements[id]){\n                    //update\n                    self.taskElements[id].update(entry);\n                    if(self.taskElements[id].getStatus() !== entry.status){\n                        //highlight status change only\n                        self.taskElements[id].highlight();\n                    }\n                }else{\n                    //create\n                    self.addNewTask(entry);\n                }\n                found.push(id);\n            });\n\n            //remove any element from the list that are not found in the new data collection (task has been archived server side)\n            _.forEach(_.difference(_.keys(self.taskElements), found), function(id){\n                self.list.removeElement(self.taskElements[id]);\n                delete self.taskElements[id];\n            });\n\n            this.trigger('listchange');\n            return this;\n        },\n\n        /**\n         * Trigger the pulse animation on the status badge\n         * @returns {taskQueueManager} - self for chaining\n         */\n        pulse : function pulse(){\n            if(this.badge){\n                this.badge.pulse(3);\n            }\n            return this;\n        },\n\n        /**\n         * Show the list component\n         * @event listshow - Emitted when the list is displayed\n         * @returns {taskQueueManager} - self for chaining\n         */\n        showList : function showList() {\n            if (this.list) {\n                this.list.show();\n                this.trigger('listshow');\n            }\n            return this;\n        },\n\n        /**\n         * Hide the list component\n         * @event listhide - Emitted when the list is hidden\n         * @returns {taskQueueManager} - self for chaining\n         */\n        hideList : function hideList() {\n            if (this.list) {\n                this.list.hide();\n                this.trigger('listhide');\n            }\n            return this;\n        },\n\n        /**\n         * Remove all finished element (completed or failed) from the list\n         * @returns {taskQueueManager}\n         */\n        removeAllFinished : function removeAllFinished(){\n\n            var self = this;\n\n            _(this.taskElements).filter(function(element){\n                return (element.getStatus() === 'completed' || element.getStatus() === 'failed');\n            }).forEach(function(element){\n                delete self.taskElements[element.getId()];\n                self.list.removeElement(element);\n                self.trigger('listchange');\n            });\n\n            this.trigger('listclearfinished');\n            return this;\n        },\n\n        /**\n         * Toggle the visibility of the clear all button according to the element status\n         * @returns {taskQueueManager}\n         */\n        selfUpdateClearButton : function selfUpdateClearButton(){\n            var $clearAllBox = this.getElement().find('.clear-box');\n            var finishedCount = _(this.taskElements).map(function(element){\n                return element.getStatus();\n            }).filter(function(status){\n                return (status === 'completed' || status === 'failed');\n            }).size();\n            if(finishedCount > 0){\n                //show button\n                hider.show($clearAllBox);\n            }else{\n                hider.hide($clearAllBox);\n            }\n            return this;\n        }\n    };\n\n    /**\n     * Builds the task queue manager\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskQueueManager} the component\n     *\n     * @event remove - Emitted when a list element is removed\n     * @event download - Emitted when a list element requests the file download associated to a completed task\n     * @event report - Emitted when a list element requests a task report to be displayed\n     * @event redirect - Emitted when a list element requests a redirection to the created resource\n     * @event listchange - Emitted when the list element list has been updated\n     * @event listclearfinished - Emitted when all the finished element from the list is removed\n     */\n    return function taskQueueManagerFactory(config, data) {\n\n        data = data || {};\n\n        /**\n         * The component\n         * @typedef {ui/component} taskQueueManager\n         */\n        return makeAbsorbable(component(taskQueue))\n            .setTemplate(managerTpl)\n            .on('destroy listhide', function(){\n                $(document).off('click.task-queue-manager');\n            })\n            .on('init', function() {\n                //initialize the task element collection\n                this.taskElements = {};\n\n                //create the list\n                this.list = makeAlignable(taskListFactory())\n                    .init({\n                        title : __('Background tasks'),\n                        emptyText : __('There is currently no background task'),\n                    });\n            })\n            .on('listshow', function(){\n                var self = this;\n                var $component = this.getElement();\n                //close the popup when clicking outside of the component\n                $(document).off('click.task-queue-manager').on('click.task-queue-manager', function(e){\n                    if($component.get(0) !== e.target && !$.contains($component.get(0), e.target)){\n                        if(!self.list.is('hidden')){\n                            self.hideList();\n                        }\n                    }\n                });\n            })\n            .on('listchange', function(){\n                this.selfUpdateBadge();\n                this.selfUpdateClearButton();\n            })\n            .on('render', function() {\n\n                var self = this;\n                var $trigger = this.getElement();\n\n                //position the list\n                this.list.render($trigger)\n                    .moveBy(0, 0)\n                    .alignWith($trigger, _alignementConfig.initial)\n                    .hide();//start hidden\n\n                //load initial data\n                this.loadData(data);\n\n                //prevent closing the panel when clicking on it\n                this.list.getElement()\n                    .addClass('overflown-element')\n                    .on('click', function(e){\n                        e.stopPropagation();\n                    });\n\n                this.list.on('clearall', function(){\n                    self.removeAllFinished();\n                });\n\n                //toggle list visibility\n                $trigger.on('click', function(){\n                    if(self.list.is('hidden')){\n                        self.showList();\n                    }else{\n                        self.hideList();\n                    }\n                });\n\n            })\n            .init(config || {});\n    };\n\n});\n","define('util/url',['lodash', 'context'], function (_, context) { 'use strict';\n\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  context = context && context.hasOwnProperty('default') ? context['default'] : context;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  var parsers = {\n    absolute: /^(?:[a-z]+:)?\\/\\//i,\n    base64: /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/,\n    query: /(?:^|&)([^&=]*)=?([^&]*)/g,\n    url: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  };\n  /**\n   * The Url util\n   * @exports util/url\n   */\n\n  var urlUtil = {\n    /*\n     * The parse method is a adaptation of parseUri from\n     * Steven Levithan <stevenlevithan.com> under the MIT License\n     */\n\n    /**\n     * Parse the given URL and create an object with each URL chunks.\n     *\n     * BE CAREFUL! This util is different from UrlParser.\n     * This one works only from the given string, when UrlParser work from window.location.\n     * It means UrlParser will resolve the host of a relative URL using the host of the current window.\n     *\n     * @param {String} url - the URL to parse\n     * @returns {Object} parsedUrl with the properties available in key below and query that contains query string key/values.\n     */\n    parse: function parse(url) {\n      var matches;\n      var keys = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'queryString', 'hash'];\n      var i = keys.length;\n      var parsed = Object.create({\n        toString: function toString() {\n          return this.source;\n        }\n      });\n      parsed.base64 = parsers.base64.test(url);\n\n      if (parsed.base64) {\n        parsed.source = url;\n      } else {\n        matches = parsers.url.exec(url);\n\n        while (i--) {\n          parsed[keys[i]] = matches[i] || '';\n        }\n\n        parsed.query = {};\n        parsed.queryString.replace(parsers.query, function ($0, $1, $2) {\n          if ($1) {\n            parsed.query[$1] = $2;\n          }\n        });\n      }\n\n      return parsed;\n    },\n\n    /**\n     * Check whether an URL is absolute\n     * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n     * @returns {Boolean|undefined} true if the url is absolute, or undefined if the URL cannot be checked\n     */\n    isAbsolute: function isAbsolute(url) {\n      //url from parse\n      if (_typeof(url) === 'object' && url.hasOwnProperty('source')) {\n        return url.source !== url.relative;\n      }\n\n      if (typeof url === 'string') {\n        return parsers.absolute.test(url);\n      }\n    },\n\n    /**\n     * Check whether an URL is relative\n     * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n     * @returns {Boolean|undefined} true if the url is relative, or undefined if the URL cannot be checked\n     */\n    isRelative: function isRelative(url) {\n      var absolute = this.isAbsolute(url);\n\n      if (typeof absolute === 'boolean') {\n        return !absolute;\n      }\n    },\n\n    /**\n     * Check whether an URL is encoded in base64\n     * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n     * @returns {Boolean|undefined} true if the url is base64, or undefined if the URL cannot be checked\n     */\n    isBase64: function isBase64(url) {\n      if (_typeof(url) === 'object' && url.hasOwnProperty('source')) {\n        return url.base64;\n      }\n\n      if (typeof url === 'string') {\n        return parsers.base64.test(url);\n      }\n    },\n\n    /**\n     * Determine whether encoding is required to match XML standards for attributes\n     * @param {String} url\n     * @returns {String}\n     */\n    encodeAsXmlAttr: function encodeAsXmlAttr(uri) {\n      return /[<>&']+/.test(uri) ? encodeURIComponent(uri) : uri;\n    },\n\n    /**\n     * Build a URL.\n     * It does not take case about baseURL.\n     *\n     * @param {String|Array} path - the URL path. Clean concat if an array (no dupe slashes)\n     * @param {Object} [params] - params to add to the URL\n     * @returns {String} the URL\n     */\n    build: function build(path, params) {\n      var url,\n          queryString = '',\n          hasQueryString;\n\n      if (path) {\n        if (_.isString(path)) {\n          url = path;\n        }\n\n        if (_.isArray(path)) {\n          url = '';\n\n          _.forEach(path, function (chunk) {\n            if (/\\/$/.test(url) && /^\\//.test(chunk)) {\n              url += chunk.substr(1);\n            } else if (url !== '' && !/\\/$/.test(url) && !/^\\//.test(chunk)) {\n              url += '/' + chunk;\n            } else {\n              url += chunk;\n            }\n          });\n        }\n\n        if (_.isPlainObject(params)) {\n          hasQueryString = url.indexOf('?') > -1;\n          queryString = _.reduce(params, function (acc, value, key) {\n            if (!_.isEmpty(acc) || hasQueryString) {\n              acc += '&';\n            }\n\n            if (_typeof(value) === 'object' && !_.isArray(value)) {\n              _.forOwn(value, function (parameterValue, parameterName) {\n                acc += encodeURIComponent(key) + '[' + encodeURIComponent(parameterName) + ']=' + encodeURIComponent(parameterValue) + '&';\n              });\n            } else {\n              acc += encodeURIComponent(key) + '=' + encodeURIComponent(value);\n            }\n\n            return acc;\n          }, queryString);\n\n          if (!_.isEmpty(queryString)) {\n            if (!hasQueryString) {\n              url += '?';\n            }\n\n            url += queryString;\n          }\n        }\n      }\n\n      return url;\n    },\n\n    /**\n     * Get the URL from a TAO controller route\n     * @param {String} action - The controller's action\n     * @param {String} controller - The controller's name\n     * @param {String} extension - The controller's extension\n     * @param {String} [rootUrl] - to change the root url, otherwise taken from context\n     * @param {Object} [params] - params to add to the URL\n     * @returns {String} the url\n     *\n     * @throws {TypeError} if one of the required parameter is missing or empty\n     */\n    route: function route(action, controller, extension, params, rootUrl) {\n      var routeParts = [extension, controller, action];\n\n      if (_.some(routeParts, function (value) {\n        return _.isEmpty(value) || !_.isString(value);\n      })) {\n        throw new TypeError('All parts are required to build an URL');\n      }\n\n      rootUrl = rootUrl || context && context['root_url'];\n      return this.build([rootUrl].concat(routeParts), params);\n    }\n  };\n\n  return urlUtil;\n\n});\n\n","define('core/polling',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The default value of the polling interval\n     * @type {Number}\n     * @private\n     */\n\n    var _defaultInterval = 60 * 1000;\n    /**\n     * Create a polling manager for a particular action\n     * @param {Object|Function} [config] - A config object, or the action called on each iteration\n     * @param {Function} [config.action] - The callback action called on each iteration, the polling instance is provided as first argument\n     * @param {Number|String} [config.interval] - The minimal time between two iterations\n     * @param {Number|String} [config.max] - Set a max number of iterations, after what the polling is stopped.\n     * @param {Boolean} [config.autoStart] - Whether or not the polling should start immediately\n     * @param {Object} [config.context] - An optional context to apply on each action call\n     * @returns {polling}\n     */\n\n\n    var pollingFactory = function pollingFactory(config) {\n      var timer, promise, interval, max, iter, action, context, autoStart;\n      var state = {};\n      /**\n       * Fires a new timer\n       */\n\n      var startTimer = function startTimer() {\n        timer = setTimeout(iteration, interval);\n        state.stopped = false;\n        state.pending = true;\n      };\n      /**\n       * Stops the current timer\n       */\n\n\n      var stopTimer = function stopTimer() {\n        clearTimeout(timer);\n        timer = null;\n        state.stopped = true;\n        state.pending = false;\n      };\n      /**\n       * Runs an iteration of the polling loop\n       */\n\n\n      var iteration = function iteration() {\n        // prevent more iterations than needed to be ran\n        if (max && iter >= max) {\n          // breaks the polling\n          polling.stop();\n          return;\n        } // count the iteration\n\n\n        iter = (iter || 0) + 1;\n        state.processing = true;\n        state.pending = false;\n        /**\n         * Notifies the action is about to be called\n         * @event polling#call\n         */\n\n        polling.trigger('call'); // process the action in the right context\n\n        action.call(context, polling); // next iteration in synchronous mode\n\n        if (!promise && !state.stopped) {\n          state.processing = false;\n          startTimer();\n        }\n      };\n      /**\n       * Defines the polling manager\n       * @type {Object}\n       */\n\n\n      var polling = {\n        /**\n         * Gets the current action into asynchronous mode.\n         * The next iteration won't be executed until the resolve method has been called.\n         * However if the reject method is called, the polling is then stopped!\n         * @returns {Object} Returns a promise resolver that provides resolve() and reject() methods\n         */\n        async: function async() {\n          var resolver = {}; // create a promise and extract the control callbacks\n\n          promise = new Promise(function (resolve, reject) {\n            resolver.resolve = resolve;\n            resolver.reject = reject;\n          }); // directly install the pending actions\n\n          promise.then(function () {\n            promise = null;\n            state.processing = false; // next iteration only if allowed\n\n            if (!state.stopped) {\n              startTimer();\n            }\n            /**\n             * Notifies the polling continues\n             * @event polling#resolved\n             */\n\n\n            polling.trigger('resolved');\n          }).catch(function () {\n            promise = null;\n            state.processing = false; // breaks the polling\n\n            polling.stop();\n            /**\n             * Notifies the polling has been halted\n             * @event polling#rejected\n             */\n\n            polling.trigger('rejected');\n          });\n          /**\n           * Notifies the current action is asynchronous\n           * @event polling#async\n           * @param {Object} resolver\n           * @param {Function} resolver.resolve\n           * @param {Function} resolver.reject\n           */\n\n          polling.trigger('async', resolver);\n          return resolver;\n        },\n\n        /**\n         * Forces the next iteration to be executed now, unless it is already running.\n         * If the polling has been stopped, start it again.\n         * @returns {polling}\n         */\n        next: function next() {\n          var _next; // reset the counter if the polling is stopped\n\n\n          if (state.stopped) {\n            iter = 0;\n          } // ensure the scheduling if off\n\n\n          stopTimer(); // prevent more iterations than needed to be ran\n\n          if (max && iter >= max) {\n            return this;\n          } // the next() method can be called either to force a next iteration or to start immediately the action\n          // so we need to ensure the schedule is not blocked\n\n\n          state.stopped = false;\n\n          if (!promise) {\n            /**\n             * Notifies the action\n             * @event polling#next\n             * @param {polling} polling\n             */\n            this.trigger('next');\n            iteration();\n          } else {\n            // as a promise is still pending, ensure a call to next() will be processed after\n            _next = this.next.bind(this);\n            promise.then(_next).catch(_next);\n          }\n\n          return this;\n        },\n\n        /**\n         * Starts the polling if it is not currently running\n         * @returns {polling}\n         */\n        start: function start() {\n          if (!timer) {\n            iter = 0;\n            startTimer();\n            /**\n             * Notifies the start\n             * @event polling#start\n             */\n\n            this.trigger('start');\n          }\n\n          return this;\n        },\n\n        /**\n         * Stops the polling if it is currently running\n         * @returns {polling}\n         */\n        stop: function stop() {\n          stopTimer();\n          /**\n           * Notifies the stop\n           * @event polling#stop\n           */\n\n          this.trigger('stop');\n          return this;\n        },\n\n        /**\n         * Sets the minimum time interval between two actions\n         * @param {Number|String} value\n         * @returns {polling}\n         */\n        setInterval: function setInterval(value) {\n          interval = Math.abs(parseInt(value, 10) || _defaultInterval);\n          /**\n           * Notifies the interval change\n           * @event polling#setinterval\n           * @param {Number} interval\n           */\n\n          this.trigger('setinterval', interval);\n          return this;\n        },\n\n        /**\n         * Gets the minimum time interval between two actions\n         * @returns {Number}\n         */\n        getInterval: function getInterval() {\n          return interval;\n        },\n\n        /**\n         * Sets the polling action\n         * @param {Function} fn\n         * @returns {polling}\n         */\n        setAction: function setAction(fn) {\n          action = fn;\n          /**\n           * Notifies the action change\n           * @event polling#setaction\n           * @param {Function} action\n           */\n\n          this.trigger('setaction', action);\n          return this;\n        },\n\n        /**\n         * Gets the polling action\n         * @returns {Function}\n         */\n        getAction: function getAction() {\n          return action;\n        },\n\n        /**\n         * Sets the context applied on each action call\n         * @param {Object} ctx\n         * @returns {polling}\n         */\n        setContext: function setContext(ctx) {\n          context = ctx || this;\n          /**\n           * Notifies the context change\n           * @event polling#setcontext\n           * @param {Object} context\n           */\n\n          this.trigger('setcontext', ctx);\n          return this;\n        },\n\n        /**\n         * Gets the context applied on each action call\n         * @returns {Object}\n         */\n        getContext: function getContext() {\n          return context;\n        },\n\n        /**\n         * Sets the max number of polling occurrences\n         * @param {Number} value\n         * @returns {polling}\n         */\n        setMax: function setMax(value) {\n          max = Math.abs(parseInt(value, 10) || 0);\n          return this;\n        },\n\n        /**\n         * Gets the max number of polling occurrences\n         * @returns {Number}\n         */\n        getMax: function getMax() {\n          return max;\n        },\n\n        /**\n         * Gets the number of ran iterations\n         * @returns {Number}\n         */\n        getIteration: function getIteration() {\n          return iter || 0;\n        },\n\n        /**\n         * Checks if the manager is in a particular state\n         * @param {String} stateName The name of the state to check. Possible values are:\n         * - stopped: the polling manager is stopped, and won't process action until restart\n         * - pending: the polling manager has scheduled an action an is waiting for it processing\n         * - processing: the polling manager is currently processing an action and wait for its completion\n         * @returns {Boolean}\n         */\n        is: function is(stateName) {\n          return !!state[stateName];\n        }\n      };\n      eventifier(polling); // some defaults\n\n      interval = _defaultInterval;\n      context = polling;\n      action = null;\n      state.stopped = true;\n      autoStart = false;\n      iter = 0; // maybe only the action is provided\n\n      if (_.isFunction(config)) {\n        polling.setAction(config);\n        config = null;\n      } // loads the config\n\n\n      if (_.isObject(config)) {\n        polling.setAction(config.action);\n        polling.setInterval(config.interval || arguments[1]);\n        polling.setContext(config.context);\n        polling.setMax(config.max);\n        autoStart = !!config.autoStart;\n      }\n\n      if (autoStart) {\n        polling.start();\n      }\n\n      return polling;\n    };\n\n    return pollingFactory;\n\n});\n\n","define('core/promiseQueue',['lodash', 'core/promise', 'core/eventifier', 'lib/uuid'], function (_, Promise, eventifier, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 Open Assessment Technologies SA\n     */\n    /**\n     * Creates a new promise queue\n     * @returns {promiseQueue}\n     */\n\n    function promiseQueueFactory() {\n      //where we keep the pending promises\n      var queue = {};\n\n      var getId = function getId() {\n        var id = 'promise-' + uuid(6);\n\n        if (typeof queue[id] === 'undefined') {\n          return id;\n        }\n\n        return getId();\n      };\n      /**\n       * @typedef {promiseQueue}\n       */\n\n\n      return {\n        /**\n         * Just add another promise to the queue\n         * @param {Promise} promise\n         * @return {promiseQueue} chains\n         */\n        add: function add(promise) {\n          queue[getId()] = promise;\n          return this;\n        },\n\n        /**\n         * Get the queue values\n         * @returns {Promise[]} the array of promises in the queue\n         */\n        getValues: function getValues() {\n          return _.values(queue);\n        },\n\n        /**\n         * Empty the queue\n         * @return {promiseQueue} chains\n         */\n        clear: function clear() {\n          queue = {};\n          return this;\n        },\n\n        /**\n         * Run the given promise at the end of the queue,\n         * @param {Function} promiseFn - a function that returns a promise\n         * @returns {Promise}\n         */\n        serie: function serie(promiseFn) {\n          var id = getId(); //the actual queue to execute before running the given promise\n\n          var currentQueue = this.getValues(); //use an emitter to notify the promise fulfillment, internally.\n\n          var emitter = eventifier(); //add a waiting promise into the queue (for others who are calling the queue)\n\n          queue[id] = new Promise(function (resolve) {\n            emitter.on('fulfilled', resolve);\n          }); //wait for the queue,\n          //then run the given promise\n          //and resolve the waiting promise (for others)\n\n          return Promise.all(currentQueue).then(function () {\n            if (_.isFunction(promiseFn)) {\n              return promiseFn();\n            }\n          }).then(function (data) {\n            emitter.trigger('fulfilled');\n            delete queue[id];\n            return data;\n          }).catch(function (err) {\n            queue = {};\n            throw err;\n          });\n        }\n      };\n    }\n\n    return promiseQueueFactory;\n\n});\n\n","define('core/store/localstorage',['lodash', 'core/promise', 'core/promiseQueue', 'lib/uuid'], function (_, Promise, promiseQueue, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Prefix all databases\n     * @type {String}\n     */\n\n    var prefix = 'tao-store-';\n    /**\n     * Alias to the Storage API\n     * @type {Storage}\n     */\n\n    var storage = window.localStorage;\n    /**\n     * The name of the store that contains the index of known stores.\n     * @type {String}\n     */\n\n    var knownStoresName = 'index';\n    /**\n     * The name of the store that contains the store id\n     * @type {String}\n     */\n\n    var idStoreName = 'id';\n    var writingQueue = promiseQueue();\n    /**\n     * Set an entry into a store\n     * @param {String} storeName - unprefixed store name\n     * @param {String} key - entry key\n     * @param {*} value - the value to set\n     * @returns {Promise<Boolean>}\n     */\n\n    var setEntry = function setEntry(storeName, key, value) {\n      return new Promise(function (resolve, reject) {\n        try {\n          storage.setItem(prefix + storeName + '.' + key, JSON.stringify(value));\n          resolve(true);\n        } catch (ex) {\n          reject(ex);\n        }\n      });\n    };\n    /**\n     * Get an entry from a store\n     * @param {String} storeName - unprefixed store name\n     * @param {String} key - entry key\n     * @returns {Promise<*>} resolves with the value\n     */\n\n\n    var getEntry = function getEntry(storeName, key) {\n      return new Promise(function (resolve, reject) {\n        var value;\n\n        try {\n          value = storage.getItem(prefix + storeName + '.' + key);\n\n          if (value === null) {\n            resolve();\n          } else {\n            resolve(JSON.parse(value));\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      });\n    };\n    /**\n     * Gets access to the store that contains the index of known stores.\n     * @returns {Promise}\n     */\n\n\n    var getKnownStores = function getKnownStores() {\n      return getEntry(knownStoresName, 'stores');\n    };\n    /**\n     * Adds a store into the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise<Boolean>}\n     */\n\n\n    var registerStore = function registerStore(storeName) {\n      return getKnownStores().then(function (stores) {\n        stores = stores || {};\n        stores[storeName] = {\n          name: storeName,\n          lastOpen: Date.now()\n        };\n        return setEntry(knownStoresName, 'stores', stores);\n      });\n    };\n    /**\n     * Removes a store from the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise<Boolean>}\n     */\n\n\n    var unregisterStore = function unregisterStore(storeName) {\n      return getKnownStores().then(function (stores) {\n        stores = stores || {};\n        delete stores[storeName];\n        return setEntry(knownStoresName, 'stores', stores);\n      });\n    };\n    /**\n     * Open and access a store\n     * @param {String} storeName - the store name to open\n     * @returns {Object} the store backend\n     * @throws {TypeError} without a storeName\n     */\n\n\n    var localStorageBackend = function localStorageBackend(storeName) {\n      var name;\n      var registered = false;\n\n      var openStore = function openStore() {\n        if (registered) {\n          return Promise.resolve();\n        }\n\n        return registerStore(storeName).then(function () {\n          registered = true;\n        });\n      };\n\n      if (_.isEmpty(storeName) || !_.isString(storeName)) {\n        throw new TypeError('The store name is required');\n      } //prefix all storage entries to avoid global keys confusion\n\n\n      name = prefix + storeName + '.';\n      /**\n       * The store\n       */\n\n      return {\n        /**\n         * Get an item with the given key\n         * @param {String} key\n         * @returns {Promise} with the result in resolve, undefined if nothing\n         */\n        getItem: function getItem(key) {\n          return writingQueue.serie(function () {\n            return openStore().then(function () {\n              return getEntry(storeName, key);\n            });\n          });\n        },\n\n        /**\n         * Set an item with the given key\n         * @param {String} key - the item key\n         * @param {*} value - the item value\n         * @returns {Promise} with true in resolve if added/updated\n         */\n        setItem: function setItem(key, value) {\n          return writingQueue.serie(function () {\n            return openStore().then(function () {\n              return setEntry(storeName, key, value);\n            });\n          });\n        },\n\n        /**\n         * Remove an item with the given key\n         * @param {String} key - the item key\n         * @returns {Promise} with true in resolve if removed\n         */\n        removeItem: function removeItem(key) {\n          return writingQueue.serie(function () {\n            return openStore().then(function () {\n              storage.removeItem(name + key);\n              return true;\n            });\n          });\n        },\n\n        /**\n         * Get all store items\n         * @returns {Promise<Object>} with a collection of items\n         */\n        getItems: function getItems() {\n          var keyPattern = new RegExp('^' + name);\n          return writingQueue.serie(function () {\n            return openStore().then(function () {\n              return _(storage).map(function (entry, index) {\n                return storage.key(index);\n              }).filter(function (key) {\n                return keyPattern.test(key);\n              }).reduce(function (acc, key) {\n                var value;\n                var exposedKey = key.replace(name, '');\n\n                try {\n                  value = storage.getItem(key);\n\n                  if (value !== null) {\n                    acc[exposedKey] = JSON.parse(value);\n                  }\n                } catch (ex) {\n                  acc[exposedKey] = null;\n                }\n\n                return acc;\n              }, {});\n            });\n          });\n        },\n\n        /**\n         * Clear the current store\n         * @returns {Promise} with true in resolve once cleared\n         */\n        clear: function clear() {\n          var keyPattern = new RegExp('^' + name);\n          return writingQueue.serie(function () {\n            return openStore().then(function () {\n              _(storage).map(function (entry, index) {\n                return storage.key(index);\n              }).filter(function (key) {\n                return keyPattern.test(key);\n              }).forEach(function (key) {\n                storage.removeItem(key);\n              });\n\n              return true;\n            });\n          });\n        },\n\n        /**\n         * Delete the database related to the current store\n         * @returns {Promise} with true in resolve once cleared\n         */\n        removeStore: function removeStore() {\n          return this.clear().then(function () {\n            return unregisterStore(storeName);\n          });\n        }\n      };\n    };\n    /**\n     * Removes all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @returns {Promise} with true in resolve once cleaned\n     */\n\n\n    localStorageBackend.removeAll = function removeAll(validate) {\n      if (!_.isFunction(validate)) {\n        validate = null;\n      }\n\n      return getKnownStores().then(function (stores) {\n        var removing = _(stores).filter(function (store, storeName) {\n          return validate ? validate(storeName, store) : true;\n        }).map(function (store) {\n          if (store && store.name) {\n            return localStorageBackend(store.name).removeStore();\n          }\n\n          return Promise.resolve();\n        }).value();\n\n        return Promise.all(removing);\n      });\n    };\n    /**\n     * Get all stores\n     * @param {Function} [validate] - An optional callback that validates the stores to retrieve\n     * @returns {Promise<String[]>} resolves with the list of stores\n     */\n\n\n    localStorageBackend.getAll = function getAll(validate) {\n      return getKnownStores().then(function (stores) {\n        return _(stores).filter(function (store, storeName) {\n          return validate ? validate(storeName, store) : true;\n        }).map(function (store) {\n          return store.name;\n        }).value();\n      });\n    };\n    /**\n     * Get the identifier of the storage\n     * @returns {Promise} that resolves with the store identifier\n     */\n\n\n    localStorageBackend.getStoreIdentifier = function getStoreIdentifier() {\n      var idStore = localStorageBackend(idStoreName); //we use the storeName also as the id\n\n      return idStore.getItem(idStoreName).then(function (id) {\n        if (!_.isEmpty(id)) {\n          return id;\n        }\n\n        id = uuid();\n        return idStore.setItem(idStoreName, id).then(function () {\n          return id;\n        });\n      });\n    };\n\n    return localStorageBackend;\n\n});\n\n","define('core/store/indexeddb',['lodash', 'core/promise', 'lib/uuid'], function (_, Promise, uuid) { 'use strict';\n\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n  uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var idbstore = createCommonjsModule(function (module) {\n    /*global window:false, self:false, define:false, module:false */\n\n    /**\n     * @license IDBWrapper - A cross-browser wrapper for IndexedDB\n     * Version 1.7.0\n     * Copyright (c) 2011 - 2016 Jens Arps\n     * http://jensarps.de/\n     *\n     * Licensed under the MIT (X11) license\n     */\n    (function (name, definition, global) {\n\n      if (module.exports) {\n        module.exports = definition();\n      } else {\n        global[name] = definition();\n      }\n    })('IDBStore', function () {\n\n      var defaultErrorHandler = function defaultErrorHandler(error) {\n        throw error;\n      };\n\n      var defaultSuccessHandler = function defaultSuccessHandler() {};\n\n      var defaults = {\n        storeName: 'Store',\n        storePrefix: 'IDBWrapper-',\n        dbVersion: 1,\n        keyPath: 'id',\n        autoIncrement: true,\n        onStoreReady: function onStoreReady() {},\n        onError: defaultErrorHandler,\n        indexes: [],\n        implementationPreference: ['indexedDB', 'webkitIndexedDB', 'mozIndexedDB', 'shimIndexedDB']\n      };\n      /**\n       *\n       * The IDBStore constructor\n       *\n       * @constructor\n       * @name IDBStore\n       * @version 1.7.0\n       *\n       * @param {Object} [kwArgs] An options object used to configure the store and\n       *  set callbacks\n       * @param {String} [kwArgs.storeName='Store'] The name of the store\n       * @param {String} [kwArgs.storePrefix='IDBWrapper-'] A prefix that is\n       *  internally used to construct the name of the database, which will be\n       *  kwArgs.storePrefix + kwArgs.storeName\n       * @param {Number} [kwArgs.dbVersion=1] The version of the store\n       * @param {String} [kwArgs.keyPath='id'] The key path to use. If you want to\n       *  setup IDBWrapper to work with out-of-line keys, you need to set this to\n       *  `null`\n       * @param {Boolean} [kwArgs.autoIncrement=true] If set to true, IDBStore will\n       *  automatically make sure a unique keyPath value is present on each object\n       *  that is stored.\n       * @param {Function} [kwArgs.onStoreReady] A callback to be called when the\n       *  store is ready to be used.\n       * @param {Function} [kwArgs.onError=throw] A callback to be called when an\n       *  error occurred during instantiation of the store.\n       * @param {Array} [kwArgs.indexes=[]] An array of indexData objects\n       *  defining the indexes to use with the store. For every index to be used\n       *  one indexData object needs to be passed in the array.\n       *  An indexData object is defined as follows:\n       * @param {Object} [kwArgs.indexes.indexData] An object defining the index to\n       *  use\n       * @param {String} kwArgs.indexes.indexData.name The name of the index\n       * @param {String} [kwArgs.indexes.indexData.keyPath] The key path of the index\n       * @param {Boolean} [kwArgs.indexes.indexData.unique] Whether the index is unique\n       * @param {Boolean} [kwArgs.indexes.indexData.multiEntry] Whether the index is multi entry\n       * @param {Array} [kwArgs.implementationPreference=['indexedDB','webkitIndexedDB','mozIndexedDB','shimIndexedDB']] An array of strings naming implementations to be used, in order or preference\n       * @param {Function} [onStoreReady] A callback to be called when the store\n       * is ready to be used.\n       * @example\n       // create a store for customers with an additional index over the\n       // `lastname` property.\n       var myCustomerStore = new IDBStore({\n           dbVersion: 1,\n           storeName: 'customer-index',\n           keyPath: 'customerid',\n           autoIncrement: true,\n           onStoreReady: populateTable,\n           indexes: [\n               { name: 'lastname', keyPath: 'lastname', unique: false, multiEntry: false }\n           ]\n       });\n       * @example\n       // create a generic store\n       var myCustomerStore = new IDBStore({\n           storeName: 'my-data-store',\n           onStoreReady: function(){\n               // start working with the store.\n           }\n       });\n       */\n\n      var IDBStore = function IDBStore(kwArgs, onStoreReady) {\n        if (typeof onStoreReady == 'undefined' && typeof kwArgs == 'function') {\n          onStoreReady = kwArgs;\n        }\n\n        if (Object.prototype.toString.call(kwArgs) != '[object Object]') {\n          kwArgs = {};\n        }\n\n        for (var key in defaults) {\n          this[key] = typeof kwArgs[key] != 'undefined' ? kwArgs[key] : defaults[key];\n        }\n\n        this.dbName = this.storePrefix + this.storeName;\n        this.dbVersion = parseInt(this.dbVersion, 10) || 1;\n        onStoreReady && (this.onStoreReady = onStoreReady);\n        var env = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) == 'object' ? window : self;\n        var availableImplementations = this.implementationPreference.filter(function (implName) {\n          return implName in env;\n        });\n        this.implementation = availableImplementations[0];\n        this.idb = env[this.implementation];\n        this.keyRange = env.IDBKeyRange || env.webkitIDBKeyRange || env.mozIDBKeyRange;\n        this.consts = {\n          'READ_ONLY': 'readonly',\n          'READ_WRITE': 'readwrite',\n          'VERSION_CHANGE': 'versionchange',\n          'NEXT': 'next',\n          'NEXT_NO_DUPLICATE': 'nextunique',\n          'PREV': 'prev',\n          'PREV_NO_DUPLICATE': 'prevunique'\n        };\n        this.openDB();\n      };\n      /** @lends IDBStore.prototype */\n\n\n      var proto = {\n        /**\n         * A pointer to the IDBStore ctor\n         *\n         * @private\n         * @type {Function}\n         * @constructs\n         */\n        constructor: IDBStore,\n\n        /**\n         * The version of IDBStore\n         *\n         * @type {String}\n         */\n        version: '1.7.0',\n\n        /**\n         * A reference to the IndexedDB object\n         *\n         * @type {IDBDatabase}\n         */\n        db: null,\n\n        /**\n         * The full name of the IndexedDB used by IDBStore, composed of\n         * this.storePrefix + this.storeName\n         *\n         * @type {String}\n         */\n        dbName: null,\n\n        /**\n         * The version of the IndexedDB used by IDBStore\n         *\n         * @type {Number}\n         */\n        dbVersion: null,\n\n        /**\n         * A reference to the objectStore used by IDBStore\n         *\n         * @type {IDBObjectStore}\n         */\n        store: null,\n\n        /**\n         * The store name\n         *\n         * @type {String}\n         */\n        storeName: null,\n\n        /**\n         * The prefix to prepend to the store name\n         *\n         * @type {String}\n         */\n        storePrefix: null,\n\n        /**\n         * The key path\n         *\n         * @type {String}\n         */\n        keyPath: null,\n\n        /**\n         * Whether IDBStore uses autoIncrement\n         *\n         * @type {Boolean}\n         */\n        autoIncrement: null,\n\n        /**\n         * The indexes used by IDBStore\n         *\n         * @type {Array}\n         */\n        indexes: null,\n\n        /**\n         * The implemantations to try to use, in order of preference\n         *\n         * @type {Array}\n         */\n        implementationPreference: null,\n\n        /**\n         * The actual implementation being used\n         *\n         * @type {String}\n         */\n        implementation: '',\n\n        /**\n         * The callback to be called when the store is ready to be used\n         *\n         * @type {Function}\n         */\n        onStoreReady: null,\n\n        /**\n         * The callback to be called if an error occurred during instantiation\n         * of the store\n         *\n         * @type {Function}\n         */\n        onError: null,\n\n        /**\n         * The internal insertID counter\n         *\n         * @type {Number}\n         * @private\n         */\n        _insertIdCount: 0,\n\n        /**\n         * Opens an IndexedDB; called by the constructor.\n         *\n         * Will check if versions match and compare provided index configuration\n         * with existing ones, and update indexes if necessary.\n         *\n         * Will call this.onStoreReady() if everything went well and the store\n         * is ready to use, and this.onError() is something went wrong.\n         *\n         * @private\n         *\n         */\n        openDB: function openDB() {\n          var openRequest = this.idb.open(this.dbName, this.dbVersion);\n          var preventSuccessCallback = false;\n\n          openRequest.onerror = function (error) {\n            var gotVersionErr = false;\n\n            if ('error' in error.target) {\n              gotVersionErr = error.target.error.name == 'VersionError';\n            } else if ('errorCode' in error.target) {\n              gotVersionErr = error.target.errorCode == 12;\n            }\n\n            if (gotVersionErr) {\n              this.onError(new Error('The version number provided is lower than the existing one.'));\n            } else {\n              this.onError(error);\n            }\n          }.bind(this);\n\n          openRequest.onsuccess = function (event) {\n            if (preventSuccessCallback) {\n              return;\n            }\n\n            if (this.db) {\n              this.onStoreReady();\n              return;\n            }\n\n            this.db = event.target.result;\n\n            if (typeof this.db.version == 'string') {\n              this.onError(new Error('The IndexedDB implementation in this browser is outdated. Please upgrade your browser.'));\n              return;\n            }\n\n            if (!this.db.objectStoreNames.contains(this.storeName)) {\n              // We should never ever get here.\n              // Lets notify the user anyway.\n              this.onError(new Error('Object store couldn\\'t be created.'));\n              return;\n            }\n\n            var emptyTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n            this.store = emptyTransaction.objectStore(this.storeName); // check indexes\n\n            var existingIndexes = Array.prototype.slice.call(this.getIndexList());\n            this.indexes.forEach(function (indexData) {\n              var indexName = indexData.name;\n\n              if (!indexName) {\n                preventSuccessCallback = true;\n                this.onError(new Error('Cannot create index: No index name given.'));\n                return;\n              }\n\n              this.normalizeIndexData(indexData);\n\n              if (this.hasIndex(indexName)) {\n                // check if it complies\n                var actualIndex = this.store.index(indexName);\n                var complies = this.indexComplies(actualIndex, indexData);\n\n                if (!complies) {\n                  preventSuccessCallback = true;\n                  this.onError(new Error('Cannot modify index \"' + indexName + '\" for current version. Please bump version number to ' + (this.dbVersion + 1) + '.'));\n                }\n\n                existingIndexes.splice(existingIndexes.indexOf(indexName), 1);\n              } else {\n                preventSuccessCallback = true;\n                this.onError(new Error('Cannot create new index \"' + indexName + '\" for current version. Please bump version number to ' + (this.dbVersion + 1) + '.'));\n              }\n            }, this);\n\n            if (existingIndexes.length) {\n              preventSuccessCallback = true;\n              this.onError(new Error('Cannot delete index(es) \"' + existingIndexes.toString() + '\" for current version. Please bump version number to ' + (this.dbVersion + 1) + '.'));\n            }\n\n            preventSuccessCallback || this.onStoreReady();\n          }.bind(this);\n\n          openRequest.onupgradeneeded = function (\n          /* IDBVersionChangeEvent */\n          event) {\n            this.db = event.target.result;\n\n            if (this.db.objectStoreNames.contains(this.storeName)) {\n              this.store = event.target.transaction.objectStore(this.storeName);\n            } else {\n              var optionalParameters = {\n                autoIncrement: this.autoIncrement\n              };\n\n              if (this.keyPath !== null) {\n                optionalParameters.keyPath = this.keyPath;\n              }\n\n              this.store = this.db.createObjectStore(this.storeName, optionalParameters);\n            }\n\n            var existingIndexes = Array.prototype.slice.call(this.getIndexList());\n            this.indexes.forEach(function (indexData) {\n              var indexName = indexData.name;\n\n              if (!indexName) {\n                preventSuccessCallback = true;\n                this.onError(new Error('Cannot create index: No index name given.'));\n              }\n\n              this.normalizeIndexData(indexData);\n\n              if (this.hasIndex(indexName)) {\n                // check if it complies\n                var actualIndex = this.store.index(indexName);\n                var complies = this.indexComplies(actualIndex, indexData);\n\n                if (!complies) {\n                  // index differs, need to delete and re-create\n                  this.store.deleteIndex(indexName);\n                  this.store.createIndex(indexName, indexData.keyPath, {\n                    unique: indexData.unique,\n                    multiEntry: indexData.multiEntry\n                  });\n                }\n\n                existingIndexes.splice(existingIndexes.indexOf(indexName), 1);\n              } else {\n                this.store.createIndex(indexName, indexData.keyPath, {\n                  unique: indexData.unique,\n                  multiEntry: indexData.multiEntry\n                });\n              }\n            }, this);\n\n            if (existingIndexes.length) {\n              existingIndexes.forEach(function (_indexName) {\n                this.store.deleteIndex(_indexName);\n              }, this);\n            }\n          }.bind(this);\n        },\n\n        /**\n         * Deletes the database used for this store if the IDB implementations\n         * provides that functionality.\n         *\n         * @param {Function} [onSuccess] A callback that is called if deletion\n         *  was successful.\n         * @param {Function} [onError] A callback that is called if deletion\n         *  failed.\n         */\n        deleteDatabase: function deleteDatabase(onSuccess, onError) {\n          if (this.idb.deleteDatabase) {\n            this.db.close();\n            var deleteRequest = this.idb.deleteDatabase(this.dbName);\n            deleteRequest.onsuccess = onSuccess;\n            deleteRequest.onerror = onError;\n          } else {\n            onError(new Error('Browser does not support IndexedDB deleteDatabase!'));\n          }\n        },\n\n        /*********************\n         * data manipulation *\n         *********************/\n\n        /**\n         * Puts an object into the store. If an entry with the given id exists,\n         * it will be overwritten. This method has a different signature for inline\n         * keys and out-of-line keys; please see the examples below.\n         *\n         * @param {*} [key] The key to store. This is only needed if IDBWrapper\n         *  is set to use out-of-line keys. For inline keys - the default scenario -\n         *  this can be omitted.\n         * @param {Object} value The data object to store.\n         * @param {Function} [onSuccess] A callback that is called if insertion\n         *  was successful.\n         * @param {Function} [onError] A callback that is called if insertion\n         *  failed.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         * @example\n         // Storing an object, using inline keys (the default scenario):\n         var myCustomer = {\n             customerid: 2346223,\n             lastname: 'Doe',\n             firstname: 'John'\n         };\n         myCustomerStore.put(myCustomer, mySuccessHandler, myErrorHandler);\n         // Note that passing success- and error-handlers is optional.\n         * @example\n         // Storing an object, using out-of-line keys:\n         var myCustomer = {\n             lastname: 'Doe',\n             firstname: 'John'\n         };\n         myCustomerStore.put(2346223, myCustomer, mySuccessHandler, myErrorHandler);\n         // Note that passing success- and error-handlers is optional.\n         */\n        put: function put(key, value, onSuccess, onError) {\n          if (this.keyPath !== null) {\n            onError = onSuccess;\n            onSuccess = value;\n            value = key;\n          }\n\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          var hasSuccess = false,\n              result = null,\n              putRequest;\n          var putTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n\n          putTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          putTransaction.onabort = onError;\n          putTransaction.onerror = onError;\n\n          if (this.keyPath !== null) {\n            // in-line keys\n            this._addIdPropertyIfNeeded(value);\n\n            putRequest = putTransaction.objectStore(this.storeName).put(value);\n          } else {\n            // out-of-line keys\n            putRequest = putTransaction.objectStore(this.storeName).put(value, key);\n          }\n\n          putRequest.onsuccess = function (event) {\n            hasSuccess = true;\n            result = event.target.result;\n          };\n\n          putRequest.onerror = onError;\n          return putTransaction;\n        },\n\n        /**\n         * Retrieves an object from the store. If no entry exists with the given id,\n         * the success handler will be called with null as first and only argument.\n         *\n         * @param {*} key The id of the object to fetch.\n         * @param {Function} [onSuccess] A callback that is called if fetching\n         *  was successful. Will receive the object as only argument.\n         * @param {Function} [onError] A callback that will be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        get: function get(key, onSuccess, onError) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          var hasSuccess = false,\n              result = null;\n          var getTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n\n          getTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          getTransaction.onabort = onError;\n          getTransaction.onerror = onError;\n          var getRequest = getTransaction.objectStore(this.storeName).get(key);\n\n          getRequest.onsuccess = function (event) {\n            hasSuccess = true;\n            result = event.target.result;\n          };\n\n          getRequest.onerror = onError;\n          return getTransaction;\n        },\n\n        /**\n         * Removes an object from the store.\n         *\n         * @param {*} key The id of the object to remove.\n         * @param {Function} [onSuccess] A callback that is called if the removal\n         *  was successful.\n         * @param {Function} [onError] A callback that will be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        remove: function remove(key, onSuccess, onError) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          var hasSuccess = false,\n              result = null;\n          var removeTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n\n          removeTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          removeTransaction.onabort = onError;\n          removeTransaction.onerror = onError;\n          var deleteRequest = removeTransaction.objectStore(this.storeName)['delete'](key);\n\n          deleteRequest.onsuccess = function (event) {\n            hasSuccess = true;\n            result = event.target.result;\n          };\n\n          deleteRequest.onerror = onError;\n          return removeTransaction;\n        },\n\n        /**\n         * Runs a batch of put and/or remove operations on the store.\n         *\n         * @param {Array} dataArray An array of objects containing the operation to run\n         *  and the data object (for put operations).\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        batch: function batch(dataArray, onSuccess, onError) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n\n          if (Object.prototype.toString.call(dataArray) != '[object Array]') {\n            onError(new Error('dataArray argument must be of type Array.'));\n          } else if (dataArray.length === 0) {\n            return onSuccess(true);\n          }\n\n          var count = dataArray.length;\n          var called = false;\n          var hasSuccess = false;\n          var batchTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n\n          batchTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(hasSuccess);\n          };\n\n          batchTransaction.onabort = onError;\n          batchTransaction.onerror = onError;\n\n          var onItemSuccess = function onItemSuccess() {\n            count--;\n\n            if (count === 0 && !called) {\n              called = true;\n              hasSuccess = true;\n            }\n          };\n\n          dataArray.forEach(function (operation) {\n            var type = operation.type;\n            var key = operation.key;\n            var value = operation.value;\n\n            var onItemError = function onItemError(err) {\n              batchTransaction.abort();\n\n              if (!called) {\n                called = true;\n                onError(err, type, key);\n              }\n            };\n\n            if (type == 'remove') {\n              var deleteRequest = batchTransaction.objectStore(this.storeName)['delete'](key);\n              deleteRequest.onsuccess = onItemSuccess;\n              deleteRequest.onerror = onItemError;\n            } else if (type == 'put') {\n              var putRequest;\n\n              if (this.keyPath !== null) {\n                // in-line keys\n                this._addIdPropertyIfNeeded(value);\n\n                putRequest = batchTransaction.objectStore(this.storeName).put(value);\n              } else {\n                // out-of-line keys\n                putRequest = batchTransaction.objectStore(this.storeName).put(value, key);\n              }\n\n              putRequest.onsuccess = onItemSuccess;\n              putRequest.onerror = onItemError;\n            }\n          }, this);\n          return batchTransaction;\n        },\n\n        /**\n         * Takes an array of objects and stores them in a single transaction.\n         *\n         * @param {Array} dataArray An array of objects to store\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        putBatch: function putBatch(dataArray, onSuccess, onError) {\n          var batchData = dataArray.map(function (item) {\n            return {\n              type: 'put',\n              value: item\n            };\n          });\n          return this.batch(batchData, onSuccess, onError);\n        },\n\n        /**\n         * Like putBatch, takes an array of objects and stores them in a single\n         * transaction, but allows processing of the result values.  Returns the\n         * processed records containing the key for newly created records to the\n         * onSuccess calllback instead of only returning true or false for success.\n         * In addition, added the option for the caller to specify a key field that\n         * should be set to the newly created key.\n         *\n         * @param {Array} dataArray An array of objects to store\n         * @param {Object} [options] An object containing optional options\n         * @param {String} [options.keyField=this.keyPath] Specifies a field in the record to update\n         *  with the auto-incrementing key. Defaults to the store's keyPath.\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         *\n         */\n        upsertBatch: function upsertBatch(dataArray, options, onSuccess, onError) {\n          // handle `dataArray, onSuccess, onError` signature\n          if (typeof options == 'function') {\n            onSuccess = options;\n            onError = onSuccess;\n            options = {};\n          }\n\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          options || (options = {});\n\n          if (Object.prototype.toString.call(dataArray) != '[object Array]') {\n            onError(new Error('dataArray argument must be of type Array.'));\n          }\n\n          var keyField = options.keyField || this.keyPath;\n          var count = dataArray.length;\n          var called = false;\n          var hasSuccess = false;\n          var index = 0; // assume success callbacks are executed in order\n\n          var batchTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n\n          batchTransaction.oncomplete = function () {\n            if (hasSuccess) {\n              onSuccess(dataArray);\n            } else {\n              onError(false);\n            }\n          };\n\n          batchTransaction.onabort = onError;\n          batchTransaction.onerror = onError;\n\n          var onItemSuccess = function onItemSuccess(event) {\n            var record = dataArray[index++];\n            record[keyField] = event.target.result;\n            count--;\n\n            if (count === 0 && !called) {\n              called = true;\n              hasSuccess = true;\n            }\n          };\n\n          dataArray.forEach(function (record) {\n            var key = record.key;\n\n            var onItemError = function onItemError(err) {\n              batchTransaction.abort();\n\n              if (!called) {\n                called = true;\n                onError(err);\n              }\n            };\n\n            var putRequest;\n\n            if (this.keyPath !== null) {\n              // in-line keys\n              this._addIdPropertyIfNeeded(record);\n\n              putRequest = batchTransaction.objectStore(this.storeName).put(record);\n            } else {\n              // out-of-line keys\n              putRequest = batchTransaction.objectStore(this.storeName).put(record, key);\n            }\n\n            putRequest.onsuccess = onItemSuccess;\n            putRequest.onerror = onItemError;\n          }, this);\n          return batchTransaction;\n        },\n\n        /**\n         * Takes an array of keys and removes matching objects in a single\n         * transaction.\n         *\n         * @param {Array} keyArray An array of keys to remove\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        removeBatch: function removeBatch(keyArray, onSuccess, onError) {\n          var batchData = keyArray.map(function (key) {\n            return {\n              type: 'remove',\n              key: key\n            };\n          });\n          return this.batch(batchData, onSuccess, onError);\n        },\n\n        /**\n         * Takes an array of keys and fetches matching objects\n         *\n         * @param {Array} keyArray An array of keys identifying the objects to fetch\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @param {String} [arrayType='sparse'] The type of array to pass to the\n         *  success handler. May be one of 'sparse', 'dense' or 'skip'. Defaults to\n         *  'sparse'. This parameter specifies how to handle the situation if a get\n         *  operation did not throw an error, but there was no matching object in\n         *  the database. In most cases, 'sparse' provides the most desired\n         *  behavior. See the examples for details.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         * @example\n         // given that there are two objects in the database with the keypath\n         // values 1 and 2, and the call looks like this:\n         myStore.getBatch([1, 5, 2], onError, function (data) { … }, arrayType);\n          // this is what the `data` array will be like:\n          // arrayType == 'sparse':\n         // data is a sparse array containing two entries and having a length of 3:\n         [Object, 2: Object]\n         0: Object\n         2: Object\n         length: 3\n         // calling forEach on data will result in the callback being called two\n         // times, with the index parameter matching the index of the key in the\n         // keyArray.\n          // arrayType == 'dense':\n         // data is a dense array containing three entries and having a length of 3,\n         // where data[1] is of type undefined:\n         [Object, undefined, Object]\n         0: Object\n         1: undefined\n         2: Object\n         length: 3\n         // calling forEach on data will result in the callback being called three\n         // times, with the index parameter matching the index of the key in the\n         // keyArray, but the second call will have undefined as first argument.\n          // arrayType == 'skip':\n         // data is a dense array containing two entries and having a length of 2:\n         [Object, Object]\n         0: Object\n         1: Object\n         length: 2\n         // calling forEach on data will result in the callback being called two\n         // times, with the index parameter not matching the index of the key in the\n         // keyArray.\n         */\n        getBatch: function getBatch(keyArray, onSuccess, onError, arrayType) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          arrayType || (arrayType = 'sparse');\n\n          if (Object.prototype.toString.call(keyArray) != '[object Array]') {\n            onError(new Error('keyArray argument must be of type Array.'));\n          } else if (keyArray.length === 0) {\n            return onSuccess([]);\n          }\n\n          var data = [];\n          var count = keyArray.length;\n          var hasSuccess = false;\n          var result = null;\n          var batchTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n\n          batchTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          batchTransaction.onabort = onError;\n          batchTransaction.onerror = onError;\n\n          var onItemSuccess = function onItemSuccess(event) {\n            if (event.target.result || arrayType == 'dense') {\n              data.push(event.target.result);\n            } else if (arrayType == 'sparse') {\n              data.length++;\n            }\n\n            count--;\n\n            if (count === 0) {\n              hasSuccess = true;\n              result = data;\n            }\n          };\n\n          keyArray.forEach(function (key) {\n            var onItemError = function onItemError(err) {\n              result = err;\n              onError(err);\n              batchTransaction.abort();\n            };\n\n            var getRequest = batchTransaction.objectStore(this.storeName).get(key);\n            getRequest.onsuccess = onItemSuccess;\n            getRequest.onerror = onItemError;\n          }, this);\n          return batchTransaction;\n        },\n\n        /**\n         * Fetches all entries in the store.\n         *\n         * @param {Function} [onSuccess] A callback that is called if the operation\n         *  was successful. Will receive an array of objects.\n         * @param {Function} [onError] A callback that will be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        getAll: function getAll(onSuccess, onError) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          var getAllTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n          var store = getAllTransaction.objectStore(this.storeName);\n\n          if (store.getAll) {\n            this._getAllNative(getAllTransaction, store, onSuccess, onError);\n          } else {\n            this._getAllCursor(getAllTransaction, store, onSuccess, onError);\n          }\n\n          return getAllTransaction;\n        },\n\n        /**\n         * Implements getAll for IDB implementations that have a non-standard\n         * getAll() method.\n         *\n         * @param {IDBTransaction} getAllTransaction An open READ transaction.\n         * @param {IDBObjectStore} store A reference to the store.\n         * @param {Function} onSuccess A callback that will be called if the\n         *  operation was successful.\n         * @param {Function} onError A callback that will be called if an\n         *  error occurred during the operation.\n         * @private\n         */\n        _getAllNative: function _getAllNative(getAllTransaction, store, onSuccess, onError) {\n          var hasSuccess = false,\n              result = null;\n\n          getAllTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          getAllTransaction.onabort = onError;\n          getAllTransaction.onerror = onError;\n          var getAllRequest = store.getAll();\n\n          getAllRequest.onsuccess = function (event) {\n            hasSuccess = true;\n            result = event.target.result;\n          };\n\n          getAllRequest.onerror = onError;\n        },\n\n        /**\n         * Implements getAll for IDB implementations that do not have a getAll()\n         * method.\n         *\n         * @param {IDBTransaction} getAllTransaction An open READ transaction.\n         * @param {IDBObjectStore} store A reference to the store.\n         * @param {Function} onSuccess A callback that will be called if the\n         *  operation was successful.\n         * @param {Function} onError A callback that will be called if an\n         *  error occurred during the operation.\n         * @private\n         */\n        _getAllCursor: function _getAllCursor(getAllTransaction, store, onSuccess, onError) {\n          var all = [],\n              hasSuccess = false,\n              result = null;\n\n          getAllTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          getAllTransaction.onabort = onError;\n          getAllTransaction.onerror = onError;\n          var cursorRequest = store.openCursor();\n\n          cursorRequest.onsuccess = function (event) {\n            var cursor = event.target.result;\n\n            if (cursor) {\n              all.push(cursor.value);\n              cursor['continue']();\n            } else {\n              hasSuccess = true;\n              result = all;\n            }\n          };\n\n          cursorRequest.onError = onError;\n        },\n\n        /**\n         * Clears the store, i.e. deletes all entries in the store.\n         *\n         * @param {Function} [onSuccess] A callback that will be called if the\n         *  operation was successful.\n         * @param {Function} [onError] A callback that will be called if an\n         *  error occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        clear: function clear(onSuccess, onError) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          var hasSuccess = false,\n              result = null;\n          var clearTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n\n          clearTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          clearTransaction.onabort = onError;\n          clearTransaction.onerror = onError;\n          var clearRequest = clearTransaction.objectStore(this.storeName).clear();\n\n          clearRequest.onsuccess = function (event) {\n            hasSuccess = true;\n            result = event.target.result;\n          };\n\n          clearRequest.onerror = onError;\n          return clearTransaction;\n        },\n\n        /**\n         * Checks if an id property needs to present on a object and adds one if\n         * necessary.\n         *\n         * @param {Object} dataObj The data object that is about to be stored\n         * @private\n         */\n        _addIdPropertyIfNeeded: function _addIdPropertyIfNeeded(dataObj) {\n          if (typeof dataObj[this.keyPath] == 'undefined') {\n            dataObj[this.keyPath] = this._insertIdCount++ + Date.now();\n          }\n        },\n\n        /************\n         * indexing *\n         ************/\n\n        /**\n         * Returns a DOMStringList of index names of the store.\n         *\n         * @return {DOMStringList} The list of index names\n         */\n        getIndexList: function getIndexList() {\n          return this.store.indexNames;\n        },\n\n        /**\n         * Checks if an index with the given name exists in the store.\n         *\n         * @param {String} indexName The name of the index to look for\n         * @return {Boolean} Whether the store contains an index with the given name\n         */\n        hasIndex: function hasIndex(indexName) {\n          return this.store.indexNames.contains(indexName);\n        },\n\n        /**\n         * Normalizes an object containing index data and assures that all\n         * properties are set.\n         *\n         * @param {Object} indexData The index data object to normalize\n         * @param {String} indexData.name The name of the index\n         * @param {String} [indexData.keyPath] The key path of the index\n         * @param {Boolean} [indexData.unique] Whether the index is unique\n         * @param {Boolean} [indexData.multiEntry] Whether the index is multi entry\n         */\n        normalizeIndexData: function normalizeIndexData(indexData) {\n          indexData.keyPath = indexData.keyPath || indexData.name;\n          indexData.unique = !!indexData.unique;\n          indexData.multiEntry = !!indexData.multiEntry;\n        },\n\n        /**\n         * Checks if an actual index complies with an expected index.\n         *\n         * @param {IDBIndex} actual The actual index found in the store\n         * @param {Object} expected An Object describing an expected index\n         * @return {Boolean} Whether both index definitions are identical\n         */\n        indexComplies: function indexComplies(actual, expected) {\n          var complies = ['keyPath', 'unique', 'multiEntry'].every(function (key) {\n            // IE10 returns undefined for no multiEntry\n            if (key == 'multiEntry' && actual[key] === undefined && expected[key] === false) {\n              return true;\n            } // Compound keys\n\n\n            if (key == 'keyPath' && Object.prototype.toString.call(expected[key]) == '[object Array]') {\n              var exp = expected.keyPath;\n              var act = actual.keyPath; // IE10 can't handle keyPath sequences and stores them as a string.\n              // The index will be unusable there, but let's still return true if\n              // the keyPath sequence matches.\n\n              if (typeof act == 'string') {\n                return exp.toString() == act;\n              } // Chrome/Opera stores keyPath squences as DOMStringList, Firefox\n              // as Array\n\n\n              if (!(typeof act.contains == 'function' || typeof act.indexOf == 'function')) {\n                return false;\n              }\n\n              if (act.length !== exp.length) {\n                return false;\n              }\n\n              for (var i = 0, m = exp.length; i < m; i++) {\n                if (!(act.contains && act.contains(exp[i]) || act.indexOf(exp[i] !== -1))) {\n                  return false;\n                }\n              }\n\n              return true;\n            }\n\n            return expected[key] == actual[key];\n          });\n          return complies;\n        },\n\n        /**********\n         * cursor *\n         **********/\n\n        /**\n         * Iterates over the store using the given options and calling onItem\n         * for each entry matching the options.\n         *\n         * @param {Function} onItem A callback to be called for each match\n         * @param {Object} [options] An object defining specific options\n         * @param {String} [options.index=null] A name of an IDBIndex to operate on\n         * @param {String} [options.order=ASC] The order in which to provide the\n         *  results, can be 'DESC' or 'ASC'\n         * @param {Boolean} [options.autoContinue=true] Whether to automatically\n         *  iterate the cursor to the next result\n         * @param {Boolean} [options.filterDuplicates=false] Whether to exclude\n         *  duplicate matches\n         * @param {IDBKeyRange} [options.keyRange=null] An IDBKeyRange to use\n         * @param {Boolean} [options.writeAccess=false] Whether grant write access\n         *  to the store in the onItem callback\n         * @param {Function} [options.onEnd=null] A callback to be called after\n         *  iteration has ended\n         * @param {Function} [options.onError=throw] A callback to be called\n         *  if an error occurred during the operation.\n         * @param {Number} [options.limit=Infinity] Limit the number of returned\n         *  results to this number\n         * @param {Number} [options.offset=0] Skip the provided number of results\n         *  in the resultset\n         * @param {Boolean} [options.allowItemRejection=false] Allows the onItem\n         * function to return a Boolean to accept or reject the current item\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        iterate: function iterate(onItem, options) {\n          options = mixin({\n            index: null,\n            order: 'ASC',\n            autoContinue: true,\n            filterDuplicates: false,\n            keyRange: null,\n            writeAccess: false,\n            onEnd: null,\n            onError: defaultErrorHandler,\n            limit: Infinity,\n            offset: 0,\n            allowItemRejection: false\n          }, options || {});\n          var directionType = options.order.toLowerCase() == 'desc' ? 'PREV' : 'NEXT';\n\n          if (options.filterDuplicates) {\n            directionType += '_NO_DUPLICATE';\n          }\n\n          var hasSuccess = false;\n          var cursorTransaction = this.db.transaction([this.storeName], this.consts[options.writeAccess ? 'READ_WRITE' : 'READ_ONLY']);\n          var cursorTarget = cursorTransaction.objectStore(this.storeName);\n\n          if (options.index) {\n            cursorTarget = cursorTarget.index(options.index);\n          }\n\n          var recordCount = 0;\n\n          cursorTransaction.oncomplete = function () {\n            if (!hasSuccess) {\n              options.onError(null);\n              return;\n            }\n\n            if (options.onEnd) {\n              options.onEnd();\n            } else {\n              onItem(null);\n            }\n          };\n\n          cursorTransaction.onabort = options.onError;\n          cursorTransaction.onerror = options.onError;\n          var cursorRequest = cursorTarget.openCursor(options.keyRange, this.consts[directionType]);\n          cursorRequest.onerror = options.onError;\n\n          cursorRequest.onsuccess = function (event) {\n            var cursor = event.target.result;\n\n            if (cursor) {\n              if (options.offset) {\n                cursor.advance(options.offset);\n                options.offset = 0;\n              } else {\n                var onItemReturn = onItem(cursor.value, cursor, cursorTransaction);\n\n                if (!options.allowItemRejection || onItemReturn !== false) {\n                  recordCount++;\n                }\n\n                if (options.autoContinue) {\n                  if (recordCount + options.offset < options.limit) {\n                    cursor['continue']();\n                  } else {\n                    hasSuccess = true;\n                  }\n                }\n              }\n            } else {\n              hasSuccess = true;\n            }\n          };\n\n          return cursorTransaction;\n        },\n\n        /**\n         * Runs a query against the store and passes an array containing matched\n         * objects to the success handler.\n         *\n         * @param {Function} onSuccess A callback to be called when the operation\n         *  was successful.\n         * @param {Object} [options] An object defining specific options\n         * @param {String} [options.index=null] A name of an IDBIndex to operate on\n         * @param {String} [options.order=ASC] The order in which to provide the\n         *  results, can be 'DESC' or 'ASC'\n         * @param {Boolean} [options.filterDuplicates=false] Whether to exclude\n         *  duplicate matches\n         * @param {IDBKeyRange} [options.keyRange=null] An IDBKeyRange to use\n         * @param {Function} [options.onError=throw] A callback to be called\n         *  if an error occurred during the operation.\n         * @param {Number} [options.limit=Infinity] Limit the number of returned\n         *  results to this number\n         * @param {Number} [options.offset=0] Skip the provided number of results\n         *  in the resultset\n         * @param {Function} [options.filter=null] A custom filter function to\n         *  apply to query resuts before returning. Must return `false` to reject\n         *  an item. Can be combined with keyRanges.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        query: function query(onSuccess, options) {\n          var result = [],\n              processedItems = 0;\n          options = options || {};\n          options.autoContinue = true;\n          options.writeAccess = false;\n          options.allowItemRejection = !!options.filter;\n\n          options.onEnd = function () {\n            onSuccess(result, processedItems);\n          };\n\n          return this.iterate(function (item) {\n            processedItems++;\n            var accept = options.filter ? options.filter(item) : true;\n\n            if (accept !== false) {\n              result.push(item);\n            }\n\n            return accept;\n          }, options);\n        },\n\n        /**\n         *\n         * Runs a query against the store, but only returns the number of matches\n         * instead of the matches itself.\n         *\n         * @param {Function} onSuccess A callback to be called if the opration\n         *  was successful.\n         * @param {Object} [options] An object defining specific options\n         * @param {String} [options.index=null] A name of an IDBIndex to operate on\n         * @param {IDBKeyRange} [options.keyRange=null] An IDBKeyRange to use\n         * @param {Function} [options.onError=throw] A callback to be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        count: function count(onSuccess, options) {\n          options = mixin({\n            index: null,\n            keyRange: null\n          }, options || {});\n          var onError = options.onError || defaultErrorHandler;\n          var hasSuccess = false,\n              result = null;\n          var cursorTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n\n          cursorTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          cursorTransaction.onabort = onError;\n          cursorTransaction.onerror = onError;\n          var cursorTarget = cursorTransaction.objectStore(this.storeName);\n\n          if (options.index) {\n            cursorTarget = cursorTarget.index(options.index);\n          }\n\n          var countRequest = cursorTarget.count(options.keyRange);\n\n          countRequest.onsuccess = function (evt) {\n            hasSuccess = true;\n            result = evt.target.result;\n          };\n\n          countRequest.onError = onError;\n          return cursorTransaction;\n        },\n\n        /**************/\n\n        /* key ranges */\n\n        /**************/\n\n        /**\n         * Creates a key range using specified options. This key range can be\n         * handed over to the count() and iterate() methods.\n         *\n         * Note: You must provide at least one or both of \"lower\" or \"upper\" value.\n         *\n         * @param {Object} options The options for the key range to create\n         * @param {*} [options.lower] The lower bound\n         * @param {Boolean} [options.excludeLower] Whether to exclude the lower\n         *  bound passed in options.lower from the key range\n         * @param {*} [options.upper] The upper bound\n         * @param {Boolean} [options.excludeUpper] Whether to exclude the upper\n         *  bound passed in options.upper from the key range\n         * @param {*} [options.only] A single key value. Use this if you need a key\n         *  range that only includes one value for a key. Providing this\n         *  property invalidates all other properties.\n         * @return {IDBKeyRange} The IDBKeyRange representing the specified options\n         */\n        makeKeyRange: function makeKeyRange(options) {\n          /*jshint onecase:true */\n          var keyRange,\n              hasLower = typeof options.lower != 'undefined',\n              hasUpper = typeof options.upper != 'undefined',\n              isOnly = typeof options.only != 'undefined';\n\n          switch (true) {\n            case isOnly:\n              keyRange = this.keyRange.only(options.only);\n              break;\n\n            case hasLower && hasUpper:\n              keyRange = this.keyRange.bound(options.lower, options.upper, options.excludeLower, options.excludeUpper);\n              break;\n\n            case hasLower:\n              keyRange = this.keyRange.lowerBound(options.lower, options.excludeLower);\n              break;\n\n            case hasUpper:\n              keyRange = this.keyRange.upperBound(options.upper, options.excludeUpper);\n              break;\n\n            default:\n              throw new Error('Cannot create KeyRange. Provide one or both of \"lower\" or \"upper\" value, or an \"only\" value.');\n          }\n\n          return keyRange;\n        }\n      };\n      /** helpers **/\n\n      var empty = {};\n\n      function mixin(target, source) {\n        var name, s;\n\n        for (name in source) {\n          s = source[name];\n\n          if (s !== empty[name] && s !== target[name]) {\n            target[name] = s;\n          }\n        }\n\n        return target;\n      }\n\n      IDBStore.prototype = proto;\n      IDBStore.version = proto.version;\n      return IDBStore;\n    }, commonjsGlobal);\n  });\n\n  /**\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n   */\n  /**\n   * Prefix all databases\n   * @type {String}\n   */\n\n  var prefix = 'tao-store-';\n  /**\n   * Access to the index of known stores.\n   * This index is needed to maintain the list of stores created by TAO, in order to apply an auto clean up.\n   * @type {Promise}\n   */\n\n  var knownStores;\n  /**\n   * The name of the store that contains the index of known stores.\n   * @type {String}\n   */\n\n  var knownStoresName = 'index';\n  /**\n   * The name of the store that contains the store id\n   * @type {String}\n   */\n\n  var idStoreName = 'id';\n  /**\n   * Check if we're using the v2 of IndexedDB\n   * @type {Boolean}\n   */\n\n  var isIndexedDB2 = typeof IDBObjectStore !== 'undefined' && 'getAll' in IDBObjectStore.prototype;\n  /**\n   * Opens a store\n   * @returns {Promise} with store instance in resolve\n   */\n\n  var openStore = function openStore(storeName) {\n    return new Promise(function (resolve, reject) {\n      var store = new idbstore({\n        dbVersion: 1,\n        storeName: storeName,\n        storePrefix: prefix,\n        keyPath: 'key',\n        autoIncrement: true,\n        onStoreReady: function onStoreReady() {\n          // auto closes when the changed version reflects a DB deletion\n          store.db.onversionchange = function onversionchange(e) {\n            if (!e || !e.newVersion) {\n              store.db.close();\n            }\n          };\n\n          resolve(store);\n        },\n        onError: reject\n      });\n    });\n  };\n  /**\n   * Sets an entry into a particular store\n   * @param store\n   * @param key\n   * @param value\n   * @returns {Promise}\n   */\n\n\n  var setEntry = function setEntry(store, key, value) {\n    return new Promise(function (resolve, reject) {\n      var entry = {\n        key: key,\n        value: value\n      };\n\n      var success = function success(returnKey) {\n        resolve(returnKey === key);\n      };\n\n      store.put(entry, success, reject);\n    });\n  };\n  /**\n   * Gets an entry from a particular store\n   * @param store\n   * @param key\n   * @returns {Promise}\n   */\n\n\n  var getEntry = function getEntry(store, key) {\n    return new Promise(function (resolve, reject) {\n      var success = function success(entry) {\n        if (!entry || typeof entry.value === 'undefined') {\n          return resolve(entry);\n        }\n\n        resolve(entry.value);\n      };\n\n      store.get(key, success, reject);\n    });\n  };\n  /**\n   * Get entries from a store\n   * @param store\n   * @returns {Promise<Object>} entries\n   */\n\n\n  var getEntries = function getEntries(store) {\n    return new Promise(function (resolve, reject) {\n      var success = function success(entries) {\n        if (!_.isArray(entries)) {\n          return resolve({});\n        }\n\n        resolve(_.reduce(entries, function (acc, entry) {\n          if (entry.key && entry.value) {\n            acc[entry.key] = entry.value;\n          }\n\n          return acc;\n        }, {}));\n      };\n\n      store.getAll(success, reject);\n    });\n  };\n  /**\n   * Remove an entry from a particular store\n   * @param store\n   * @param key\n   * @param value\n   * @returns {Promise}\n   */\n\n\n  var removeEntry = function removeEntry(store, key) {\n    return new Promise(function (resolve, reject) {\n      var success = function success(result) {\n        resolve(result !== false);\n      };\n\n      store.remove(key, success, reject);\n    });\n  };\n  /**\n   * Gets access to the store that contains the index of known stores.\n   * @returns {Promise}\n   */\n\n\n  var getKnownStores = function getKnownStores() {\n    if (!knownStores) {\n      knownStores = openStore(knownStoresName);\n    }\n\n    return knownStores;\n  };\n  /**\n   * Adds a store into the index of known stores.\n   * @param {String} storeName\n   * @returns {Promise}\n   */\n\n\n  var registerStore = function registerStore(storeName) {\n    return getKnownStores().then(function (store) {\n      return setEntry(store, storeName, {\n        name: storeName,\n        lastOpen: Date.now()\n      });\n    });\n  };\n  /**\n   * Removes a store from the index of known stores.\n   * @param {String} storeName\n   * @returns {Promise}\n   */\n\n\n  var unregisterStore = function unregisterStore(storeName) {\n    return getKnownStores().then(function (store) {\n      return removeEntry(store, storeName);\n    });\n  };\n  /**\n   * Deletes a store, then removes it from the index of known stores.\n   * @param store\n   * @param storeName\n   * @returns {Promise}\n   */\n\n\n  var deleteStore = function deleteStore(store, storeName) {\n    return new Promise(function (resolve, reject) {\n      var success = function success() {\n        unregisterStore(storeName).then(function () {\n          resolve(true);\n        }).catch(reject);\n      }; //with old implementation, deleting a store is\n      //either unsupported or buggy\n\n\n      if (isIndexedDB2) {\n        store.deleteDatabase(success, reject);\n      } else {\n        store.clear(success, reject);\n      }\n    });\n  };\n  /**\n   * Open and access a store\n   * @param {String} storeName - the store name to open\n   * @returns {Object} the store backend\n   * @throws {TypeError} without a storeName\n   */\n\n\n  var indexDbBackend = function indexDbBackend(storeName) {\n    //keep a ref of the running store\n    var innerStore;\n    /**\n     * Get the store\n     * @returns {Promise} with store instance in resolve\n     */\n\n    var getStore = function getStore() {\n      if (!innerStore) {\n        innerStore = openStore(storeName).then(function (store) {\n          return registerStore(storeName).then(function () {\n            return Promise.resolve(store);\n          });\n        });\n      }\n\n      return innerStore;\n    }; //keep a ref to the promise actually writing\n\n\n    var writePromise;\n    /**\n     * Ensure write promises are executed in series\n     * @param {Function} getWritingPromise - the function that run the promise\n     * @returns {Promise} the original one\n     */\n\n    var ensureSerie = function ensureSerie(getWritingPromise) {\n      //first promise, keep the ref\n      if (!writePromise) {\n        writePromise = getWritingPromise();\n        return writePromise;\n      } //create a wrapping promise\n\n\n      return new Promise(function (resolve, reject) {\n        //run the current request\n        var runWrite = function runWrite() {\n          var p = getWritingPromise();\n          writePromise = p; //and keep the ref\n\n          p.then(resolve).catch(reject);\n        }; //wait the previous to resolve or fail and run the current one\n\n\n        writePromise.then(runWrite).catch(runWrite);\n      });\n    };\n\n    if (_.isEmpty(storeName) || !_.isString(storeName)) {\n      throw new TypeError('The store name is required');\n    }\n    /**\n     * The store\n     */\n\n\n    return {\n      /**\n       * Get an item with the given key\n       * @param {String} key\n       * @returns {Promise} with the result in resolve, undefined if nothing\n       */\n      getItem: function getItem(key) {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return getEntry(store, key);\n          });\n        });\n      },\n\n      /**\n       * Set an item with the given key\n       * @param {String} key - the item key\n       * @param {*} value - the item value\n       * @returns {Promise} with true in resolve if added/updated\n       */\n      setItem: function setItem(key, value) {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return setEntry(store, key, value);\n          });\n        });\n      },\n\n      /**\n       * Remove an item with the given key\n       * @param {String} key - the item key\n       * @returns {Promise} with true in resolve if removed\n       */\n      removeItem: function removeItem(key) {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return removeEntry(store, key);\n          });\n        });\n      },\n\n      /**\n       * Get all store items\n       * @returns {Promise<Object>} with a collection of items\n       */\n      getItems: function getItems() {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return getEntries(store);\n          });\n        });\n      },\n\n      /**\n       * Clear the current store\n       * @returns {Promise} with true in resolve once cleared\n       */\n      clear: function clear() {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return new Promise(function (resolve, reject) {\n              var success = function success() {\n                resolve(true);\n              };\n\n              store.clear(success, reject);\n            });\n          });\n        });\n      },\n\n      /**\n       * Delete the database related to the current store\n       * @returns {Promise} with true in resolve once cleared\n       */\n      removeStore: function removeStore() {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return deleteStore(store, storeName);\n          });\n        });\n      }\n    };\n  };\n  /**\n   * Removes all storage\n   * @param {Function} [validate] - An optional callback that validates the store to delete\n   * @param {Function} [backend] - An optional storage handler to use\n   * @returns {Promise} with true in resolve once cleaned\n   */\n\n\n  indexDbBackend.removeAll = function removeAll(validate) {\n    if (!_.isFunction(validate)) {\n      validate = null;\n    }\n\n    return getKnownStores().then(function (store) {\n      return new Promise(function (resolve, reject) {\n        function cleanUp(entries) {\n          var all = [];\n\n          _.forEach(entries, function (entry) {\n            var storeName = entry && entry.key;\n\n            if (storeName) {\n              all.push(openStore(storeName).then(function (storeToRemove) {\n                if (!validate || validate(storeName, entry.value)) {\n                  return deleteStore(storeToRemove, storeName);\n                }\n              }));\n            }\n          });\n\n          Promise.all(all).then(resolve).catch(reject);\n        }\n\n        store.getAll(cleanUp, reject);\n      });\n    });\n  };\n  /**\n   * Get all storage\n   * @param {Function} [validate] - An optional callback that validates the store to delete\n   * @param {Function} [backend] - An optional storage handler to use\n   * @returns {Promise} with true in resolve once cleaned\n   */\n\n\n  indexDbBackend.getAll = function getAll(validate) {\n    if (!_.isFunction(validate)) {\n      validate = function valid() {\n        return true;\n      };\n    }\n\n    return getKnownStores().then(function (store) {\n      return new Promise(function (resolve, reject) {\n        store.getAll(function (entries) {\n          var storeNames = _(entries).filter(function (entry) {\n            return entry && entry.key && validate(entry.key, entry.value);\n          }).map(function (entry) {\n            return entry.key;\n          }).value();\n\n          return resolve(storeNames);\n        }, reject);\n      });\n    });\n  };\n  /**\n   * Get the identifier of the storage\n   * @returns {Promise} that resolves with the store identifier\n   */\n\n\n  indexDbBackend.getStoreIdentifier = function getStoreIdentifier() {\n    return openStore(idStoreName).then(function (store) {\n      return getEntry(store, idStoreName).then(function (id) {\n        if (!_.isEmpty(id)) {\n          return id;\n        }\n\n        id = uuid();\n        return setEntry(store, idStoreName, id).then(function () {\n          return id;\n        });\n      });\n    });\n  };\n\n  return indexDbBackend;\n\n});\n\n","define('core/store/memory',['lodash', 'core/promise', 'lib/uuid'], function (_, Promise, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * where data dwelves\n     */\n\n    var memoryStore = {};\n    /**\n     * The storage identifier\n     */\n\n    var idStore;\n    /**\n     * Open and access a store\n     * @param {String} storeName - the store name to open\n     * @returns {Object} the store backend\n     * @throws {TypeError} without a storeName\n     */\n\n    var memoryStorageBackend = function memoryStorageBackend(storeName) {\n      if (_.isEmpty(storeName) || !_.isString(storeName)) {\n        throw new TypeError('The store name is required');\n      }\n\n      memoryStore[storeName] = memoryStore[storeName] || {};\n      /**\n       * The store\n       */\n\n      return {\n        /**\n         * Get an item with the given key\n         * @param {String} key\n         * @returns {Promise} with the result in resolve, undfined if nothing\n         */\n        getItem: function getItem(key) {\n          if (!_.isPlainObject(memoryStore[storeName])) {\n            return Promise.resolve();\n          }\n\n          return Promise.resolve(memoryStore[storeName][key]);\n        },\n\n        /**\n         * Set an item with the given key\n         * @param {String} key - the item key\n         * @param {*} value - the item value\n         * @returns {Promise} with true in resolve if added/updated\n         */\n        setItem: function setItem(key, value) {\n          if (!_.isPlainObject(memoryStore[storeName])) {\n            memoryStore[storeName] = {};\n          }\n\n          memoryStore[storeName][key] = value;\n          return Promise.resolve(true);\n        },\n\n        /**\n         * Remove an item with the given key\n         * @param {String} key - the item key\n         * @returns {Promise} with true in resolve if removed\n         */\n        removeItem: function removeItem(key) {\n          memoryStore[storeName] = _.omit(memoryStore[storeName], key);\n          return Promise.resolve(typeof memoryStore[storeName][key] === 'undefined');\n        },\n\n        /**\n         * Get all store items\n         * @returns {Promise<Object>} with a collection of items\n         */\n        getItems: function getItems() {\n          return Promise.resolve(memoryStore[storeName]);\n        },\n\n        /**\n         * Clear the current store\n         * @returns {Promise} with true in resolve once cleared\n         */\n        clear: function clear() {\n          memoryStore[storeName] = {};\n          return Promise.resolve(true);\n        },\n\n        /**\n         * Delete the database related to the current store\n         * @returns {Promise} with true in resolve once cleared\n         */\n        removeStore: function removeStore() {\n          memoryStore = _.omit(memoryStore, storeName);\n          return Promise.resolve(typeof memoryStore[storeName] === 'undefined');\n        }\n      };\n    };\n    /**\n     * Removes all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @returns {Promise} with true in resolve once cleaned\n     */\n\n\n    memoryStorageBackend.removeAll = function removeAll(validate) {\n      if (!_.isFunction(validate)) {\n        validate = null;\n      }\n\n      memoryStore = _.omit(memoryStore, function (store, storeName) {\n        return validate ? validate(storeName) : true;\n      });\n      return Promise.resolve(true);\n    };\n    /**\n     * Get all stores\n     * @param {Function} [validate] - An optional callback that validates the stores to retrieve\n     * @returns {Promise<String[]>} resolves with the list of stores\n     */\n\n\n    memoryStorageBackend.getAll = function getAll(validate) {\n      var storeNames = [];\n\n      if (!_.isFunction(validate)) {\n        validate = null;\n      }\n\n      storeNames = _(memoryStore).map(function (store, storeName) {\n        return storeName;\n      }).filter(function (storeName) {\n        return validate ? validate(storeName) : true;\n      }).value();\n      return Promise.resolve(storeNames);\n    };\n    /**\n     * Get the identifier of the storage\n     * @returns {Promise} that resolves with the store identifier\n     */\n\n\n    memoryStorageBackend.getStoreIdentifier = function getStoreIdentifier() {\n      //we use the storeName also as the id\n      if (_.isEmpty(idStore)) {\n        idStore = uuid();\n      }\n\n      return Promise.resolve(idStore);\n    };\n\n    return memoryStorageBackend;\n\n});\n\n","define('core/store',['lodash', 'moment', 'module', 'core/logger', 'core/promise', 'core/store/localstorage', 'core/store/indexeddb', 'core/store/memory'], function (_, moment, module, loggerFactory, Promise, localStorageBackend, indexedDBBackend, memoryBackend) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    localStorageBackend = localStorageBackend && localStorageBackend.hasOwnProperty('default') ? localStorageBackend['default'] : localStorageBackend;\n    indexedDBBackend = indexedDBBackend && indexedDBBackend.hasOwnProperty('default') ? indexedDBBackend['default'] : indexedDBBackend;\n    memoryBackend = memoryBackend && memoryBackend.hasOwnProperty('default') ? memoryBackend['default'] : memoryBackend;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var supportsIndexedDB = false;\n    var dectectionDone = false;\n    var quotaChecked = false;\n    /**\n     * The exported store module, can be used as a function to get one store\n     * or as an object to run methods on multiple stores.\n     *\n     * @type {Function|Object}\n     */\n\n    var store;\n    /**\n     * The list of required methods exposed by a store backend\n     * @type {String[]}\n     */\n\n    var backendApi = ['removeAll', 'getAll', 'getStoreIdentifier'];\n    /**\n     * The list of required methods exposed by a store implementation\n     * @type {String[]}\n     */\n\n    var storeApi = ['getItem', 'setItem', 'removeItem', 'getItems', 'clear', 'removeStore'];\n    /**\n     * Dedicated logger\n     */\n\n    var logger = loggerFactory('core/store');\n    /**\n     * Main config\n     */\n\n    var config = _.defaults(module.config() || {}, {\n      /**\n       * Percent of used space (ie. 80% used)\n       * to consider the browser as having low space\n       * @type {Number}\n       */\n      lowSpaceRatio: 80,\n\n      /**\n       * Default duration thresholds to invalidate stores\n       *\n       * @type {Object<String>} ISO 8601  duration\n       */\n      invalidation: {\n        //candidate for invalidation if we're going over quota\n        staled: 'P2W',\n        //candidate for upfront invalidation if estimates are low\n        oldster: 'P2M'\n      }\n    });\n    /**\n     * Detect IndexedDB support.\n     * Due to a bug in Firefox private mode, we need to try to open a database to be sure it's available.\n     * @returns {Promise} that resolve the result\n     */\n\n\n    var isIndexDBSupported = function isIndexDBSupported() {\n      if (dectectionDone) {\n        return Promise.resolve(supportsIndexedDB);\n      }\n\n      return new Promise(function (resolve) {\n        var test, indexedDB;\n\n        var done = function done(result) {\n          supportsIndexedDB = !!result;\n          dectectionDone = true;\n          return resolve(supportsIndexedDB);\n        };\n\n        try {\n          indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.OIndexedDB || window.msIndexedDB;\n\n          if (!indexedDB) {\n            return done(false);\n          } //we need to try to open a db, for example FF in private browsing will fail.\n\n\n          test = indexedDB.open('__feature_test', 1);\n\n          test.onsuccess = function () {\n            if (test.result) {\n              test.result.close();\n              return done(true);\n            }\n          }; //if we can't open a DB, we assume, we fallback\n\n\n          test.onerror = function (e) {\n            e.preventDefault();\n            done(false);\n            return false;\n          };\n        } catch (err) {\n          //a sync err, we fallback\n          done(false);\n        }\n      });\n    };\n    /**\n     * Check storage estimates and invalidate old\n     * Estimates aren't widely supported,\n     * but that worth to try it (progressive enhancement)\n     */\n\n\n    var checkQuotas = function checkQuotas() {\n      if (!quotaChecked && 'storage' in window.navigator && window.navigator.storage.estimate) {\n        window.navigator.storage.estimate().then(function (estimate) {\n          var usedRatio = 0;\n\n          if (_.isNumber(estimate.usage) && _.isNumber(estimate.quota) && estimate.quota > 0) {\n            usedRatio = estimate.usage / estimate.quota;\n\n            if (usedRatio > config.lowSpaceRatio) {\n              logger.warn('The browser storage is getting low ' + usedRatio.toFixed(2) + '% used', estimate);\n              logger.warn('We will attempt to clean oldster databases in persistent backends');\n              store.cleanUpSpace(config.invalidation.oldster, [], localStorageBackend);\n\n              if (isIndexDBSupported) {\n                store.cleanUpSpace(config.invalidation.oldster, [], indexedDBBackend);\n              }\n            } else {\n              logger.debug('Browser storage estimate : ' + usedRatio.toFixed(2) + '% used', estimate);\n            }\n          }\n        }).catch(function (err) {\n          logger.warn('Unable to retrieve quotas : ' + err.message);\n        });\n      }\n\n      quotaChecked = true;\n    };\n    /**\n     * Check the backend object complies with the API\n     * @param {Object} backend - the backend object to check\n     * @returns {Boolean} true if valid\n     */\n\n\n    var isBackendApiValid = function isBackendApiValid(backend) {\n      return _.all(backendApi, function methodExists(method) {\n        return _.isFunction(backend[method]);\n      });\n    };\n    /**\n     * Check the storage object complies with the Storage API\n     * @param {Storage} storage - the storage object to check\n     * @returns {Boolean} true if valid\n     */\n\n\n    var isStorageApiValid = function isStorageApiValid(storage) {\n      return _.all(storeApi, function methodExists(method) {\n        return _.isFunction(storage[method]);\n      });\n    };\n    /**\n     * Load the backend based either on the pre-selected and the current support\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the backend\n     */\n\n\n    var loadBackend = function loadBackend(preselectedBackend) {\n      return isIndexDBSupported().then(function () {\n        var backend = preselectedBackend || (supportsIndexedDB ? indexedDBBackend : localStorageBackend);\n\n        if (!_.isFunction(backend)) {\n          return Promise.reject(new TypeError('No backend, no storage!'));\n        }\n\n        if (!isBackendApiValid(backend)) {\n          return Promise.reject(new TypeError(\"This backend doesn't comply with the store backend API\"));\n        } //attempt to check the quotas\n\n\n        if (backend !== memoryBackend) {\n          checkQuotas();\n        }\n\n        return backend;\n      });\n    };\n    /**\n     * Loads a store\n     *\n     * @param {String} storeName - the name of the store\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the Storage a Storage Like instance\n     */\n\n\n    store = function storeLoader(storeName, preselectedBackend) {\n      return loadBackend(preselectedBackend).then(function (backend) {\n        var storeInstance = backend(storeName);\n\n        if (!isStorageApiValid(storeInstance)) {\n          return Promise.reject(new TypeError(\"The store doesn't comply with the Storage interface\"));\n        }\n\n        return storeInstance;\n      });\n    };\n    /**\n     * The available backends,\n     * exposed.\n     */\n\n\n    store.backends = {\n      localStorage: localStorageBackend,\n      indexedDB: indexedDBBackend,\n      memory: memoryBackend\n    };\n    /**\n     * Removes all storage\n     * @param {validateStore} [validate] - An optional callback that validates the store to delete\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} with true in resolve once cleaned\n     */\n\n    store.removeAll = function removeAll(validate, preselectedBackend) {\n      return loadBackend(preselectedBackend).then(function (backend) {\n        /**\n         * @callback validateStore\n         * @param {String} storeName - the name of the store\n         * @param {Object} store - the store details\n         */\n        return backend.removeAll(validate);\n      });\n    };\n    /**\n     * Clean up storage meeting the invalidation conditions\n     * @param {Number|String} [since] - unix timestamp in ms or ISO duration, to compare with lastOpen\n     * @param {RegExp} [storeNamePattern] - applies only on store names that matches the pattern\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise<Boolean>}\n     */\n\n\n    store.cleanUpSpace = function cleanUpSpace(since, storeNamePattern, preselectedBackend) {\n      var tsThreshold;\n      /**\n       * Create the invalidation callback\n       * @type {validateStore}\n       */\n\n      var invalidate = function invalidate(storeName, storeEntry) {\n        if (!storeName || !storeEntry) {\n          return false;\n        } //storeName matches ?\n\n\n        if (storeNamePattern instanceof RegExp && !storeNamePattern.test(storeName)) {\n          return false;\n        }\n\n        return _.isNumber(storeEntry.lastOpen) && _.isNumber(tsThreshold) && storeEntry.lastOpen <= tsThreshold;\n      };\n\n      if (_.isNumber(since) && since > 0) {\n        tsThreshold = since;\n      } else {\n        if (!_.isString(since)) {\n          since = config.invalidation.oldster;\n        }\n\n        tsThreshold = moment().subtract(moment.duration(since)).valueOf();\n      }\n\n      logger.info('Trying to remove stores lastly opened before ' + tsThreshold + '(' + since + ')');\n      return store.removeAll(invalidate, preselectedBackend);\n    };\n    /**\n     * Get the name/key of all storages\n     * @param {validateStore} [validate] - An optional callback that validates the store\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise<String[]>} resolves with the names of the stores\n     */\n\n\n    store.getAll = function getAll(validate, preselectedBackend) {\n      return loadBackend(preselectedBackend).then(function (backend) {\n        return backend.getAll(validate);\n      });\n    };\n    /**\n     * Get the identifier of either the current (or the pre-selected store)\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the identifier\n     */\n\n\n    store.getIdentifier = function getIdentifier(preselectedBackend) {\n      return loadBackend(preselectedBackend).then(function (backend) {\n        return backend.getStoreIdentifier();\n      });\n    };\n\n    var store$1 = store;\n\n    return store$1;\n\n});\n\n","define('core/tokenStore',['lodash', 'core/promise', 'core/store'], function (_, Promise, store) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    store = store && store.hasOwnProperty('default') ? store['default'] : store;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 Open Assessment Technologies SA\n     */\n    /**\n     * The default number of tokens to store\n     */\n\n    var defaultConfig = {\n      maxSize: 6,\n      tokenTimeLimit: 1000 * 60 * 24\n    };\n    /**\n     * Create a token store\n     * @param {Object} [options]\n     * @param {Number} [options.maxSize = 6] - the store limit\n     * @param {Number} [options.tokenTimeLimit] - time in milliseconds each token remains valid for\n     * @returns {tokenStore}\n     */\n\n    function tokenStoreFactory(options) {\n      var config = _.defaults(options || {}, defaultConfig); // In memory storage\n      // For security reasons, this is preferred over the indexeddb or localStorage implementations\n\n\n      var getStore = function getStore() {\n        return store('tokenStore.tokens', store.backends.memory);\n      };\n      /**\n       * @typedef tokenStore\n       */\n\n\n      return {\n        /**\n         * Get the oldest token from the queue\n         * Remove its store entry as well\n         *\n         * @returns {Promise<Object>} the token object\n         */\n        dequeue: function dequeue() {\n          var self = this;\n          return self.getIndex().then(function (latestIndex) {\n            var key = _.first(latestIndex);\n\n            if (!key) return Promise.resolve();\n            return getStore().then(function (storage) {\n              return storage.getItem(key);\n            }).then(function (token) {\n              return self.remove(key).then(function () {\n                return token;\n              });\n            });\n          });\n        },\n\n        /**\n         * Add a new token object to the queue\n         * Add an entry to the store as well\n         *\n         * @param {Object} token - the token object\n         * @param {String} token.value - long alphanumeric string\n         * @param {Number} token.receivedAt - timestamp\n         * @returns {Promise<Boolean>} - true if added\n         */\n        enqueue: function enqueue(token) {\n          var self = this; // Handle legacy param type:\n\n          if (_.isString(token)) {\n            token = {\n              value: token,\n              receivedAt: Date.now()\n            };\n          }\n\n          return getStore().then(function (storage) {\n            return storage.setItem(token.value, token);\n          }).then(function (updated) {\n            if (updated) {\n              return self.enforceMaxSize().then(function () {\n                return true;\n              });\n            }\n\n            return false;\n          });\n        },\n\n        /**\n         * Generate a new (chronologically-sorted) index from the store contents\n         * (because it would not be unique if stored in the module)\n         *\n         * @returns {Promise<Array>}\n         */\n        getIndex: function getIndex() {\n          return this.getTokens().then(function (tokens) {\n            return _.chain(tokens).values().sort(function (t1, t2) {\n              return t1.receivedAt - t2.receivedAt;\n            }).map('value').value();\n          });\n        },\n\n        /**\n         * Check whether the given token is in the store\n         *\n         * @param {String} key - token string\n         * @returns {Boolean}\n         */\n        has: function has(key) {\n          return this.getIndex().then(function (latestIndex) {\n            return _.contains(latestIndex, key);\n          });\n        },\n\n        /**\n         * Remove the token from the queue and the store\n         *\n         * @param {String} key - token string\n         * @returns {Promise<Boolean>} resolves once removed\n         */\n        remove: function remove(key) {\n          return this.has(key).then(function (result) {\n            if (result) {\n              return getStore().then(function (storage) {\n                return storage.removeItem(key);\n              });\n            }\n\n            return false;\n          });\n        },\n\n        /**\n         * Empty the queue and store\n         * @returns {Promise}\n         */\n        clear: function clear() {\n          return getStore().then(function (storage) {\n            return storage.clear();\n          });\n        },\n\n        /**\n         * Gets all tokens in the store\n         * @returns {Promise<Array>} - token objects\n         */\n        getTokens: function getTokens() {\n          return getStore().then(function (storage) {\n            return storage.getItems();\n          });\n        },\n\n        /**\n         * Gets the current size of the store\n         * @returns {Promise<Integer>}\n         */\n        getSize: function getSize() {\n          return this.getIndex().then(function (latestIndex) {\n            return latestIndex.length;\n          });\n        },\n\n        /**\n         * Setter for maximum pool size\n         * @param {Integer} size\n         */\n        setMaxSize: function setMaxSize(size) {\n          var self = this;\n\n          if (_.isNumber(size) && size > 0 && size !== config.maxSize) {\n            config.maxSize = size;\n            self.enforceMaxSize();\n          }\n        },\n\n        /**\n         * Removes oldest tokens, if the pool is above its size limit\n         * (Could happen if maxSize is reduced during the life of the tokenStore)\n         * @returns {Promise} - resolves when done\n         */\n        enforceMaxSize: function enforceMaxSize() {\n          var self = this;\n          return this.getIndex().then(function (latestIndex) {\n            var keysToRemove;\n            var excess = latestIndex.length - config.maxSize;\n\n            if (excess > 0) {\n              keysToRemove = latestIndex.slice(0, excess);\n              return Promise.all(_.map(keysToRemove, function (key) {\n                return self.remove(key);\n              }));\n            }\n\n            return true;\n          });\n        },\n\n        /**\n         * Checks one token and removes it from the store if expired\n         * @param {Object} token - the token object\n         * @returns {Promise<Boolean>}\n         */\n        checkExpiry: function checkExpiry(token) {\n          if (Date.now() - token.receivedAt > config.tokenTimeLimit) {\n            return this.remove(token.value);\n          }\n\n          return true;\n        },\n\n        /**\n         * Checks all the tokens in the store to see if they expired\n         * @returns {Promise<Boolean>} - resolves to true\n         */\n        expireOldTokens: function expireOldTokens() {\n          var self = this;\n          return self.getTokens().then(function (tokens) {\n            // Check each token's expiry, synchronously:\n            return _.reduce(tokens, function (previousPromise, nextToken) {\n              return previousPromise.then(function () {\n                return self.checkExpiry(nextToken);\n              });\n            }, Promise.resolve()).then(function () {\n              // All done\n              return true;\n            });\n          });\n        }\n      };\n    }\n\n    return tokenStoreFactory;\n\n});\n\n","define('core/tokenHandler',['lodash', 'module', 'core/tokenStore', 'core/promise', 'core/promiseQueue'], function (_, module, tokenStoreFactory, Promise, promiseQueue) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    tokenStoreFactory = tokenStoreFactory && tokenStoreFactory.hasOwnProperty('default') ? tokenStoreFactory['default'] : tokenStoreFactory;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var clientConfigFetched = false;\n    var defaults = {\n      maxSize: 6,\n      tokenTimeLimit: 1000 * 60 * 24\n    };\n    /**\n     * Stores the security token queue\n     * @param {Object} [options]\n     * @param {String} [options.maxSize]\n     * @param {String} [options.tokenTimeLimit]\n     * @param {String} [options.initialToken]\n     * @returns {tokenHandler}\n     */\n\n    function tokenHandlerFactory(options) {\n      var tokenStore; // Convert legacy parameter:\n\n      if (_.isString(options)) {\n        options = {\n          initialToken: options\n        };\n      }\n\n      options = _.defaults({}, options, defaults); // Initialise storage for tokens:\n\n      tokenStore = tokenStoreFactory(options);\n      return {\n        /**\n         * Gets the next security token from the token queue\n         * If none are available, it can check the ClientConfig (once only per page)\n         * Once the token is got, it is erased from the store (because they are single-use by design)\n         *\n         * @returns {Promise<String>} the token value\n         */\n        getToken: function getToken() {\n          var self = this;\n          var initialToken = options.initialToken;\n\n          var getFirstTokenValue = function getFirstTokenValue() {\n            return tokenStore.dequeue().then(function (currentToken) {\n              if (currentToken) {\n                return currentToken.value;\n              }\n\n              return null;\n            });\n          }; // If set, initialToken will be provided directly, without using store:\n\n\n          if (initialToken) {\n            options.initialToken = null;\n            return Promise.resolve(initialToken);\n          } // Some async checks before we go for the token:\n\n\n          return tokenStore.expireOldTokens().then(function () {\n            return tokenStore.getSize();\n          }).then(function (queueSize) {\n            if (queueSize > 0) {\n              // Token available, use it\n              return getFirstTokenValue();\n            } else if (!clientConfigFetched) {\n              // Client Config allowed! (first and only time)\n              return self.getClientConfigTokens().then(getFirstTokenValue);\n            } else {\n              // No more token options, refresh needed\n              return Promise.reject(new Error('No tokens available. Please refresh the page.'));\n            }\n          });\n        },\n\n        /**\n         * Adds a new security token to the token queue\n         * Internally, old tokens are deleted to keep queue within maximum pool size\n         * @param {String} newToken\n         * @returns {Promise<Boolean>} - resolves true if successful\n         */\n        setToken: function setToken(newToken) {\n          return tokenStore.enqueue(newToken);\n        },\n\n        /**\n         * Extracts tokens from the Client Config which should be received on every page load\n         * @returns {Promise<Boolean>} - resolves true when completed\n         */\n        getClientConfigTokens: function getClientConfigTokens() {\n          var self = this;\n\n          var clientTokens = _.map(module.config().tokens, function (serverToken) {\n            return {\n              value: serverToken,\n              receivedAt: Date.now()\n            };\n          }); // Record that this function ran:\n\n\n          clientConfigFetched = true;\n          return Promise.resolve(clientTokens).then(function (newTokens) {\n            // Add the fetched tokens to the store\n            // Uses a promiseQueue to ensure synchronous adding\n            var setTokenQueue = promiseQueue();\n\n            _.forEach(newTokens, function (token) {\n              setTokenQueue.serie(function () {\n                return self.setToken(token);\n              });\n            });\n\n            return setTokenQueue.serie(function () {\n              return true;\n            });\n          });\n        },\n\n        /**\n         * Clears the token store\n         * @returns {Promise<Boolean>} - resolves to true when cleared\n         */\n        clearStore: function clearStore() {\n          return tokenStore.clear();\n        },\n\n        /**\n         * Getter for the current queue length\n         * @returns {Promise<Integer>}\n         */\n        getQueueLength: function getQueueLength() {\n          return tokenStore.getSize();\n        },\n\n        /**\n         * Setter for maximum pool size\n         * @param {Integer} size\n         */\n        setMaxSize: function setMaxSize(size) {\n          tokenStore.setMaxSize(size);\n        }\n      };\n    }\n\n    return tokenHandlerFactory;\n\n});\n\n","define('core/request',['jquery', 'lodash', 'i18n', 'module', 'context', 'core/promise', 'core/promiseQueue', 'core/tokenHandler', 'core/logger'], function ($, _, __, module, context, Promise, promiseQueue, tokenHandlerFactory, loggerFactory) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    context = context && context.hasOwnProperty('default') ? context['default'] : context;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n    tokenHandlerFactory = tokenHandlerFactory && tokenHandlerFactory.hasOwnProperty('default') ? tokenHandlerFactory['default'] : tokenHandlerFactory;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA;\n     */\n    var tokenHeaderName = 'X-CSRF-Token';\n    var tokenHandler = tokenHandlerFactory();\n    var queue = promiseQueue();\n    var logger = loggerFactory('core/request');\n    /**\n     * Create a new error based on the given response\n     * @param {Object} response - the server body response as plain object\n     * @param {String} fallbackMessage - the error message in case the response isn't correct\n     * @param {Number} httpCode - the response HTTP code\n     * @param {Boolean} httpSent - the sent status\n     * @returns {Error} the new error\n     */\n\n    var createError = function createError(response, fallbackMessage, httpCode, httpSent) {\n      var err;\n\n      if (response && response.errorCode) {\n        err = new Error(response.errorCode + ' : ' + (response.errorMsg || response.errorMessage || response.error));\n      } else {\n        err = new Error(fallbackMessage);\n      }\n\n      err.response = response;\n      err.sent = httpSent;\n      err.source = response.source || 'request';\n\n      if (_.isNumber(httpCode)) {\n        err.code = httpCode;\n      }\n\n      return err;\n    };\n    /**\n     * Request content from a TAO endpoint\n     * @param {Object} options\n     * @param {String} options.url - the endpoint full url\n     * @param {String} [options.method='GET'] - the HTTP method\n     * @param {Object} [options.data] - additional parameters (if method is 'POST')\n     * @param {Object} [options.headers] - the HTTP headers\n     * @param {String} [options.contentType] - what kind of data we're sending - usually 'json'\n     * @param {String} [options.dataType] - what kind of data expected in response\n     * @param {Boolean} [options.noToken=false] - by default, a token is always sent. If noToken=true, disables the token requirement\n     * @param {Boolean} [options.background] - if true, the request should be done in the background, which in practice does not trigger the global handlers like ajaxStart or ajaxStop\n     * @param {Boolean} [options.sequential] - if true, the request must join a queue to be run sequentially\n     * @param {Number}  [options.timeout] - timeout in seconds for the AJAX request\n     * @returns {Promise} resolves with response, or reject if something went wrong\n     */\n\n\n    function request(options) {\n      // Allow external config to override user option\n      if (module.config().noToken) {\n        options.noToken = true;\n      }\n\n      if (_.isEmpty(options.url)) {\n        throw new TypeError('At least give a URL...');\n      }\n      /**\n       * Function wrapper which allows the contents to be run now, or added to a queue\n       * @returns {Promise} resolves with response, or rejects if something went wrong\n       */\n\n\n      function runRequest() {\n        /**\n         * Fetches a security token and appends it to headers, if required\n         * @returns {Promise<Object>} - resolves with headers object\n         */\n        var computeHeaders = function computeHeaders() {\n          var headers = _.extend({}, options.headers);\n\n          if (!options.noToken) {\n            return tokenHandler.getToken().then(function (token) {\n              headers[tokenHeaderName] = token || 'none';\n              return headers;\n            });\n          }\n\n          return Promise.resolve(headers);\n        };\n        /**\n         * Extracts returned security token from headers and adds it to store\n         * @param {Object} xhr\n         * @returns {Promise} - resolves when done\n         */\n\n\n        var setTokenFromXhr = function setTokenFromXhr(xhr) {\n          var token;\n\n          if (_.isFunction(xhr.getResponseHeader)) {\n            token = xhr.getResponseHeader(tokenHeaderName);\n            logger.debug('received %s header %s', tokenHeaderName, token);\n\n            if (token) {\n              return tokenHandler.setToken(token);\n            }\n          }\n\n          return Promise.resolve();\n        };\n\n        return computeHeaders().then(function (customHeaders) {\n          return new Promise(function (resolve, reject) {\n            var noop;\n            $.ajax({\n              url: options.url,\n              method: options.method || 'GET',\n              headers: customHeaders,\n              data: options.data,\n              contentType: options.contentType || noop,\n              dataType: options.dataType || 'json',\n              async: true,\n              timeout: options.timeout * 1000 || context.timeout * 1000 || 0,\n              beforeSend: function beforeSend() {\n                if (!_.isEmpty(customHeaders)) {\n                  logger.debug('sending %s header %s', tokenHeaderName, customHeaders && customHeaders[tokenHeaderName]);\n                }\n              },\n              global: !options.background //TODO fix this with TT-260\n\n            }).done(function (response, status, xhr) {\n              setTokenFromXhr(xhr).then(function () {\n                if (xhr.status === 204 || response && response.errorCode === 204 || status === 'nocontent') {\n                  // no content, so resolve with empty data.\n                  return resolve();\n                } // handle case where token expired or invalid\n\n\n                if (xhr.status === 403 || response && response.errorCode === 403) {\n                  return reject(createError(response, xhr.status + ' : ' + xhr.statusText, xhr.status, xhr.readyState > 0));\n                }\n\n                if (xhr.status === 200 || response && response.success === true) {\n                  // there's some data\n                  return resolve(response);\n                } //the server has handled the error\n\n\n                reject(createError(response, __('The server has sent an empty response'), xhr.status, xhr.readyState > 0));\n              }).catch(function (error) {\n                logger.error(error);\n                reject(createError(response, error, xhr.status, xhr.readyState > 0));\n              });\n            }).fail(function (xhr, textStatus, errorThrown) {\n              var response;\n\n              try {\n                response = JSON.parse(xhr.responseText);\n              } catch (parseErr) {\n                response = {};\n              }\n\n              response = _.defaults(response, {\n                success: false,\n                source: 'network',\n                cause: options.url,\n                purpose: 'proxy',\n                context: this,\n                code: xhr.status,\n                sent: xhr.readyState > 0,\n                type: 'error',\n                message: errorThrown || __('An error occurred!')\n              });\n              setTokenFromXhr(xhr).then(function () {\n                reject(createError(response, xhr.status + ' : ' + xhr.statusText, xhr.status, xhr.readyState > 0));\n              }).catch(function (error) {\n                logger.error(error);\n                reject(createError(response, error, xhr.status, xhr.readyState > 0));\n              });\n            });\n          });\n        });\n      } // Decide how to launch the request based on certain params:\n\n\n      return tokenHandler.getQueueLength().then(function (queueLength) {\n        if (options.noToken === true) {\n          // no token protection, run the request\n          return runRequest();\n        } else if (options.sequential || queueLength === 1) {\n          // limited tokens, sequential queue must be used\n          return queue.serie(runRequest);\n        } else {\n          // tokens ready\n          return runRequest();\n        }\n      });\n    }\n\n    return request;\n\n});\n\n","define('core/dataProvider/request',['lodash', 'core/request'], function (_, coreRequest) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    coreRequest = coreRequest && coreRequest.hasOwnProperty('default') ? coreRequest['default'] : coreRequest;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA;\n     */\n    /**\n     * A wrapper for the core module which requests content from a TAO endpoint\n     *\n     * @param {String} url - the endpoint full url\n     * @param {Object} [data] - additional parameters\n     * @param {String} [method='GET'] - the HTTP method\n     * @param {Object} [headers] - the HTTP header\n     * @param {Boolean} [background] - tells if the request should be done in the background, which in practice does not trigger the global handlers like ajaxStart or ajaxStop\n     * @param {Boolean} [noToken=true] - the default is a request with no token, set this to false to require a token\n     * @returns {Promise} that resolves with data or reject if something went wrong\n     */\n\n    function request(url, data, method, headers, background, noToken) {\n      return coreRequest({\n        url: url,\n        data: data,\n        method: method,\n        headers: headers,\n        background: background,\n        noToken: noToken === false ? false : true\n      }).then(function (response) {\n        if (_.isUndefined(response)) {\n          // in case 204 empty content\n          return Promise.resolve();\n        } else if (response.success) {\n          return Promise.resolve(response.data);\n        } else {\n          return Promise.reject(response); // in case success:false different types of response\n        }\n      }).catch(function (error) {\n        return Promise.reject(error);\n      });\n    }\n\n    return request;\n\n});\n\n","define('util/regexEscape',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * Escapes -\\/\\\\^$*+?.()|[\\]{} inside a string. Use when\n     * concatenating a string for usage in new RegExp().\n     *\n     * @author dieter <dieter@taotesting.com>\n     */\n    function regexEscape (s) {\n      return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    return regexEscape;\n\n});\n\n","define('util/wrapLongWords',['util/regexEscape'], function (regexEscape) { 'use strict';\n\n    regexEscape = regexEscape && regexEscape.hasOwnProperty('default') ? regexEscape['default'] : regexEscape;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n    /**\n     * Builds a chunked term from a too long one.\n     *\n     * Internet Explorer will not insert a line-break before a period or a colon (and possibly other characters),\n     * even when they're preceded by a space. To address this chunks starting with one of the problematic characters\n     * will have this removed and it will be appended to the previous chunk.\n     *\n     * @param longWord\n     * @param chunkExp\n     * @returns {string}\n     */\n\n    var getCutTerm = function getCutTerm(longWord, chunkExp) {\n      var cutTerms = longWord.match(chunkExp),\n          i = cutTerms.length,\n          oldFirst = '',\n          newFirst = '',\n          offenders = ['.', ':', ';'];\n\n      while (i--) {\n        newFirst = cutTerms[i].charAt(0);\n\n        if (offenders.indexOf(newFirst) > -1) {\n          cutTerms[i] = cutTerms[i].substr(1);\n        }\n\n        if (offenders.indexOf(oldFirst) > -1) {\n          cutTerms[i] = cutTerms[i] + oldFirst;\n        }\n\n        oldFirst = newFirst;\n      }\n\n      return cutTerms.join(' ');\n    };\n    /**\n     * Wrap very long strings after n characters\n     *\n     * @param str\n     * @param threshold number of characters to break after\n     * @returns {string}\n     */\n\n\n    function wrapLongWords(str, threshold) {\n      // add whitespaces to provoke line breaks before HTML tags\n      str = str.toString().replace(/([\\w])</g, '$1 <');\n      var chunkExp = new RegExp('.{1,' + threshold + '}', 'g'),\n          longWords = str.match(new RegExp('[\\\\S]{' + threshold + ',}', 'g')) || [],\n          i = longWords.length,\n          cut;\n\n      while (i--) {\n        cut = getCutTerm(longWords[i], chunkExp);\n        str = str.replace(new RegExp(regexEscape(longWords[i]), 'g'), cut);\n      }\n\n      return str;\n    }\n\n    return wrapLongWords;\n\n});\n\n","define('util/encode',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     *\n     * @author dieter <dieter@taotesting.com>\n     */\n    var _reQuot = /\"/g;\n    var _reApos = /'/g;\n    /**\n     * Encodes an HTML string to be safely displayed without code interpretation\n     *\n     * @param {String} html\n     * @returns {String}\n     */\n\n    var encodeHTML = function encodeHTML(html) {\n      // @see http://tinyurl.com/ko75kph\n      return document.createElement('a').appendChild(document.createTextNode(html)).parentNode.innerHTML;\n    };\n    /**\n     * Encodes an HTML string to be safely use inside an attribute\n     *\n     * @param {String} html\n     * @returns {String}\n     */\n\n\n    var encodeAttribute = function encodeAttribute(html) {\n      // use replaces chain instead of unified replace with map for performances reasons\n      // @see http://jsperf.com/htmlencoderegex/68\n      return encodeHTML(html).replace(_reQuot, '&quot;').replace(_reApos, '&apos;');\n    };\n    /**\n     * Encodes a Unicode string to Base64.\n     * Borrowed from MDN: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n     * @param {String} str\n     * @returns {String}\n     */\n\n\n    function encodeBase64(str) {\n      // first we use encodeURIComponent to get percent-encoded UTF-8,\n      // then we convert the percent encodings into raw bytes which\n      // can be fed into btoa.\n      return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\n        return String.fromCharCode('0x' + p1);\n      }));\n    }\n    /**\n     * Decodes a Base64 string to Unicode string.\n     * Borrowed from MDN: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n     * @param {String} str\n     * @returns {String}\n     */\n\n\n    function decodeBase64(str) {\n      // Going backwards: from bytestream, to percent-encoding, to original string.\n      return decodeURIComponent(Array.prototype.map.call(atob(str), function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n    }\n\n    var encode = {\n      html: encodeHTML,\n      attribute: encodeAttribute,\n      encodeBase64: encodeBase64,\n      decodeBase64: decodeBase64\n    };\n\n    return encode;\n\n});\n\n","define('ui/feedback',['jquery', 'lodash', 'core/format', 'ui/component', 'util/wrapLongWords', 'util/encode', 'handlebars', 'i18n', 'lib/dompurify/purify'], function ($$1, _, format, component, wrapLongWords, encode, Handlebars, __, DOMPurify) { 'use strict';\n\n  $$1 = $$1 && $$1.hasOwnProperty('default') ? $$1['default'] : $$1;\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  format = format && format.hasOwnProperty('default') ? format['default'] : format;\n  component = component && component.hasOwnProperty('default') ? component['default'] : component;\n  wrapLongWords = wrapLongWords && wrapLongWords.hasOwnProperty('default') ? wrapLongWords['default'] : wrapLongWords;\n  encode = encode && encode.hasOwnProperty('default') ? encode['default'] : encode;\n  Handlebars = Handlebars && Handlebars.hasOwnProperty('default') ? Handlebars['default'] : Handlebars;\n  __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n  DOMPurify = DOMPurify && DOMPurify.hasOwnProperty('default') ? DOMPurify['default'] : DOMPurify;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function Helpers0 (hb) {\n    //register a i18n helper\n    hb.registerHelper('__', function (key) {\n      return __(key);\n    });\n    /**\n     * Register dompurify helper\n     *\n     * https://github.com/cure53/DOMPurify\n     * with config SAFE_FOR_TEMPLATES: true\n     * to make output safe for template systems\n     */\n\n    hb.registerHelper('dompurify', function (context) {\n      return DOMPurify.sanitize(context);\n    });\n    /**\n     * Register join helper\n     *\n     * Example :\n     * var values = {a:v1, b:v2, c:v3};\n     * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n     * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n     */\n\n    hb.registerHelper('join', function (arr, keyValueGlue, fragmentGlue, wrapper) {\n      var fragments = [];\n      keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n      fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n      wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n      _.forIn(arr, function (value, key) {\n        var fragment = '';\n\n        if (value !== null || value !== undefined) {\n          if (typeof value === 'boolean') {\n            value = value ? 'true' : 'false';\n          } else if (_typeof(value) === 'object') {\n            value = _.values(value).join(' ');\n          }\n        } else {\n          value = '';\n        }\n\n        if (keyValueGlue !== undefined) {\n          fragment += key + keyValueGlue;\n        }\n\n        fragment += wrapper + value + wrapper;\n        fragments.push(fragment);\n      });\n\n      return fragments.join(fragmentGlue);\n    }); //register a classic \"for loop\" helper\n    //it also adds a local variable \"i\" as the index in each iteration loop\n\n    hb.registerHelper('for', function (startIndex, stopIndex, increment, options) {\n      var ret = '';\n      startIndex = parseInt(startIndex);\n      stopIndex = parseInt(stopIndex);\n      increment = parseInt(increment);\n\n      for (var i = startIndex; i < stopIndex; i += increment) {\n        ret += options.fn(_.extend({}, this, {\n          i: i\n        }));\n      }\n\n      return ret;\n    });\n    hb.registerHelper('equal', function (var1, var2, options) {\n      if (var1 == var2) {\n        return options.fn(this);\n      } else {\n        return options.inverse(this);\n      }\n    }); // register a \"get property\" helper\n    // it gets the named property from the provided context\n\n    hb.registerHelper('property', function (name, context) {\n      return context[name] || '';\n    }); // register an 'includes' helper\n    // it checks if value is in array\n\n    hb.registerHelper('includes', function (haystack, needle, options) {\n      if (_.contains(haystack, needle)) {\n        return options.fn(this);\n      }\n    });\n  }\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    \n    return \"popup\";\n    }\n\n    buffer += \"<div id=\\\"\";\n    if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" class=\\\"feedback feedback-\";\n    if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \" \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.popup), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\">\\n    <span class=\\\"icon-\";\n    if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"></span>\\n    <div>\\n        \";\n    stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.msg), options) : helperMissing.call(depth0, \"dompurify\", (depth0 && depth0.msg), options));\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n    </div>\\n    <span title=\\\"\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close message\", options) : helperMissing.call(depth0, \"__\", \"Close message\", options)))\n      + \"\\\" class=\\\"icon-close\\\" data-close=\\\":parent .feedback\\\"></span>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n   *\n   */\n\n  var defaultContainerSelector = '#feedback-box'; //keep a reference to ALL alive feedback\n\n  var currents = []; //available levels\n\n  var levels = ['info', 'success', 'warning', 'danger', 'error'];\n  var defaultOptions = {\n    timeout: {\n      info: 2000,\n      success: 2000,\n      warning: 4000,\n      danger: 4000,\n      error: 8000\n    },\n    // Note: value depends on font, font-weight and such.\n    // 40 is pretty good in the current setup but will\n    // never be exact with a non-proportional font.\n    wrapLongWordsAfter: 40,\n    //by default HTML content is encoded\n    encodeHtml: true,\n    //change the display (absolute or in the flow)\n    popup: true\n  };\n  /**\n   * Creates a feedback object.\n   *\n   * @exports ui/feedback\n   * @param {jQUeryElement} [$container] - only to specify another container\n   * @param {Object} [config] - change the config\n   * @param {Object|Number} [config.timeout] - either one for every level or per level timeout in ms\n   * @param {Number} [config.wrapLongWordsAfter] - add a space in the middle of very long word to enable wrap lines\n   * @param {Boolean} [config.encodeHtml] - weither the message is html encoded\n   * @param {Boolean} [config.popup] - displays the message as a popup or in the flow\n   * @returns {feedback} the feedback object\n   * @throws {TypeError} without a container\n   */\n\n  var feedbackFactory = function feedbackFactory($container, config) {\n    var feedback;\n\n    if (!$container || !$container.length) {\n      $container = $$1(defaultContainerSelector);\n    }\n\n    if (!$container.length) {\n      throw new TypeError('The feedback needs to belong to an existing container');\n    }\n    /**\n     * @typedef {Object} feedback - the feedback component\n     */\n\n\n    feedback = component({\n      /**\n       * Creates a message, not displayed.\n       * @param {String} [level = 'info'] - the message level\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      message: function message(level, msg, params, options) {\n        var displayedMessage = msg;\n\n        if (!level || !_.contains(levels, level)) {\n          level = 'info';\n        } //parameterized messages\n\n\n        if (_.isPlainObject(params)) {\n          options = params;\n          params = [];\n        }\n\n        this.config = _.defaults(options || {}, this.config);\n        this.config.level = level; // encode plain text string to html\n\n        if (this.config.encodeHtml) {\n          displayedMessage = encode.html(displayedMessage);\n        } // wrap long words\n\n\n        if (this.config.wrapLongWordsAfter) {\n          displayedMessage = wrapLongWords(displayedMessage, this.config.wrapLongWordsAfter);\n        } //apply strf like format parameters\n\n\n        if (_.isArray(params) && params.length) {\n          displayedMessage = format.apply(format, [displayedMessage].concat(params));\n        }\n\n        this.config.msg = displayedMessage;\n        return this;\n      },\n\n      /**\n       * Opens an info message\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      info: function info(msg, params, options) {\n        return this.message('info', msg, params, options).open();\n      },\n\n      /**\n       * Opens an success message\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      success: function success(msg, params, options) {\n        return this.message('success', msg, params, options).open();\n      },\n\n      /**\n       * Opens an warning message\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      warning: function warning(msg, params, options) {\n        return this.message('warning', msg, params, options).open();\n      },\n\n      /**\n       * Opens an danger message\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      danger: function danger(msg, params, options) {\n        return this.message('danger', msg, params, options).open();\n      },\n\n      /**\n       * Opens an error message\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      error: function error(msg, params, options) {\n        return this.message('error', msg, params, options).open();\n      },\n\n      /**\n       * Opens the message (and close previous one)\n       * ! Method kept for backward compat with previous version !\n       * @returns {feedback} chains\n       */\n      open: function open() {\n        //close others\n        _(currents).reject(this).invoke('close'); //and display\n\n\n        return this.display();\n      },\n\n      /**\n       * Closes the message\n       * ! Method kept for backward compat with previous version !\n       * @returns {feedback} chains\n       */\n      close: function close() {\n        if (this.is('rendered')) {\n          this.destroy();\n        }\n      },\n\n      /**\n       * Displays the message (does the render)\n       * ! Method kept for backward compat with previous version !\n       * @returns {feedback} chains\n       */\n      display: function display() {\n        if (this.is('rendered')) {\n          this.show();\n        } else {\n          this.render($container);\n        }\n\n        return this;\n      }\n    }, defaultOptions);\n    return feedback.setTemplate(tpl).on('init', function () {\n      this.config.id = 'feedback-' + (currents.length + 1);\n      currents.push(this); //for backward compat\n\n      $container.trigger('create.feedback');\n    }).on('render', function () {\n      var self = this;\n      var $component = this.getElement();\n      var $closer = $$1('.icon-close', $component);\n      var timeout = _.isPlainObject(this.config.timeout) ? this.config.timeout[this.config.level] : this.config.timeout;\n      $closer.off('click').on('click', function (e) {\n        e.preventDefault();\n        self.destroy();\n      });\n\n      if (_.isNumber(timeout) && timeout > 0) {\n        _.delay(function () {\n          self.close();\n        }, timeout);\n      } //for backward compat\n\n\n      $container.trigger('display.feedback');\n    }).on('destroy', function () {\n      //for backward compat\n      $container.trigger('close.feedback');\n\n      _.remove(currents, this);\n    }).init(config);\n  };\n\n  return feedbackFactory;\n\n});\n\n","define('ui/taskQueue/taskQueueModel',['jquery', 'lodash', 'core/eventifier', 'core/polling', 'core/dataProvider/request', 'ui/feedback', 'jquery.fileDownload'], function ($, _, eventifier, polling, request, feedback, jquery_fileDownload) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n    polling = polling && polling.hasOwnProperty('default') ? polling['default'] : polling;\n    request = request && request.hasOwnProperty('default') ? request['default'] : request;\n    feedback = feedback && feedback.hasOwnProperty('default') ? feedback['default'] : feedback;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n     */\n    var _defaults = {\n      url: {\n        get: '',\n        archive: '',\n        all: '',\n        download: ''\n      },\n      pollSingleIntervals: [{\n        iteration: 4,\n        interval: 1000\n      }],\n      pollAllIntervals: [{\n        iteration: 10,\n        interval: 5000\n      }, {\n        iteration: 0,\n        interval: 10000 //infinite\n\n      }]\n    };\n    /**\n     * Check if two tasks have equivalent task status\n     * @param {Object} task1 - a task object to be compared\n     * @param {Object} task2 - another task object to be compared\n     * @returns {Boolean}\n     */\n\n    function hasSameState(task1, task2) {\n      if (task1.status === task2.status) {\n        return true;\n      } else if (task1.status === 'created' || task1.status === 'in_progress') {\n        return task2.status === 'created' || task2.status === 'in_progress';\n      }\n\n      return false;\n    }\n    /**\n     * Create a task queue model to communicates with the server REST API\n     *\n     * @param {Object} config\n     * @param {Object} config.url - the list of server endpoints\n     * @param {String} config.url.get - the url to get the status log for a single task\n     * @param {String} config.url.archive - the url to archive a task\n     * @param {String} config.url.all - the url to get the status for all tasks for the current user\n     * @param {String} config.url.download - the url to download a file created by the task\n     * @param {Array} config.pollSingleIntervals - the array of poll intervals that will be used to regulate the polling speed for a simple task\n     *         e.g. {iteration: 4, interval:1000} means that it will poll up to four times every 1000ms.\n     * @param {Array} config.pollAllIntervals - the array of poll intervals that will be used to regulate the main polling speed.\n     *         e.g. {iteration: 10, interval:1000} means that it will poll up to 10 times every 5000ms.\n     *         e.g. {iteration: 0, interval:10000} means that it will poll up to 10000ms indefinitely\n     *\n     * @return {taskQueueModel}\n     */\n\n\n    function taskQueueModel(config) {\n      var model;\n      /**\n       * cached array of task data\n       * @type {Object}\n       */\n\n      var _cache;\n      /**\n       * store instance of single polling\n       * @type {Object}\n       */\n\n\n      var singlePollings = {};\n\n      var getPollSingleIntervals = function getPollSingleIntervals() {\n        if (config.pollSingleIntervals && _.isArray(config.pollSingleIntervals)) {\n          return _.cloneDeep(config.pollSingleIntervals);\n        }\n      };\n\n      var getPollAllIntervals = function getPollAllIntervals() {\n        if (config.pollAllIntervals && _.isArray(config.pollAllIntervals)) {\n          return _.cloneDeep(config.pollAllIntervals);\n        }\n      };\n\n      config = _.defaults(config || {}, _defaults);\n      /**\n       * @typedef taskQueueModel - central model to query the backend's REST API for task queue\n       */\n\n      model = eventifier({\n        /**\n         * Modify the task queue REST API endpoints\n         * @param urls - the new endpoints\n         * @returns {taskQueueModel}\n         */\n        setEndpoints: function setEndpoints(urls) {\n          _.assign(config.url, urls || {});\n\n          return this;\n        },\n\n        /**\n         * Get the status of a task identified by its unique task id\n         *\n         * @param {String} taskId - unique task identifier\n         * @returns {Promise}\n         */\n        get: function get(taskId) {\n          var status;\n\n          if (!config.url || !config.url.get) {\n            throw new TypeError('config.url.get is not configured while get() is being called');\n          }\n\n          status = request(config.url.get, {\n            taskId: taskId\n          }, 'GET', {}, true).then(function (taskData) {\n            //check taskData\n            if (taskData && taskData.status) {\n              if (_cache) {\n                //detect change\n                if (!_cache[taskData.id]) {\n                  model.trigger('singletaskadded', taskData);\n                } else if (!hasSameState(_cache[taskData.id], taskData)) {\n                  //check if the status has changed\n                  model.trigger('singletaskstatuschange', taskData);\n                }\n              } else {\n                _cache = {};\n              }\n\n              _cache[taskData.id] = taskData;\n              return taskData;\n            }\n\n            return Promise.reject(new Error('failed to get task data'));\n          });\n          status.catch(function (err) {\n            model.trigger('error', err);\n          });\n          return status;\n        },\n\n        /**\n         * Get the task data, but try the cache first!\n         * @returns {Promise}\n         */\n        getCached: function getCached(taskId) {\n          if (_cache && _cache[taskId]) {\n            return Promise.resolve(_cache[taskId]);\n          }\n\n          return this.get(taskId);\n        },\n\n        /**\n         * Get the status of all task identified by their unique task id\n         *\n         * @returns {Promise} - resolved when the server response has been received\n         */\n        getAll: function getAll() {\n          var status;\n\n          if (!config.url || !config.url.all) {\n            throw new TypeError('config.url.all is not configured while getAll() is being called');\n          }\n\n          status = request(config.url.all, {\n            limit: 100\n          }, 'GET', {}, true).then(function (taskData) {\n            var newCache = {}; //check taskData\n\n            if (taskData) {\n              if (_cache) {\n                //detect change\n                _.forEach(taskData, function (task) {\n                  var id = task.id;\n\n                  if (!_cache[id]) {\n                    model.trigger('multitaskadded', task);\n                  } else if (!hasSameState(_cache[id], task)) {\n                    //check if the status has changed\n                    model.trigger('multitaskstatuschange', task);\n                  }\n\n                  newCache[id] = task;\n                });\n\n                _.forEach(_.difference(_.keys(_cache), _.keys(newCache)), function (id) {\n                  model.trigger('taskremoved', _cache[id]);\n                });\n              } else {\n                _.forEach(taskData, function (task) {\n                  newCache[task.id] = task;\n                });\n              } //update local cache\n\n\n              _cache = newCache;\n              return taskData;\n            }\n\n            return Promise.reject(new Error('failed to get all task data'));\n          });\n          status.catch(function (err) {\n            model.trigger('error', err);\n          });\n          return status;\n        },\n\n        /**\n         * Remove a task identified by its unique task id\n         *\n         * @param {String} taskId - the task id\n         * @returns {Promise} - resolved when achive action done\n         */\n        archive: function archive(taskId) {\n          var status;\n\n          if (!config.url || !config.url.archive) {\n            throw new TypeError('config.url.archive is not configured while archive() is being called');\n          }\n\n          status = request(config.url.archive, {\n            taskId: taskId\n          }, 'GET', {}, true);\n          status.catch(function (res) {\n            model.trigger('error', res);\n          });\n          return status;\n        },\n\n        /**\n         * Poll status for all tasks\n         * @param {Boolean} [immediate] - tells if the polling should immediately start (otherwise, will wait until the next iteration)\n         * @returns {taskQueueModel}\n         */\n        pollAll: function pollAll(immediate) {\n          var self = this;\n          var loop = 0;\n          var pollingIntervals = getPollAllIntervals();\n          /**\n           * gradually increase the polling interval to ease server load\n           * @private\n           * @param {Object} pollingInstance - a poll object\n           */\n\n          var _updateInterval = function _updateInterval(pollingInstance) {\n            var pollingInterval;\n\n            if (loop) {\n              loop--;\n            } else {\n              pollingInterval = pollingIntervals.shift();\n\n              if (pollingInterval && typeof pollingInterval.iteration !== 'undefined' && pollingInterval.interval) {\n                loop = pollingInterval.iteration;\n                pollingInstance.setInterval(pollingInterval.interval);\n              }\n            }\n          };\n\n          if (!config.url || !config.url.all) {\n            throw new TypeError('config.url.all is not configured while pollAll() is being called');\n          }\n\n          if (!this.globalPolling) {\n            //no global polling yet, create one\n            this.globalPolling = polling({\n              action: function action() {\n                // get into asynchronous mode\n                var done = this.async();\n                var statusArr;\n                model.getAll().then(function (taskDataArray) {\n                  model.trigger('pollAll', taskDataArray); //smart polling: stop polling when there is no task in progress\n\n                  statusArr = _.map(taskDataArray, 'status');\n\n                  if (statusArr.indexOf('in_progress') === -1 && statusArr.indexOf('created') === -1) {\n                    return done.reject();\n                  }\n\n                  _updateInterval(self.globalPolling);\n\n                  done.resolve();\n                }).catch(function () {\n                  done.reject();\n                });\n              }\n            });\n\n            _updateInterval(this.globalPolling);\n\n            this.globalPolling.start();\n            this.trigger('pollAllStart');\n          } else {\n            this.globalPolling.start();\n            this.trigger('pollAllStart');\n          }\n\n          if (immediate) {\n            //if it is request to immediate start polling, start it now\n            this.globalPolling.next();\n          }\n\n          return model;\n        },\n\n        /**\n         * Stop the main polling action\n         * @returns {taskQueueModel}\n         */\n        pollAllStop: function pollAllStop() {\n          if (this.globalPolling) {\n            this.globalPolling.stop();\n            this.trigger('pollAllStop');\n          }\n\n          return this;\n        },\n\n        /**\n         * Start a single fast polling for a single task id\n         * @param {String} taskId - the task id\n         * @returns {Promise} resolved when the single polling action finishes\n         */\n        pollSingle: function pollSingle(taskId) {\n          var self = this;\n          var loop = 0;\n          var pollingIntervals = getPollSingleIntervals();\n          /**\n           * gradually increase the polling interval to ease server load\n           * @private\n           * @param {Object} pollingInstance - a poll object\n           */\n\n          var _updateInterval = function _updateInterval(pollingInstance) {\n            var pollingInterval;\n\n            if (loop) {\n              loop--;\n              return true; //continue polling\n            } else {\n              pollingInterval = pollingIntervals.shift();\n\n              if (pollingInterval && pollingInterval.iteration && pollingInterval.interval) {\n                loop = pollingInterval.iteration;\n                pollingInstance.setInterval(pollingInterval.interval);\n                return true; //continue polling\n              } else {\n                //stop polling\n                return false;\n              }\n            }\n          };\n\n          if (!config.url || !config.url.get) {\n            throw new TypeError('config.url.get is not configured while pollSingle() is being called');\n          }\n\n          if (singlePollings[taskId]) {\n            singlePollings[taskId].stop();\n          }\n\n          return new Promise(function (resolve) {\n            var poll = polling({\n              action: function action() {\n                // get into asynchronous mode\n                var done = this.async();\n                self.get(taskId).then(function (taskData) {\n                  if (taskData.status === 'completed' || taskData.status === 'failed') {\n                    //the status status could be either \"completed\" or \"failed\"\n                    poll.stop();\n                    self.trigger('pollSingleFinished', taskId, taskData);\n                    resolve({\n                      finished: true,\n                      task: taskData\n                    });\n                  } else if (!_updateInterval(poll)) {\n                    //if we have reached the end of the total polling config\n                    self.trigger('pollSingleFinished', taskId, taskData);\n                    resolve({\n                      finished: false,\n                      task: taskData\n                    });\n                  } else {\n                    self.trigger('pollSingle', taskId, taskData);\n                    done.resolve(); //go to next poll iteration\n                  }\n                }).catch(function () {\n                  done.reject();\n                });\n              }\n            });\n\n            _updateInterval(poll);\n\n            singlePollings[taskId] = poll.start();\n            self.trigger('pollSingleStart', taskId);\n          });\n        },\n\n        /**\n         * Interrupt a single polling action\n         * @param {String} taskId - the task id\n         * @returns {model}\n         */\n        pollSingleStop: function pollSingleStop(taskId) {\n          if (singlePollings && singlePollings[taskId]) {\n            singlePollings[taskId].stop();\n            this.trigger('pollSingleStop', taskId);\n          }\n\n          return this;\n        },\n\n        /**\n         * Call a task creation url\n         * @param {String} url - the server side task queue creation service\n         * @param {Object} [data] - request data\n         * @returns {promise} - resolved when task creation response is sent back by the server\n         */\n        create: function create(url, data) {\n          var taskCreate,\n              self = this;\n          taskCreate = request(url, data, 'POST', {}, true).then(function (creationResult) {\n            //poll short result:\n            if (creationResult && creationResult.task && creationResult.task.id) {\n              self.trigger('created', creationResult);\n              return self.pollSingle(creationResult.task.id).then(function (result) {\n                if (creationResult.extra) {\n                  result.extra = creationResult.extra;\n                }\n\n                if (result.finished) {\n                  //send to queue\n                  self.trigger('fastFinished', result);\n                } else {\n                  //send to queue\n                  self.trigger('enqueued', result);\n                }\n\n                return result;\n              });\n            }\n\n            return Promise.reject(new Error('failed to get task data'));\n          });\n          taskCreate.catch(function (err) {\n            model.trigger('error', err);\n          });\n          return taskCreate;\n        },\n\n        /**\n         * Call the task result file download endpoint\n         * @param {String} taskId - the task id\n         * @returns {promise} - resolved when the download popup is shown\n         */\n        download: function download(taskId) {\n          if (!config.url || !config.url.download) {\n            throw new TypeError('config.url.download is not configured while download() is being called');\n          }\n\n          return new Promise(function (resolve, reject) {\n            $.fileDownload(config.url.download, {\n              httpMethod: 'POST',\n              data: {\n                taskId: taskId\n              },\n              successCallback: function successCallback(result) {\n                resolve(result);\n              },\n              failCallback: function failCallback(err) {\n                reject(err);\n              }\n            });\n          });\n        },\n\n        /**\n         * Call the task result redirection endpoint\n         * @param {String} taskId - the task id\n         * @returns {Promise}\n         */\n        redirect: function redirect(taskId) {\n          return this.getCached(taskId).then(function (taskData) {\n            var redirectUrl = (taskData || {}).redirectUrl;\n\n            if (!redirectUrl) {\n              throw new TypeError('config.redirectUrl is not configured while redirect() is being called');\n            }\n\n            if (redirectUrl.indexOf('http') !== 0) {\n              throw new TypeError('redirectUrl does not look like a proper url: ' + redirectUrl);\n            }\n\n            return request(taskData.redirectUrl);\n          }).then(function (response) {\n            if (!_.isEmpty(response)) {\n              window.location.href = response;\n            }\n          }).catch(function (err) {\n            //202 -> resource deleted, handle it has a user error\n            if (err && err.code === 202 && err.response && err.response.errorMessage) {\n              feedback().error(err.response.errorMessage);\n            }\n\n            throw err;\n          });\n        }\n      });\n      return model;\n    }\n\n    return taskQueueModel;\n\n});\n\n","define('ui/taskQueue/taskQueue',['util/url', 'ui/taskQueue/taskQueueModel'], function (urlHelper, taskQueueModelFactory) { 'use strict';\n\n    urlHelper = urlHelper && urlHelper.hasOwnProperty('default') ? urlHelper['default'] : urlHelper;\n    taskQueueModelFactory = taskQueueModelFactory && taskQueueModelFactory.hasOwnProperty('default') ? taskQueueModelFactory['default'] : taskQueueModelFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Returns the singleton task queue preconfigured with the tao task queue REST API.\n     */\n\n    var taskQueue = taskQueueModelFactory({\n      url: {\n        get: urlHelper.route('get', 'TaskQueueWebApi', 'tao'),\n        archive: urlHelper.route('archive', 'TaskQueueWebApi', 'tao'),\n        all: urlHelper.route('getAll', 'TaskQueueWebApi', 'tao'),\n        download: urlHelper.route('download', 'TaskQueueWebApi', 'tao')\n      },\n      pollSingleIntervals: [{\n        iteration: 3,\n        interval: 1000\n      }],\n      pollAllIntervals: [{\n        iteration: 1,\n        interval: 8000\n      }, {\n        iteration: 0,\n        interval: 5000\n      }]\n    });\n\n    return taskQueue;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Sam <sam@taotesting.com>\n */\ndefine('taoTaskQueue/controller/main',[\n    'jquery',\n    'taoTaskQueue/component/manager/manager',\n    'ui/taskQueue/taskQueue'\n],\nfunction ($, taskQueueManagerFactory, taskQueue) {\n    'use strict';\n\n    /**\n     * This controller initialize all the task queue component globally for tao backoffice use\n     * @exports taoTaskQueue/controller/main\n     */\n    return {\n        start() {\n\n            const taskManager = taskQueueManagerFactory({\n                replace: true\n            })\n            .on('remove', taskId => taskQueue.archive(taskId) )\n            .on('report', taskId => {\n                //show report in popup\n                taskQueue.get(taskId).then( task => taskManager.showDetail(task) );\n            })\n            .on('download', taskId => taskQueue.download(taskId) )\n            .on('redirect', taskId => taskQueue.redirect(taskId) )\n            .on('listclearfinished', () => {\n                taskQueue\n                    .pollAllStop()\n                    .archive('all')\n                    .then( () => taskQueue.pollAll() );\n            })\n            .render($('#taskqueue').parent())\n            .hide();//start hidden to prevent blinking effect\n\n            //listen to events started by the task queue model\n            taskQueue\n                .on('taskcreated', data => {\n                    if (taskManager.list.is('hidden')) {\n                        taskManager.absorbBurst(data.sourceDom, [0, 300, 600]).then( () => {\n                            taskManager.addNewTask(data.task);\n                            taskQueue.pollAll();\n                        });\n                    } else {\n                        taskManager.addNewTask(data.task, true);\n                        taskQueue.pollAll();\n                    }\n                })\n                .on('multitaskstatuschange', () =>  taskManager.pulse() )\n                .on('pollAll', tasks => {\n                    if (taskManager.is('hidden')) {\n                        taskManager.show();\n                    }\n                    taskManager.loadData(tasks);\n                })\n                .pollAll(true);//start polling immediately on load\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoTaskQueue/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'taoTaskQueue/controller/main'\n            }\n        }\n    };\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('/*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* Do not edit */\\n/* Style of advanced components */\\n/* toggler */\\n.toggler:after {\\n    margin-left: 3px;\\n    position: relative;\\n    top: 2px;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e611\\\";\\n}\\n\\n.toggler.opened:after {\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e610\\\";\\n}\\n\\n.toggled {\\n    display: none;\\n}\\n\\n/* Adder */\\n.adder:before {\\n    margin-right: 5px;\\n    font-size: 10.5px;\\n    font-size: 1.05rem;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e636\\\";\\n}\\n\\n/* Closer / Deleter */\\n.closer:before, .deleter:before {\\n    margin-right: 5px;\\n    font-size: 10.5px;\\n    font-size: 1.05rem;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e637\\\";\\n}\\n\\n.undobox {\\n    display: block;\\n    position: fixed;\\n    top: 50px;\\n    left: 50%;\\n    margin-left: -200px;\\n    width: 400px;\\n    z-index: 100005;\\n}\\n\\n/* Incrementer and duration */\\ninput[data-increment], input.duration-ctrl {\\n    width: 40px !important;\\n    min-width: 40px !important;\\n    text-align: right;\\n}\\n\\n.duration-ctrl-wrapper, .incrementer-ctrl-wrapper {\\n    position: relative;\\n    display: inline-block;\\n    border: 1px solid #ddd;\\n    border-radius: 2px;\\n    border-radius: 2px;\\n}\\n\\n.duration-ctrl-wrapper .incrementer, .incrementer-ctrl-wrapper .incrementer {\\n    text-align: right;\\n    border: none;\\n    padding-right: 18px;\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl {\\n    border-left: 1px #ddd solid;\\n    display: inline-block;\\n    height: 100%;\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a {\\n    outline: 0 !important;\\n    cursor: pointer;\\n    display: inline-block;\\n    line-height: 13px;\\n    color: #222;\\n    background: #f3f1ef;\\n    padding: 0 4px 0 4px;\\n    font-size: 10.5px;\\n    font-size: 1.05rem;\\n    position: absolute;\\n    right: 0;\\n    height: 50%;\\n    text-align: center;\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.inc, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.inc {\\n    top: 0;\\n    border-top-right-radius: 2px;\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.dec, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.dec {\\n    top: 50%;\\n    border-bottom-right-radius: 2px;\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.inc:before, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.inc:before {\\n    position: relative;\\n    bottom: 0px;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e610\\\";\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.dec:before, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.dec:before {\\n    position: relative;\\n    top: 0px;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e611\\\";\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a:hover, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a:hover {\\n    background-color: #3e7da7;\\n    color: white;\\n}\\n\\n.duration-ctrl-wrapper ~ .separator {\\n    padding: 0 3px;\\n    text-align: center;\\n    opacity: .7;\\n}\\n\\n/* InPlacer */\\n[data-in-place], .inplace {\\n    cursor: pointer;\\n    min-height: 1em;\\n}\\n\\n[data-in-place] input, .inplace input {\\n    cursor: auto;\\n}\\n\\n[data-in-place]:hover, .inplace:hover {\\n    border: dotted 1px #3e7da7;\\n}\\n\\n/* ListBox  */\\nul.listbox {\\n    margin: .1em 0;\\n    padding: 0;\\n    list-style-type: none;\\n    display: block;\\n}\\n\\nul.listbox > li {\\n    white-space: no-wrap;\\n    position: relative;\\n    min-width: 75%;\\n    border: solid 1px #ddd;\\n    border-bottom-width: 0;\\n    vertical-align: top;\\n    margin: 0;\\n    padding: .3em 2em .3em .2em;\\n    background-color: #f3f1ef;\\n    min-height: 1.5em;\\n}\\n\\nul.listbox > li > .closer, ul.listbox > li > .deleter {\\n    position: absolute;\\n    right: 5px;\\n    top: 0;\\n}\\n\\nul.listbox > li:first-child {\\n    border-radius: 2px 2px 0 0;\\n}\\n\\nul.listbox > li:last-child {\\n    border-radius: 0 0 2px 2px;\\n    border-bottom-width: 1px;\\n}\\n\\nul.listbox > li.placeholder {\\n    background: none;\\n    margin: .5em;\\n    opacity: 0.6;\\n}\\n\\n/* Modal styles */\\n.modal {\\n    background-color: white;\\n    border: 1px solid #ddd;\\n    box-shadow: 3px 3px 5px #666666;\\n    height: auto;\\n    opacity: 0;\\n    top: -1000px;\\n    padding: 40px;\\n    position: fixed;\\n    z-index: 105002;\\n    margin: auto;\\n    left: 0;\\n    right: 0;\\n    overflow: hidden;\\n}\\n\\n.modal .modal-close {\\n    position: absolute;\\n    right: 12px;\\n    top: 10px;\\n    cursor: pointer;\\n    font-weight: bold;\\n    color: #222;\\n}\\n\\n.modal .modal-close:hover {\\n    opacity: 0.6;\\n}\\n\\n.modal .modal-close .icon-close {\\n    font-size: 20px;\\n    font-size: 2rem;\\n}\\n\\n.modal button.modal-close {\\n    color: #222 !important;\\n    background-color: transparent;\\n    padding: 0;\\n    height: 20px;\\n}\\n\\n.modal button.modal-close .icon-close {\\n    padding: 0;\\n}\\n\\n.modal .modal-body h4 {\\n    font-size: 16px;\\n    font-size: 1.6rem;\\n    margin-top: 0;\\n    margin-bottom: 8px;\\n}\\n\\n.modal .modal-body .content, .modal .modal-body .message {\\n    margin-bottom: 8px;\\n}\\n\\n.modal .modal-body .buttons {\\n    top: 16px;\\n    position: relative;\\n}\\n\\n.modal .modal-body .buttons button {\\n    border-radius: 2px;\\n    margin-left: 8px;\\n    height: 36px;\\n    text-shadow: none;\\n    text-transform: uppercase;\\n    color: #0e5d91 !important;\\n    background: none;\\n}\\n\\n.modal .modal-body .buttons button:focus, .modal .modal-body .buttons button:hover {\\n    background: #dbe7ef;\\n}\\n\\n.modal[class^=\\\"icon-\\\"]:before, .modal[class*=\\\" icon-\\\"]:before {\\n    font-size: 44px;\\n    font-size: 4.4rem;\\n    color: #0e5d91;\\n    position: absolute;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].icon-result-nok:before, .modal[class*=\\\" icon-\\\"].icon-result-nok:before {\\n    color: #ba122b;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].icon-warning:before, .modal[class*=\\\" icon-\\\"].icon-warning:before {\\n    color: #c96043;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].icon-result-ok:before, .modal[class*=\\\" icon-\\\"].icon-result-ok:before {\\n    color: #0e914b;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].error:before, .modal[class*=\\\" icon-\\\"].error:before {\\n    color: #ba122b;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].danger:before, .modal[class*=\\\" icon-\\\"].danger:before {\\n    color: #c96043;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].warning:before, .modal[class*=\\\" icon-\\\"].warning:before {\\n    color: #d8ae5b;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].info:before, .modal[class*=\\\" icon-\\\"].info:before {\\n    color: #0e5d91;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].success:before, .modal[class*=\\\" icon-\\\"].success:before {\\n    color: #0e914b;\\n}\\n\\n.modal[class^=\\\"icon-\\\"] .modal-body, .modal[class*=\\\" icon-\\\"] .modal-body {\\n    font-family: \\\"Source Sans Pro\\\", sans-serif !important;\\n    line-height: 1.4;\\n    margin-left: 8.5rem;\\n}\\n\\n.modal-bg {\\n    background: none repeat scroll 0 0 black;\\n    opacity: 0.45;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=45)\\\";\\n    filter: alpha(opacity=45);\\n    display: none;\\n    position: fixed;\\n    height: 100%;\\n    width: 100%;\\n    left: 0;\\n    top: 0;\\n    z-index: 100001;\\n    overflow: hidden;\\n}\\n\\n/* Button groups */\\nul[data-button-group], ul.button-group {\\n    list-style-type: none;\\n    padding: 0;\\n    background-color: white;\\n    border: 1px solid #ddd;\\n    border-radius: 1px;\\n    margin: 0 2px 2px 0;\\n    display: inline-block;\\n    border-radius: 2px;\\n    font-size: 12px;\\n    font-size: 1.2rem;\\n}\\n\\nul[data-button-group] > li, ul.button-group > li {\\n    border: 0 none;\\n    color: #222;\\n    cursor: pointer;\\n    display: inline-block;\\n    float: left;\\n    min-width: 26px;\\n    padding: 4px 6px;\\n    text-align: center;\\n    text-decoration: none !important;\\n}\\n\\nul[data-button-group] > li.active, ul.button-group > li.active {\\n    color: white;\\n    background-color: #0e5d91;\\n    transition: all 0.4s ease;\\n}\\n\\nul[data-button-group] > li:hover, ul.button-group > li:hover {\\n    color: white;\\n    background-color: #3e7da7;\\n    transition: all 0.4s ease;\\n}\\n\\nul[data-button-group] > li.separator, ul.button-group > li.separator {\\n    background-color: #ddd;\\n    float: left;\\n    height: 18px;\\n    margin: 5px 2px 0 2px;\\n    width: 1px;\\n    min-width: 1px;\\n    padding: 0;\\n}\\n\\nul[data-button-group] > li[class^=\\\"icon-\\\"], ul[data-button-group] > li[class*=\\\" icon-\\\"], ul.button-group > li[class^=\\\"icon-\\\"], ul.button-group > li[class*=\\\" icon-\\\"] {\\n    height: 16px;\\n    margin-top: 1px;\\n    width: 16px;\\n    padding-top: 2px;\\n}\\n\\n/* Media Preview */\\n.previewer {\\n    background-color: white;\\n    margin: 5px;\\n    min-width: 280px;\\n    min-height: 200px;\\n    text-align: center;\\n}\\n\\n.previewer .nopreview {\\n    color: #ddd;\\n    text-align: center;\\n    font-size: 20px;\\n    font-size: 2rem;\\n}\\n\\n.previewer .nopreview:before {\\n    font-size: 60px;\\n    font-size: 6rem;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e670\\\";\\n    display: block !important;\\n}\\n\\n/* Progress bar */\\n.progressbar {\\n    height: 2em;\\n    text-align: left;\\n    border: none;\\n    height: 0.8em;\\n    background-color: white;\\n    border: 1px solid #ddd;\\n}\\n\\n.progressbar > span {\\n    height: 100%;\\n    border: none;\\n    background-color: #3e7da7;\\n    display: block;\\n    color: white;\\n    transition: width 0.4s ease 0s;\\n}\\n\\n.progressbar.info > span {\\n    background-color: #0e5d91;\\n}\\n\\n.progressbar.success > span {\\n    background-color: #0e914b;\\n}\\n\\n.progressbar.warning > span {\\n    background-color: #d8ae5b;\\n}\\n\\n.progressbar.error > span {\\n    background-color: #ba122b;\\n}\\n\\n/*# sourceMappingURL=components.css.map *//*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* Do not edit */\\n.badge-component {\\n    position: relative;\\n}\\n\\n.badge-component .loader:not(.hidden) {\\n    position: relative;\\n    top: -1px;\\n    width: 25px;\\n    height: 25px;\\n    border-radius: 50%;\\n    animation: badge-component-rotate 1.4s infinite linear;\\n    background: linear-gradient(left, #e6e6e6 10%, rgba(230, 230, 230, 0) 42%);\\n    transform: translateZ(0);\\n}\\n\\n@keyframes badge-component-rotate {\\n    0% {\\n        transform: rotate(0deg);\\n    }\\n    100% {\\n        transform: rotate(360deg);\\n    }\\n}\\n\\n.badge-component .loader:not(.hidden):before {\\n    width: 50%;\\n    height: 50%;\\n    background: #e6e6e6;\\n    border-radius: 100% 0 0 0;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    content: \\'\\';\\n}\\n\\n.badge-component .loader:not(.hidden):after {\\n    background: #333333;\\n    width: 75%;\\n    height: 75%;\\n    border-radius: 50%;\\n    content: \\'\\';\\n    margin: auto;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    right: 0;\\n}\\n\\n.badge-component .badge {\\n    background: #e6e6e6;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    -o-user-select: none;\\n    user-select: none;\\n    font-size: 12px;\\n    font-size: 1.2rem;\\n    width: 19px;\\n    height: 19px;\\n    border-radius: 50%;\\n    position: absolute;\\n    top: 2px;\\n    left: 3px;\\n    padding-top: 1px;\\n    text-align: center;\\n    display: inline-block;\\n}\\n\\n.badge-component .badge.badge-info {\\n    color: #e7eff4;\\n    background: #3e7da7;\\n}\\n\\n.badge-component .badge.badge-success {\\n    color: #e7f4ed;\\n    background: #3ea76f;\\n}\\n\\n.badge-component .badge.badge-warning {\\n    color: #faf0ee;\\n    background: #d16c55;\\n}\\n\\n.badge-component .badge.badge-error {\\n    color: #f8e7ea;\\n    background: #ba122b;\\n}\\n\\n.badge-component .badge.icon-result-ok::before {\\n    top: 3px;\\n    position: relative;\\n    color: blue;\\n}\\n\\n.badge-component .badge-border {\\n    background: #e6e6e6;\\n    width: 21px;\\n    height: 21px;\\n    border-radius: 50%;\\n    position: absolute;\\n    top: 1px;\\n    left: 2px;\\n}\\n\\n/*# sourceMappingURL=badge.css.map *//*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* Do not edit */\\n.absorbable {\\n    z-index: 1;\\n    border-radius: 0%;\\n    background: #e6e6e6;\\n    opacity: 0;\\n}\\n\\n.absorbable.animate {\\n    transform: translateZ(0);\\n    transition-timing-function: cubic-bezier(0.2, 0.6, 1, 0.4);\\n    animation: absorbable-opacity 2s cubic-bezier(0.2, 0.6, 1, 0.4) 1;\\n}\\n\\n@keyframes absorbable-opacity {\\n    0% {\\n        opacity: 0;\\n    }\\n    20% {\\n        opacity: 0.3;\\n        border-radius: 20%;\\n    }\\n    60% {\\n        opacity: 0.9;\\n    }\\n    100% {\\n        border-radius: 50%;\\n    }\\n}\\n\\n.absorbable .example {\\n    display: grid;\\n    transition: all 0.5s;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    background: linear-gradient(to bottom, white, black);\\n}\\n\\n/*# sourceMappingURL=absorb.css.map *//*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* Do not edit */\\n.pulsable {\\n    z-index: 1;\\n    display: block;\\n    border-radius: 50%;\\n    position: absolute;\\n    background: #e6e6e6;\\n    width: 1px;\\n    height: 1px;\\n    top: 0px;\\n    left: 0px;\\n    box-shadow: 0 0 0 rgba(230, 230, 230, 0.6);\\n}\\n\\n@keyframes pulsable-pulse {\\n    0% {\\n        box-shadow: 0 0 0 0 rgba(230, 230, 230, 0.6);\\n    }\\n    50% {\\n        box-shadow: 0 0 0 200px rgba(230, 230, 230, 0);\\n    }\\n    100% {\\n        box-shadow: 0 0 0 0 rgba(230, 230, 230, 0);\\n    }\\n}\\n\\n.pulsable.animate {\\n    animation: pulsable-pulse 1s ease-out infinite;\\n}\\n\\n/*# sourceMappingURL=pulse.css.map */div.task-element{position:relative;background:#f3f1ef;padding:10px 20px;width:100%;height:70px;-webkit-transition:background, 2s, ease-out, 0s;-moz-transition:background, 2s, ease-out, 0s;-ms-transition:background, 2s, ease-out, 0s;-o-transition:background, 2s, ease-out, 0s;transition:background, 2s, ease-out, 0s}div.task-element.highlight{background:white;-webkit-transition:background, 0s, ease-out, 0s;-moz-transition:background, 0s, ease-out, 0s;-ms-transition:background, 0s, ease-out, 0s;-o-transition:background, 0s, ease-out, 0s;transition:background, 0s, ease-out, 0s}div.task-element .container-icon{position:absolute}div.task-element .container-icon .shape{display:inline-block;border-radius:50%;width:40px;height:40px;top:2px;position:relative}div.task-element .container-icon .shape [class^=\\\"icon-\\\"],div.task-element .container-icon .shape [class*=\\\" icon-\\\"]{font-size:20px;font-size:2rem;position:relative;top:9px;left:12px;text-shadow:none}div.task-element .container-icon .shape .icon-export,div.task-element .container-icon .shape .icon-import,div.task-element .container-icon .shape .icon-connect{left:10px}div.task-element .container-icon .shape .icon-property-advanced,div.task-element .container-icon .shape .icon-result-ok,div.task-element .container-icon .shape .icon-result-nok{top:10px;left:10px}div.task-element.in_progress .container-icon .shape{background:#0e5d91}div.task-element.in_progress .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.in_progress .container-icon .shape [class*=\\\" icon-\\\"]{color:#e7eff4}div.task-element.in_progress .action-group.action-bottom [data-role=\\\"notify\\\"]{display:none}div.task-element.in_progress .action-group.action-top [data-role=\\\"remove\\\"]{display:none}div.task-element.completed .container-icon .shape{background:#0e914b}div.task-element.completed .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.completed .container-icon .shape [class*=\\\" icon-\\\"]{color:#e7f4ed}div.task-element.completed .action-group.action-bottom [data-role=\\\"download\\\"],div.task-element.completed .action-group.action-bottom [data-role=\\\"report\\\"],div.task-element.completed .action-group.action-bottom [data-role=\\\"redirect\\\"]{display:inline-block}div.task-element.failed .container-icon .shape{background:#ba122b}div.task-element.failed .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.failed .container-icon .shape [class*=\\\" icon-\\\"]{color:#f8e7ea}div.task-element.failed .action-group.action-bottom [data-role=\\\"download\\\"],div.task-element.failed .action-group.action-bottom [data-role=\\\"report\\\"],div.task-element.failed .action-group.action-bottom [data-role=\\\"redirect\\\"]{display:inline-block}div.task-element .container-text{padding-top:0px;margin-left:60px;width:240px}div.task-element .container-text .label{min-height:22px;max-height:38px;overflow:hidden;color:#222}div.task-element .container-text .time{color:#92918f;font-size:12px;font-size:1.2rem}div.task-element .action-group{position:absolute}div.task-element .action-group [class^=\\\"icon-\\\"],div.task-element .action-group [class*=\\\" icon-\\\"]{font-size:16px;font-size:1.6rem;background-color:transparent;width:20px;height:20px;display:inline-block;padding-left:4px;margin-left:5px;cursor:pointer}div.task-element .action-group [class^=\\\"icon-\\\"]:hover,div.task-element .action-group [class*=\\\" icon-\\\"]:hover{opacity:0.6}div.task-element .action-group.action-top{top:6px;right:14px}div.task-element .action-group.action-bottom{bottom:6px;right:12px}div.task-element .action-group.action-bottom [class^=\\\"icon-\\\"],div.task-element .action-group.action-bottom [class*=\\\" icon-\\\"]{display:none}\\n\\n/*# sourceMappingURL=element.css.map */div.task-detail-element{position:relative;padding:10px 20px;width:600px;min-height:250px;background:#f3f1ef}div.task-detail-element .detail-description .label{margin-right:4px;color:#222;font-weight:bold}div.task-detail-element .detail-description .time{margin-left:4px;color:#92918f;font-size:12px;font-size:1.2rem}div.task-detail-element .detail-body{max-height:500px;overflow-y:auto;padding:10px 0}div.task-detail-element .action-top{position:absolute;top:9px;right:14px}div.task-detail-element .action-top [class^=\\\"icon-\\\"],div.task-detail-element .action-top [class*=\\\" icon-\\\"]{font-size:16px;font-size:1.6rem;color:#222;background-color:transparent;width:20px;height:20px;display:inline-block;padding-left:4px;margin-left:5px;cursor:pointer}div.task-detail-element .action-top [class^=\\\"icon-\\\"]:hover,div.task-detail-element .action-top [class*=\\\" icon-\\\"]:hover{opacity:0.6}div.task-detail-element .no-detail{display:none}div.task-detail-element.noreport .no-detail{display:block;color:#92918f}\\n\\n/*# sourceMappingURL=report.css.map */div.task-listing{position:relative;cursor:default;padding-top:0px}div.task-listing div.box{position:relative;min-height:76px;min-width:360px;background:#f3f1ef;-webkit-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-moz-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-ms-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-o-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}div.task-listing div.box .description{padding:2px 20px;background:#dbd9d7;color:#222;font-weight:bold;border-bottom:solid 1px #ddd;min-height:8px}div.task-listing div.box .arrow{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg);border:1px #ddd solid;border-right:none;border-bottom:none;width:16px;height:16px;background:#dbd9d7;color:#222;position:absolute;right:14px;top:-9px}div.task-listing div.box ul.task-list{position:relative;top:0;left:0;right:0;opacity:1;padding:0 !important;border:none;max-height:460px;overflow:auto;background:#c2c1bf;position:relative}div.task-listing div.box ul.task-list li{position:relative;width:100%;max-height:100px;color:#222;background:#c2c1bf}div.task-listing div.box ul.task-list li:not(:last-child){border-bottom:solid 1px #dbd9d7}div.task-listing div.box ul.task-list li.inserting{max-height:0;-webkit-transition:max-height, .5s, ease-out, 0s;-moz-transition:max-height, .5s, ease-out, 0s;-ms-transition:max-height, .5s, ease-out, 0s;-o-transition:max-height, .5s, ease-out, 0s;transition:max-height, .5s, ease-out, 0s}div.task-listing div.box ul.task-list li.inserting .task-element{height:0px}div.task-listing div.box ul.task-list li.inserted{min-height:70px}div.task-listing div.box ul.task-list li .task-element{transform:scaleY(1);-webkit-transition:scaleY, .6s, ease-out, 0s;-moz-transition:scaleY, .6s, ease-out, 0s;-ms-transition:scaleY, .6s, ease-out, 0s;-o-transition:scaleY, .6s, ease-out, 0s;transition:scaleY, .6s, ease-out, 0s}div.task-listing div.box ul.task-list li .task-element.new-element{transform-origin:20% 0;transform:scaleY(0)}div.task-listing div.box .clear-box{text-align:center;border-top:solid 1px #ddd;background:#eceae8;padding:2px 0}div.task-listing div.box .clear-box .clear-all{text-decoration:none;color:#3e7da7}div.task-listing div.box .clear-box .clear-all:hover{text-decoration:underline;color:#0e5d91}div.task-listing div.box .empty-placeholder{width:100%;position:absolute;top:25px;padding:12px 20px;font-style:italic;color:#222}div.task-listing div.box .view-detail{display:none}div.task-listing.detail-view .box .task-list,div.task-listing.detail-view .box .clear-box{display:none}div.task-listing.detail-view .box .view-detail{display:block;position:relative}\\n\\n/*# sourceMappingURL=list.css.map */.task-manager-container{cursor:pointer;position:relative;width:40px;height:64px;background-color:transparent;padding:22px 8px 0px}.task-manager-container:hover{-webkit-transition:background-color 0.2s ease;-moz-transition:background-color 0.2s ease;-ms-transition:background-color 0.2s ease;-o-transition:background-color 0.2s ease;transition:background-color 0.2s ease;background-color:rgba(14,93,145,0.5);text-decoration:none}.dark-bar nav .settings-menu:hover ~ .persistent-menu .task-listing .box{box-shadow:none;border-color:#eee}.dark-bar nav .settings-menu:hover ~ .persistent-menu .task-listing .box .arrow{display:none}\\n\\n/*# sourceMappingURL=manager.css.map */');\n","\ndefine(\"taoTaskQueue/loader/taoTaskQueue.bundle\", function(){});\n"]}