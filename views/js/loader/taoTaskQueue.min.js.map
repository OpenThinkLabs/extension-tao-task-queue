{"version":3,"sources":["../../core/format.js","../../core/promise.js","../../core/logger/api.js","../../core/logger.js","../../core/eventifier.js","../component/listing/tpl/element!tpl","../component/listing/css/element!css","../component/listing/element.js","../component/listing/tpl/report!tpl","../component/listing/css/report!css","../component/listing/report.js","../component/listing/tpl/list!tpl","../component/listing/tpl/elementWrapper!tpl","../component/listing/css/list!css","../component/listing/list.js","../component/manager/tpl/manager!tpl","../component/manager/css/manager!css","../component/manager/manager.js","../../util/url.js","../../core/polling.js","../../core/promiseQueue.js","../../core/store/localstorage.js","../../core/store/indexeddb.js","../../core/store/memory.js","../../core/store.js","../../core/tokenStore.js","../../core/tokenHandler.js","../../core/request.js","../../core/dataProvider/request.js","../../util/regexEscape.js","../../util/wrapLongWords.js","../../util/encode.js","../controller/main.js","../controller/routes.js","onLayerEnd0.js","module-create.js"],"names":[],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) :\n    typeof define === 'function' && define.amd ? define('core/format',['lodash'], factory) :\n    (global = global || self, global['core/format'] = factory(global._));\n}(this, function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    var pattern = /(%[sdj])/g;\n\n    /**\n     * Enables you to format strings/message, using the pattern:\n     *  - %s : string\n     *  - %d : number\n     *  - %j : json\n     *\n     * @example format('Resize %s to %d%', 'width', 100); //returns Resize width to 100%\n     * @exports core/format\n     * @param {String} message - the message to format\n     * @param {...String|Number|Object} [replacements] -  the replacements arguments in the order defined in the message\n     * @returns {String} the formatted message\n     */\n    function format(message) {\n        var replacements = Array.prototype.slice.call(arguments, 1);\n        return _.reduce(\n            message.match(pattern),\n            function(acc, match, index) {\n                var replacement = '';\n                if (undefined !== replacements[index]) {\n                    switch (match) {\n                        case '%d':\n                            replacement = Number(replacements[index]);\n                            break;\n                        case '%j':\n                            try {\n                                replacement = JSON.stringify(replacements[index]).replace(/\"/g, '');\n                            } catch (e) {}\n                            break;\n                        default:\n                            replacement = replacements[index];\n                            break;\n                    }\n                    message = message.replace(match, replacement);\n                }\n                return message;\n            },\n            message\n        );\n    }\n\n    return format;\n\n}));\n\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define('core/promise',factory) :\n\t(global = global || self, global['core/promise'] = factory());\n}(this, function () { 'use strict';\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2015-2019 Open Assessment Technologies SA\n\t */\n\n\treturn Promise;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/format'), require('core/promise')) :\n    typeof define === 'function' && define.amd ? define('core/logger/api',['lodash', 'core/format', 'core/promise'], factory) :\n    (global = global || self, global['core/logger/api'] = factory(global._, global['core/format'], global['core/promise']));\n}(this, function (_, format, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    format = format && format.hasOwnProperty('default') ? format['default'] : format;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * The default level\n     */\n    var defaultLevel = 'info';\n\n    var levels = {\n        fatal: 60, // The service/app is going to stop or become unusable now. An operator should definitely look into this soon.\n        error: 50, // Fatal for a particular request, but the service/app continues servicing other requests. An operator should look at this soon(ish).\n        warn: 40, // A note on something that should probably be looked at by an operator eventually.\n        info: 30, // Detail on regular operation.\n        debug: 20, // Anything else, i.e. too verbose to be included in \"info\" level.\n        trace: 10 // Logging from external libraries used by your app or very detailed application logging.\n    };\n\n    /**\n     * Major version of the node-bunyan package (for compat)\n     */\n    var bunyanVersion = 0;\n\n    /**\n     * Where messages dwells\n     */\n    var logQueue = [];\n\n    /**\n     * Get the actual level as a string,\n     * fallback to the default level.\n     * @param {String|Number} [level] - the level\n     * @returns {String} the level\n     */\n    var getLevel = function getLevel(level) {\n        if (typeof level === 'undefined' || (_.isString(level) && !_.has(levels, level))) {\n            return defaultLevel;\n        }\n        if (_.isNumber(level)) {\n            return (\n                _.findKey(levels, function(l) {\n                    return l === level;\n                }) || defaultLevel\n            );\n        }\n        return level;\n    };\n\n    /**\n     * Get the actual level as a number,\n     * fallback to the default level.\n     * @param {String|Number} [level] - the level\n     * @returns {Number} the level\n     */\n    var getLevelNum = function getLevelNum(level) {\n        if (_.isString(level) && _.has(levels, level)) {\n            return levels[level];\n        }\n        if (_.isNumber(level) && _.contains(levels, level)) {\n            return level;\n        }\n        return levels[defaultLevel];\n    };\n\n    /**\n     * Check whether the given level is above the minimum level threshold\n     * @param {String|Number} minlevel- the minimum level\n     * @param {String|Number} [level] - the level to check\n     * @returns {Boolean}\n     */\n    var checkMinLevel = function checkMinLevel(minLevel, level) {\n        return getLevelNum(level) >= getLevelNum(minLevel);\n    };\n\n    /**\n     * Creates a logger instance\n     *\n     * @param {String} name - each logger instance MUST have a name\n     * @param {String|Number} [minLevel] - the minimum logging level\n     * @param {Object} [fields] - fields to add to all records\n     *\n     * @returns {logger} a new logger instance\n     */\n    var loggerFactory = function loggerFactory(name, minLevel, fields) {\n        var baseRecord;\n        var logger;\n\n        if (!_.isString(name) || _.isEmpty(name)) {\n            throw new TypeError('A logger needs a name');\n        }\n\n        if (_.isPlainObject(minLevel) && typeof field === 'undefined') {\n            fields = minLevel;\n            minLevel = defaultLevel;\n        }\n\n        baseRecord = _.defaults(fields || {}, {\n            name: name,\n            pid: 1, // only for compat\n            hostname: navigator.userAgent\n        });\n\n        /**\n         * Exposes a log method and one by log level, like logger.trace()\n         *\n         * @typedef logger\n         */\n        logger = {\n            /**\n             * Log messages by delegating to the provider\n             *\n             * @param {String|Number} level - the log level\n             * @param {Object} [recordFields] - fields to add to the log record\n             * @param {String|Error} message - the message to log\n             * @param {...String} [rest] - rest parameters if the message is formatted\n             * @returns {logger} chains\n             */\n            log: function log(level, recordFields, message) {\n                var record;\n                var err;\n                var rest = [];\n                var time = new Date().toISOString();\n\n                //without providers or not the level, we don't log.\n                if (loggerFactory.providers === false || !checkMinLevel(minLevel || defaultLevel, level)) {\n                    return;\n                }\n\n                if (_.isString(recordFields) || recordFields instanceof Error) {\n                    message = recordFields;\n                    recordFields = {};\n                    rest = [].slice.call(arguments, 2);\n                } else {\n                    rest = [].slice.call(arguments, 3);\n                }\n\n                record = {\n                    level: getLevel(level),\n                    v: bunyanVersion,\n                    time: time\n                };\n\n                if (checkMinLevel(levels.error, level) || message instanceof Error) {\n                    if (message instanceof Error) {\n                        err = message;\n                    } else {\n                        message = _.isObject(message) ? JSON.stringify(message) : message;\n                        err = new Error(message);\n                    }\n\n                    record.msg = err.message;\n                    record.err = err;\n                } else {\n                    record.msg = format.apply(null, [message].concat(rest));\n                }\n\n                _.merge(record, baseRecord, recordFields);\n\n                logQueue.push(record);\n\n                loggerFactory.flush();\n\n                return this;\n            },\n\n            /**\n             * Get/set the default level of the logger\n             * @param {String|Number} [level] - set the default level\n             * @returns {String|logger} the default level as a getter or chains as a setter\n             */\n            level: function(value) {\n                if (typeof value !== 'undefined') {\n                    //update the partial function\n                    minLevel = getLevelNum(value);\n                    return this;\n                }\n                return getLevel(minLevel);\n            },\n\n            /**\n             * Fork the current logger to create a child logger :\n             * same config + child fields\n             *\n             * @param {Object} [childFields] - specialized child fields\n             * @return {logger} the child logger\n             */\n            child: function child(childFields) {\n                return loggerFactory(name, minLevel, _.defaults(childFields, baseRecord));\n            }\n        };\n\n        //augment the logger by each level\n        return _.reduce(\n            levels,\n            function reduceLogLevel(target, level, levelName) {\n                target[levelName] = _.partial(logger.log, level);\n                return target;\n            },\n            logger\n        );\n    };\n\n    /**\n     * Exposes the levels\n     * @type {Object}\n     */\n    loggerFactory.levels = levels;\n\n    /**\n     * The list of providers bound to the logger.\n     * @type {Boolean|Array} false means we don't log, array even empty we keep the logs\n     */\n    loggerFactory.providers = false;\n\n    /**\n     * Load providers from AMD modules\n     * @param {Object} providerConfigs - provider's modules to load and register\n     * @returns {Promise} resolves once modules are registered\n     */\n    loggerFactory.load = function load(providerConfigs) {\n        var self = this;\n        var modules = [];\n        this.providers = [];\n\n        return new Promise(function(resolve, reject) {\n            //we can load the loggers dynamically\n            _.forEach(providerConfigs, function(providerConfig, providerName) {\n                modules.push(providerName);\n            });\n            require(modules, function() {\n                var loadedProviders = [].slice.call(arguments);\n                _.forEach(loadedProviders, function(provider, moduleKey) {\n                    try {\n                        self.register(provider, providerConfigs[modules[moduleKey]]);\n                    } catch (err) {\n                        reject(err);\n                    }\n                });\n\n                //flush messages that arrived before the providers are there\n                self.flush();\n\n                resolve();\n            }, reject);\n        });\n    };\n\n    /**\n     * A logger provider provides with a way to log\n     * @typedef {Object} loggerProvider\n     * @property {Function} log - called with the message in parameter\n     * @param {Object} providerConfig - provider's config\n     * @throws TypeError\n     */\n    loggerFactory.register = function register(provider, providerConfig) {\n        if (!_.isPlainObject(provider) || !_.isFunction(provider.log)) {\n            throw new TypeError('A log provider is an object with a log method');\n        }\n        //propogate checkMinLevel function\n        provider.checkMinLevel = checkMinLevel;\n        if (_.isFunction(provider.setConfig)) {\n            provider.setConfig(providerConfig);\n        }\n        this.providers = this.providers || [];\n        this.providers.push(provider);\n    };\n\n    /**\n     * Flush the messages queue into the providers\n     */\n    loggerFactory.flush = function flush() {\n        if (_.isArray(this.providers) && this.providers.length > 0) {\n            _.forEach(logQueue, function(message) {\n                //forward to the providers\n                _.forEach(loggerFactory.providers, function(provider) {\n                    provider.log.call(provider, message);\n                });\n            });\n            //clear the queue\n            logQueue = [];\n        }\n    };\n\n    /**\n     * Change the default level for all loggers\n     * @param {String|Number} [level] - set the default level\n     * @returns {String} the defined level\n     */\n    loggerFactory.setDefaultLevel = function setDefaultLevel(level) {\n        defaultLevel = getLevel(level);\n        return defaultLevel;\n    };\n\n    return loggerFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('module'), require('core/logger/api')) :\n    typeof define === 'function' && define.amd ? define('core/logger',['lodash', 'module', 'core/logger/api'], factory) :\n    (global = global || self, global['core/logger'] = factory(global._, global.module, global['core/logger/api']));\n}(this, function (_, module, loggerFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * The default configuration if nothing\n     * is found on the module config\n     */\n    var defaultConfig = {\n        level: loggerFactory.levels.warn,\n        loggers: {\n            'core/logger/console': {\n                level: 'warn'\n            }\n        }\n    };\n\n    //the logger providers are configured through the AMD module config\n    var config = _.defaults(module.config() || {}, defaultConfig);\n    var logger = loggerFactory('core/logger');\n\n    loggerFactory.setDefaultLevel(config.level);\n    loggerFactory.load(config.loggers);\n\n    /**\n     * Catch uncaught errors\n     * @param msg - error message\n     * @param url - current url\n     * @param line - line number\n     * @param col - column number\n     * @param error - error object (not all browsers support).\n     * @return {boolean}\n     */\n    window.onerror = function(msg, url, line, col, error) {\n        logger.error(\"Caught[via window.onerror]: '\" + msg + \"' from \" + url + ':' + line + ':' + col);\n    };\n\n    /**\n     * Expose explicitely an direct way to activate log levels\n     * @param {String|Number} level - the new log level\n     * @returns {String} the defined level\n     */\n    window.setTaoLogLevel = function setTaoLogLevel(level) {\n        return loggerFactory.setDefaultLevel(level);\n    };\n\n    return loggerFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('lib/uuid'), require('core/logger')) :\n    typeof define === 'function' && define.amd ? define('core/eventifier',['lodash', 'core/promise', 'lib/uuid', 'core/logger'], factory) :\n    (global = global || self, global['core/eventifier'] = factory(global._, global['core/promise'], global['lib/uuid'], global['core/logger']));\n}(this, function (_, Promise, uuid, loggerFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * All events have a namespace, this one is the default\n     */\n    var defaultNs = '@';\n\n    /**\n     * Namespace that targets all event\n     */\n    var globalNs = '*';\n\n    /**\n     * Create a logger\n     */\n    var eventifierLogger = loggerFactory('core/eventifier');\n\n    /**\n     * Get the list of events from an eventName string (ie, separated by spaces)\n     * @param {String} eventNames - the event strings\n     * @returns {String[]} the event list (no empty, no duplicate)\n     */\n    function getEventNames(eventNames) {\n        if (!_.isString(eventNames) || _.isEmpty(eventNames)) {\n            return [];\n        }\n        return _(eventNames.split(/\\s/g))\n            .compact()\n            .uniq()\n            .value();\n    }\n\n    /**\n     * Get the name part of an event name: the 'foo' of 'foo.bar'\n     * @param {String} eventName - the name of the event\n     * @returns {String} the name part\n     */\n    function getName(eventName) {\n        if (eventName.indexOf('.') > -1) {\n            return eventName.substr(0, eventName.indexOf('.'));\n        }\n        return eventName;\n    }\n\n    /**\n     * Get the namespace part of an event name: the 'bar' of 'foo.bar'\n     * @param {String} eventName - the name of the event\n     * @returns {String} the namespace, that defaults to defaultNs\n     */\n    function getNamespace(eventName) {\n        if (eventName.indexOf('.') > -1) {\n            return eventName.substr(eventName.indexOf('.') + 1);\n        }\n        return defaultNs;\n    }\n\n    /**\n     * Creates a new EventHandler object structure\n     * @returns {Object} the handler structure\n     */\n    function getHandlerObject() {\n        return {\n            before: [],\n            between: [],\n            after: []\n        };\n    }\n\n    /**\n     * Makes the target an event emitter by delegating calls to the event API.\n     * @param {Object} [target = {}] - the target object, a new plain object is created when omited.\n     * @returns {Object} the target for conveniance\n     */\n    function eventifier(target) {\n        var targetName;\n        var logger;\n        var stoppedEvents;\n\n        //it stores all the handlers under ns/name/[handlers]\n        var eventHandlers = {};\n\n        /**\n         * Get the handlers for an event type\n         * @param {String} eventName - the event name, namespace included\n         * @param {String} [type = 'between'] - the type of event in before, between and after\n         * @returns {Function[]} the handlers\n         */\n        var getHandlers = function getHandlers(eventName, type) {\n            var name = getName(eventName);\n            var ns = getNamespace(eventName);\n\n            type = type || 'between';\n            eventHandlers[ns] = eventHandlers[ns] || {};\n            eventHandlers[ns][name] = eventHandlers[ns][name] || getHandlerObject();\n            return eventHandlers[ns][name][type];\n        };\n\n        /**\n         * The API itself is just a placeholder, all methods will be delegated to a target.\n         */\n        var eventApi = {\n            /**\n             * Attach an handler to an event.\n             * Calling `on` with the same eventName multiple times add callbacks: they\n             * will all be executed.\n             *\n             * @example target.on('foo', function(bar){ console.log('Cool ' + bar) } );\n             *\n             * @this the target\n             * @param {String} eventNames - the name of the event, or multiple events separated by a space\n             * @param {Function} handler - the callback to run once the event is triggered\n             * @returns {Object} the target object\n             */\n            on: function on(eventNames, handler) {\n                if (_.isFunction(handler)) {\n                    _.forEach(getEventNames(eventNames), function(eventName) {\n                        getHandlers(eventName).push(handler);\n                    });\n                }\n                return this;\n            },\n\n            /**\n             * Remove ALL handlers for an event.\n             *\n             * @example remove ALL\n             * target.off('foo');\n             *\n             * @example remove targeted namespace\n             * target.off('foo.bar');\n             *\n             * @example remove all handlers by namespace\n             * target.off('.bar');\n             *\n             * @example remove all namespaces, keep non namespace\n             * target.off('.*');\n             *\n             * @this the target\n             * @param {String} eventNames - the name of the event, or multiple events separated by a space\n             * @returns {Object} the target object\n             */\n            off: function off(eventNames) {\n                _.forEach(getEventNames(eventNames), function(eventName) {\n                    var name = getName(eventName);\n                    var ns = getNamespace(eventName);\n                    var offNamespaces;\n\n                    if (ns && !name) {\n                        if (ns === globalNs) {\n                            offNamespaces = {};\n                            offNamespaces[defaultNs] = eventHandlers[defaultNs];\n                            eventHandlers = offNamespaces;\n                        } else {\n                            //off the complete namespace\n                            eventHandlers[ns] = {};\n                        }\n                    } else {\n                        _.forEach(eventHandlers, function(nsHandlers, namespace) {\n                            if (nsHandlers[name] && (ns === defaultNs || ns === namespace)) {\n                                nsHandlers[name] = getHandlerObject();\n                            }\n                        });\n                    }\n                });\n                return this;\n            },\n\n            /**\n             * Remove ALL registered handlers\n             *\n             * @example remove ALL\n             * target.removeAllListeners();\n             *\n             * @this the target\n             * @returns {Object} the target object\n             */\n            removeAllListeners: function removeAllListeners() {\n                // full erase\n                eventHandlers = {};\n                return this;\n            },\n\n            /**\n             * Trigger an event.\n             *\n             * @example target.trigger('foo', 'Awesome');\n             *\n             * @this the target\n             * @param {String} eventNames - the name of the event to trigger, or multiple events separated by a space\n             * @returns {Object} the target object\n             */\n            trigger: function trigger(eventNames) {\n                var self = this;\n                var args = [].slice.call(arguments, 1);\n\n                stoppedEvents = {};\n\n                _.forEach(getEventNames(eventNames), function(eventName) {\n                    var ns = getNamespace(eventName);\n                    var name = getName(eventName);\n\n                    //check which ns needs to be executed and then merge the handlers to be executed\n                    var mergedHandlers = _(eventHandlers)\n                        .filter(function(nsHandlers, namespace) {\n                            return nsHandlers[name] && (ns === defaultNs || ns === namespace || namespace === globalNs);\n                        })\n                        .reduce(function(acc, nsHandlers) {\n                            acc.before = acc.before.concat(nsHandlers[name].before);\n                            acc.between = acc.between.concat(nsHandlers[name].between);\n                            acc.after = acc.after.concat(nsHandlers[name].after);\n                            return acc;\n                        }, getHandlerObject());\n\n                    logger.trace({ event: eventName, args: args }, 'trigger %s', eventName);\n\n                    if (mergedHandlers) {\n                        triggerAllHandlers(mergedHandlers, name, ns);\n                    }\n                });\n\n                function triggerAllHandlers(allHandlers, name, ns) {\n                    var event = {\n                        name: name,\n                        namespace: ns\n                    };\n\n                    if (allHandlers.before.length) {\n                        triggerBefore(allHandlers.before, event)\n                            .then(function() {\n                                triggerBetween(allHandlers, event);\n                            })\n                            .catch(function(err) {\n                                logHandlerStop('before', event, err);\n                            });\n                    } else {\n                        triggerBetween(allHandlers, event);\n                    }\n                }\n\n                function triggerBefore(handlers, event) {\n                    var pHandlers,\n                        beforeArgs = args.slice();\n\n                    // .before() handlers will get a special 'event' object as their first parameter\n                    beforeArgs.unshift(event);\n\n                    pHandlers = handlers.map(function(handler) {\n                        // .before() handlers use to return false to cancel the call stack\n                        // to maintain backward compatibility, we treat this case as a rejected Promise\n                        var value = shouldStop(event.name) ? false : handler.apply(self, beforeArgs);\n                        return value === false ? Promise.reject() : value;\n                    });\n\n                    return Promise.all(pHandlers);\n                }\n\n                function triggerBetween(allHandlers, event) {\n                    if (shouldStop(event.name)) {\n                        logHandlerStop('before', event); // .stopEvent() has been called in an async .before() callback\n                    } else {\n                        // trigger the event handlers\n                        triggerHandlers(allHandlers.between, event)\n                            .then(function() {\n                                triggerAfter(allHandlers.after, event);\n                            })\n                            .catch(function(err) {\n                                logHandlerStop('on', event, err);\n                            });\n                    }\n                }\n\n                function triggerAfter(handlers, event) {\n                    if (shouldStop(event.name)) {\n                        logHandlerStop('on', event); // .stopEvent() has been called in an async .on() callback\n                    } else {\n                        triggerHandlers(handlers, event)\n                            .then(function() {\n                                if (shouldStop(event.name)) {\n                                    logHandlerStop('after', event); // .stopEvent() has been called in an async .after() callback\n                                }\n                            })\n                            .catch(function(err) {\n                                logHandlerStop('after', event, err);\n                            });\n                    }\n                }\n\n                function triggerHandlers(handlers, event) {\n                    var pHandlers;\n                    pHandlers = handlers.map(function(handler) {\n                        return shouldStop(event.name) ? Promise.reject() : handler.apply(self, args);\n                    });\n                    return Promise.all(pHandlers);\n                }\n\n                function logHandlerStop(stoppedIn, event, err) {\n                    if (err instanceof Error) {\n                        logger.error(err);\n                    }\n                    logger.trace({ err: err, event: event.name, stoppedIn: stoppedIn }, event.name + ' handlers stopped');\n                }\n\n                function shouldStop(name) {\n                    return stoppedEvents[name];\n                }\n\n                return this;\n            },\n\n            /**\n             * Register a callback that is executed before the given event name\n             * Provides an opportunity to cancel the execution of the event if one of the returned value is false\n             *\n             * @this the target\n             * @param {String} eventNames - the name of the event, or multiple events separated by a space\n             * @param {Function} handler - the callback to run once the event is triggered\n             * @returns {Object} the target object\n             */\n            before: function before(eventNames, handler) {\n                if (_.isFunction(handler)) {\n                    _.forEach(getEventNames(eventNames), function(eventName) {\n                        getHandlers(eventName, 'before').push(handler);\n                    });\n                }\n                return this;\n            },\n\n            /**\n             * Register a callback that is executed after the given event name\n             * The handlers will all be executed, no matter what\n             *\n             * @this the target\n             * @param {String} eventNames - the name of the event, or multiple events separated by a space\n             * @param {Function} handler - the callback to run once the event is triggered\n             * @returns {Object} the target object\n             */\n            after: function after(eventNames, handler) {\n                if (_.isFunction(handler)) {\n                    _.forEach(getEventNames(eventNames), function(eventName) {\n                        getHandlers(eventName, 'after').push(handler);\n                    });\n                }\n                return this;\n            },\n\n            /**\n             * If triggered into an sync handler, this immediately cancels the execution of all following handlers\n             * regardless of their category\n             * If triggered asynchronously, this will only cancel the next category of handlers:\n             * - .on() and .after() if triggered during a .before() handler\n             * - .after() if triggered during a .on() handler\n             * - nothing if triggered during a .after() handler\n             * In an async context, you can also reject a Promise with the same results\n             *\n             * @param {string} name - of the event to stop\n             */\n            stopEvent: function stopEvent(name) {\n                if (_.isString(name) && !_.isEmpty(name.trim())) {\n                    stoppedEvents[name.trim()] = true;\n                }\n            },\n\n            /**\n             * Spread events to another eventifier object.\n             * So when an event is triggered on the current target,\n             * it get's triggered on the destination too.\n             *\n             * Be careful, the forward will be triggered only if the event reach the `on` steps\n             * (it can be canceled by a before).\n             *\n             * @param {eventifier} destination - the destination emitter\n             * @param {String|String[]} eventNames - the list of events to forward\n             * @returns {Object} target - chains\n             */\n            spread: function spread(destination, eventNames) {\n                var self = this;\n                if (destination && _.isFunction(destination.trigger)) {\n                    if (_.isString(eventNames)) {\n                        eventNames = getEventNames(eventNames);\n                    }\n                    _.forEach(eventNames, function(eventName) {\n                        self.on(eventName, function forwardEventTo() {\n                            var args = [eventName].concat([].slice.call(arguments));\n\n                            destination.trigger.apply(destination, args);\n                        });\n                    });\n                }\n                return this;\n            }\n        };\n\n        target = target || {};\n\n        //try to get something that looks like a name, an id or generate one only for logging purposes\n        targetName = target.name || target.id || target.serial || uuid(6);\n\n        //create a child logger per eventifier\n        logger = eventifierLogger.child({ target: targetName });\n\n        _(eventApi)\n            .functions()\n            .forEach(function(method) {\n                if (_.isFunction(target[method])) {\n                    eventifierLogger.warn('The target object has already a method named ' + method, target);\n                }\n                target[method] = function delegate() {\n                    var args = [].slice.call(arguments);\n                    return eventApi[method].apply(target, args);\n                };\n            });\n\n        return target;\n    }\n\n    return eventifier;\n\n}));\n\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/element', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"task-element \";\n  if (helper = helpers.status) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.status); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <div class=\\\"container-icon\\\">\\n        <div class=\\\"shape\\\">\\n            <span class=\\\"\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"/>\\n        </div>\\n    </div>\\n    <div class=\\\"container-text\\\">\\n        <div class=\\\"label\\\">\";\n  if (helper = helpers.taskLabel) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.taskLabel); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"time\\\">\";\n  if (helper = helpers.time) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.time); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n    </div>\\n    <div class=\\\"action-group action-top\\\">\\n        <span data-role=\\\"remove\\\" class=\\\"icon-result-nok\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"remove\", options) : helperMissing.call(depth0, \"__\", \"remove\", options)))\n    + \"\\\"/>\\n    </div>\\n    <div class=\\\"action-group action-bottom\\\">\\n        <span data-role=\\\"notify\\\" class=\\\"icon-preview\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"notify me when done\", options) : helperMissing.call(depth0, \"__\", \"notify me when done\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"download\\\" class=\\\"icon-download\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"download\", options) : helperMissing.call(depth0, \"__\", \"download\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"redirect\\\" class=\\\"icon-external\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"go to resource\", options) : helperMissing.call(depth0, \"__\", \"go to resource\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"report\\\" class=\\\"icon-document\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"see report\", options) : helperMissing.call(depth0, \"__\", \"see report\", options)))\n    + \"\\\"/>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/element',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/element',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/component',\n    'ui/hider',\n    'tpl!taoTaskQueue/component/listing/tpl/element',\n    'css!taoTaskQueue/component/listing/css/element'\n], function ($, _, __, moment, component, hider, elementTpl) {\n    'use strict';\n\n    var _defaults = {\n    };\n\n    var _allowedStatus = ['in_progress', 'failed', 'completed'];\n\n    var _categoryMap = {\n        import : 'import',\n        export : 'export',\n        delivery_comp : 'delivery',\n        transfer : 'connect',\n        create : 'magicwand',\n        update : 'edit',\n        delete : 'bin'\n    };\n\n    var _statusIcon = {\n        in_progress : 'property-advanced',\n        completed: 'result-ok',\n        failed: 'result-nok',\n    };\n\n    /**\n     * Get the task name to be displayed to the user\n     * @param {Object} data - the standard task object\n     * @returns {String}\n     */\n    var getLabelString = function getLabelString(data){\n        return data.taskLabel;\n    };\n\n    /**\n     * Get the formatted duration string\n     * @param {Number} from - the start time in unix timestamp\n     * @param {Number} elapsed - the duration in seconds\n     * @returns {Number}\n     */\n    var getFormattedTime = function getFormattedTime(from, elapsed){\n        return moment.unix(from).from(moment.unix(parseInt(from, 10)+parseInt(elapsed, 10)));\n    };\n\n    /**\n     * Get the formatted time string according to the current task data\n     * @param data - the standard task object\n     * @returns {String}\n     */\n    var getTimeString = function getTimeString(data){\n        switch(data.status){\n            case 'created':\n            case 'in_progress':\n                return __('Started %s', getFormattedTime(data.createdAt, data.createdAtElapsed));\n            case 'completed':\n                return __('Completed %s', getFormattedTime(data.updatedAt, data.updatedAtElapsed));\n            case 'failed':\n                return __('Failed %s', getFormattedTime(data.updatedAt, data.updatedAtElapsed));\n            default:\n                return '';\n        }\n    };\n\n    /**\n     * Get the appropriate icon according to the task data\n     * @param {Object} data - the standard task object\n     * @returns {string}\n     */\n    var getIcon = function getIcon(data){\n        var icon;\n        if(!_.isPlainObject(data)){\n            throw new Error('invalid data');\n        }\n        if(data.category && _categoryMap[data.category]){\n            icon = _categoryMap[data.category];\n        }else if(data.status && _statusIcon[data.status]){\n            icon = _statusIcon[data.status];\n        }else {\n            icon = _statusIcon.in_progress;\n        }\n        return 'icon-'+icon;\n    };\n\n    var taskElementApi = {\n\n        /**\n         * Get the id of the task element\n         * @returns {String}\n         */\n        getId : function getId(){\n            if(this.data && this.data.id){\n                return this.data.id;\n            }\n        },\n\n        /**\n         * Get the status of the task element\n         * @returns {String}\n         */\n        getStatus : function getStatus(){\n            if(this.data && this.data.status){\n                return this.data.status;\n            }\n        },\n\n        /**\n         * Get the data of the task element\n         * @returns {Object}\n         */\n        getData : function getData(){\n            return this.data;\n        },\n\n        /**\n         * Update the data and rendering of it\n         * @param data\n         * @returns {taskElement}\n         */\n        update : function update(data){\n            var $container = this.getElement();\n\n            _.assign(this.data || {}, data);\n\n            $container.find('.shape > span').removeAttr('class').addClass(getIcon(this.data));\n            $container.find('.label').html(getLabelString(this.data));\n            $container.find('.time').html(getTimeString(this.data));\n\n            this.setStatus(this.data.status);\n            //bonus: check if there is any report and display the report button only when needed\n\n            hider.toggle($container.find('.action-bottom [data-role=\"download\"]'), this.data.hasFile);\n            hider.toggle($container.find('.action-bottom [data-role=\"redirect\"]'), !!this.data.redirectUrl);\n\n            this.trigger('update');\n            return this;\n        },\n\n        /**\n         * Add transition to highlight the element (useful after an update for instance)\n         * @returns {taskElement}\n         */\n        highlight : function highlight(){\n            var $container = this.getElement();\n            $container.addClass('highlight');\n            _.delay(function(){\n                $container.removeClass('highlight');\n            }, 500);\n            return this;\n        },\n\n        /**\n         * Set the status of the task element\n         * @param {String} status\n         * @returns {taskElement}\n         */\n        setStatus : function setStatus(status){\n            var self = this;\n            if(!status){\n                throw new Error('status should not be empty');\n            }\n\n            if(['created'].indexOf(status) !== -1){\n                status = 'in_progress';\n            }\n\n            if(_allowedStatus.indexOf(status) === -1){\n                throw new Error('unknown status '+status);\n            }\n            if(!this.is(status)){\n                _.forEach(_.without(_allowedStatus, status), function(st){\n                    self.setState(st, false);\n                });\n                this.setState(status, true);\n            }\n            return this;\n        }\n    };\n\n    /**\n     * Builds a task listing element\n     *\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskElement} the component\n     *\n     * @event remove - Emitted when the element requests to be removed\n     * @event download - Emitted when the element requests downloading its associated file\n     * @event report - Emitted when a list element requests its related report to be displayed\n     * @event update - Emitted when the display update is done\n     */\n    return function taskElementFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskElement\n         */\n        return component(taskElementApi)\n            .setTemplate(elementTpl)\n            .on('init', function(){\n                this.data = data || {};\n            })\n            .on('render', function() {\n\n                var self = this;\n                var $component = this.getElement();\n\n                this.update(data);\n\n                $component.find('[data-role=\"download\"]').click(function(){\n                    self.trigger('download');\n                });\n                $component.find('[data-role=\"remove\"]').click(function(){\n                    self.trigger('remove');\n                });\n                $component.find('[data-role=\"report\"]').click(function(){\n                    self.trigger('report');\n                });\n                $component.find('[data-role=\"redirect\"]').click(function(){\n                    self.trigger('redirect');\n                });\n\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/report', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-detail-element\\\">\\n    <div class=\\\"detail-description\\\">\\n        <span class=\\\"label\\\"></span>\\n        <span class=\\\"time\\\"></span>\\n    </div>\\n    <div class=\\\"action-group action-top\\\">\\n        <span data-role=\\\"close\\\" class=\\\"icon-compress\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"close report\", options) : helperMissing.call(depth0, \"__\", \"close report\", options)))\n    + \"\\\"/>\\n    </div>\\n    <div class=\\\"detail-body\\\">\\n    </div>\\n    <div class=\\\"no-detail\\\">\\n        <span class=\\\"message\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No report available\", options) : helperMissing.call(depth0, \"__\", \"No report available\", options)))\n    + \"</span>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/report',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/report',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/component',\n    'ui/hider',\n    'ui/report',\n    'tpl!taoTaskQueue/component/listing/tpl/report',\n    'css!taoTaskQueue/component/listing/css/report'\n], function ($, _, __, moment, component, hider, reportFactory, elementTpl) {\n    'use strict';\n\n    var _defaults = {\n    };\n\n    var reportElementApi = {\n        /**\n         * Update the task report with the data\n         * @param {Object} data - the standard task log data\n         * @param {String} data.taskLabel - the task name to be displayed to user\n         * @param {Object} data.report - the standard report object\n         */\n        update : function update(data){\n\n            var $component = this.getElement();\n            $component.find('.label').html(data.taskLabel);\n\n            //set report here\n            if(data.report && _.isArray(data.report.children) && data.report.children.length){\n                this.setState('noreport', false);\n                reportFactory({replace:true}, data.report.children[0]).render($component.find('.detail-body'));\n            }else{\n                this.setState('noreport', true);\n            }\n        }\n    };\n\n    /**\n     * Builds a task listing element\n     *\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskReport} the component\n     *\n     * @event close - Emitted when the report needs to be closed\n     */\n    return function taskReportFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskReport\n         */\n        return component(reportElementApi)\n            .setTemplate(elementTpl)\n            .on('render', function() {\n\n                var self = this;\n                var $component = this.getElement();\n\n                this.update(data);\n\n                $component.find('[data-role=\"close\"]').click(function(){\n                    self.trigger('close');\n                });\n\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/list', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"task-listing\\\">\\n    <div class=\\\"box\\\">\\n        <div class=\\\"arrow\\\"></div>\\n        <div class=\\\"description\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"empty-placeholder\\\">\";\n  if (helper = helpers.emptyText) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.emptyText); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <ul class=\\\"task-list plain\\\"></ul>\\n        <div class=\\\"clear-box\\\">\\n            <a class=\\\"clear-all\\\" href=\\\"#\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Clear all finished tasks\", options) : helperMissing.call(depth0, \"__\", \"Clear all finished tasks\", options)))\n    + \"\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Clear all finished\", options) : helperMissing.call(depth0, \"__\", \"Clear all finished\", options)))\n    + \"</a>\\n        </div>\\n        <div class=\\\"view-detail\\\"></div>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/elementWrapper', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></li>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/list',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/list',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'taoTaskQueue/component/listing/element',\n    'tpl!taoTaskQueue/component/listing/tpl/list',\n    'tpl!taoTaskQueue/component/listing/tpl/elementWrapper',\n    'css!taoTaskQueue/component/listing/css/list'\n], function ($, _, __, component, listElementFactory, listTpl, elementWrapperTpl) {\n    'use strict';\n\n    var _defaults = {\n        title : 'Task List',\n        emptyText : __('The list is currently empty.')\n    };\n\n    var listApi = {\n        /**\n         * Remove a list element\n         * @param {taoTaskQueue/component/listing/element} listElement\n         * @returns {taskList}\n         */\n        removeElement : function removeElement(listElement){\n            listElement.destroy();\n            this.getElement().find('ul li[data-id=\"'+listElement.getId()+'\"]').remove();\n            return this;\n        },\n\n        /**\n         * Insert a list element\n         * @param {taoTaskQueue/component/listing/element} listElement\n         * @returns {taskList}\n         */\n        insertElement : function insertElement(listElement){\n            var id = listElement.getId();\n            var $li = $(elementWrapperTpl({\n                id : id\n            }));\n            this.getElement().find('ul').prepend($li);\n            listElement.render($li);\n            return this;\n        },\n\n        /**\n         * Show the detail\n         * @param {taoTaskQueue/component/listing/report} detailElement - the detail element to be shown\n         * @param {Booleam} [show] - should the detail of an element be immediately shown or not\n         * @returns {taskList}\n         */\n        setDetail : function setDetail(detailElement, show){\n            detailElement.render(this.getElement().find('.view-detail'));\n            if(show){\n                this.setState('detail-view', true);\n            }\n            return this;\n        },\n\n        /**\n         * Hide the detail panel and display the default list view again\n         * @returns {taskList}\n         */\n        hideDetail : function hideDetail(){\n            this.setState('detail-view', false);\n            return this;\n        },\n\n        /**\n         * Scroll to the top of the list\n         * @returns {taskList}\n         */\n        scrollToTop : function scrollToTop(){\n            this.getElement().find('.task-list').get(0).scrollTo(0, 0);\n            return this;\n        },\n\n        /**\n         * Animate the insertion tset emphasis on it\n         * @param listElement\n         * @returns {taskList}\n         */\n        animateInsertion : function animateInsertion(listElement){\n            var $listElement = listElement.getElement();\n            var $container = $listElement.parent();\n            $container.addClass('inserting');\n            $listElement.addClass('new-element');\n            _.delay(function(){\n                $container.removeClass('inserting');\n                _.delay(function(){\n                    $listElement.removeClass('new-element');\n                }, 400);\n            },100);\n            return this;\n        }\n    };\n\n    /**\n     * Builds a simple task list component\n     *\n     * @param {Object} config - the component config\n     * @returns {taskList} the component\n     */\n    return function taskListFactory(config) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskList\n         */\n        return component(listApi)\n            .setTemplate(listTpl)\n            .on('render', function(){\n                var self = this;\n                this.getElement().find('.clear-all').on('click', function(e){\n                    e.preventDefault();\n                    self.trigger('clearall');\n                });\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/manager/tpl/manager', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-manager-container\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Background tasks\", options) : helperMissing.call(depth0, \"__\", \"Background tasks\", options)))\n    + \"\\\">\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/manager/css/manager',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/manager/manager',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'layout/loading-bar',\n    'ui/hider',\n    'ui/component',\n    'ui/badge/badge',\n    'ui/component/alignable',\n    'ui/animable/absorbable/absorbable',\n    'ui/animable/pulsable/pulsable',\n    'taoTaskQueue/component/listing/element',\n    'taoTaskQueue/component/listing/report',\n    'taoTaskQueue/component/listing/list',\n    'tpl!taoTaskQueue/component/manager/tpl/manager',\n    'css!taoTaskQueue/component/manager/css/manager'\n], function ($, _, __, loadingBar, hider, component, badgeFactory, makeAlignable, makeAbsorbable, makePulsable, listElementFactory, reportElementFactory, taskListFactory, managerTpl) {\n    'use strict';\n\n    /**\n     * Transform the task log summary into a configuration set for the badge\n     * @param {Object} tasksStatuses - the task log summary\n     * @returns {Object} the new badge data to be displayed following the format {type, loading, value}\n     */\n    var getBadgeDataFromStatus = function getBadgeDataFromStatus(tasksStatuses){\n        var total =  0;\n        var data = {loading : false};\n        if(tasksStatuses){\n            if(tasksStatuses.numberOfTasksInProgress){\n                total += parseInt(tasksStatuses.numberOfTasksInProgress, 10);\n                data.type = 'info';\n                data.loading = (tasksStatuses.numberOfTasksInProgress > 0);\n            }\n            if(tasksStatuses.numberOfTasksCompleted){\n                total += parseInt(tasksStatuses.numberOfTasksCompleted, 10);\n                data.type = 'success';\n            }\n            if(tasksStatuses.numberOfTasksFailed){\n                total += parseInt(tasksStatuses.numberOfTasksFailed, 10);\n                if(data.type === 'success'){\n                    data.type = 'warning';//if there are both success and failures, the status should be a warning\n                }else{\n                    data.type = 'error';\n                }\n            }\n            data.value = total;\n            return data;\n        }\n    };\n\n    /**\n     * Transform the internal list of elements into a configuration set for the badge\n     * @param {Object} elements - internal collection of task elements\n     * @returns {Object} the new badge data to be displayed following the format {type, loading, value}\n     */\n    var getBadgeDataFromElements = function getBadgeDataFromElements(elements){\n\n        var statusMap = {\n            in_progress: 'numberOfTasksInProgress',\n            created: 'numberOfTasksInProgress',\n            failed: 'numberOfTasksFailed',\n            completed: 'numberOfTasksCompleted',\n        };\n\n        var stats = {\n            numberOfTasksFailed : 0,\n            numberOfTasksCompleted : 0,\n            numberOfTasksInProgress : 0\n        };\n\n        _.forEach(elements, function(element){\n            var status = element.getStatus();\n            if(statusMap[status]){\n                //it is a know state, so add to the stats array\n                stats[statusMap[status]]++;\n            }\n        });\n\n        return getBadgeDataFromStatus(stats);\n    };\n\n    /**\n     * The collection of config used for component alignments\n     * the values have been adjusted to make it work well with the list's css\n     * @type {Object}\n     * @private\n     */\n    var _alignementConfig = {\n        initial : {\n            hPos: 'center',\n            hOrigin: 'center',\n            vPos: 'bottom',\n            vOrigin: 'top',\n            hOffset: -156\n        },\n        showDetail : {\n            hPos: 'center',\n            hOrigin: 'center',\n            vPos: 'bottom',\n            vOrigin: 'top',\n            hOffset: -156-121\n        }\n    };\n\n    var taskQueue = {\n\n        /**\n         * Get the list of task elements\n         * @returns {taskQueueManager} - self for chaining\n         */\n        getTaskElements : function getTaskElements(){\n            return this.taskElements;\n        },\n\n        /**\n         * Show the details associated to a task\n         * @param {Object} tasksData - a single task data to view the report form\n         * @returns {taskQueueManager} - self for chaining\n         */\n        showDetail : function showDetail(taskData){\n            var $component = this.getElement();\n            var list = this.list;\n            var reportElement = reportElementFactory({replace:true}, taskData)\n                .on('close', function(){\n                    list.hideDetail();\n                    list.alignWith($component, _alignementConfig.initial);\n                    this.destroy();\n                });\n            list.setDetail(reportElement, true);\n            list.alignWith($component, _alignementConfig.showDetail);\n            return this;\n        },\n\n        /**\n         * Add a new task\n         * @param {Object} tasksData - a single task data to be added to the list\n         * @param {Boolean} [animate=false] - tells if the new task addition should be made through a smooth transition effect\n         * @returns {taskQueueManager} - self for chaining\n         */\n        addNewTask : function addNewTask(taskData, animate){\n            var self = this;\n            var taskId = taskData.id;\n            var listElement = listElementFactory({}, taskData)\n                .on('remove', function(){\n                    delete self.taskElements[taskId];\n                    self.list.removeElement(listElement);\n                    self.trigger('remove', taskId);\n                    self.trigger('listchange');\n                })\n                .on('report', function(){\n                    self.trigger('report', taskId);\n                })\n                .on('download', function(){\n                    self.trigger('download', taskId);\n                })\n                .on('redirect', function(){\n                    loadingBar.start();\n\n                    self.hideList();\n\n                    self.trigger('redirect', taskId);\n                });\n\n\n            if(animate){\n                if(this.list.is('hidden')){\n                    this.list.show();\n                }\n                this.list.scrollToTop();\n            }\n\n            this.list.insertElement(listElement);\n            this.taskElements[taskId] = listElement;\n            this.trigger('listchange');\n\n            if(animate){\n                this.list.animateInsertion(listElement);\n            }\n            return this;\n        },\n\n        /**\n         * Update the badge display according to the current status of the tasks in the list\n         * @returns {taskQueueManager} - self for chaining\n         */\n        selfUpdateBadge : function selfUpdateBadge(){\n            var badgeData = getBadgeDataFromElements(this.getTaskElements());\n            if(!this.badge){\n                this.badge = makePulsable(badgeFactory(badgeData)).render(this.getElement());\n            }else{\n                this.badge.update(badgeData);\n            }\n            return this;\n        },\n\n        /**\n         * Load the the array of task element data requested form the server REST API\n         * @param {Array} tasksData - the task data to be loaded from the server REST API call\n         * @returns {taskQueueManager} - self for chaining\n         */\n        loadData : function loadData(tasksData){\n            var self = this;\n            var found = [];\n            _.forEach(tasksData, function(entry){\n                var id = entry.id;\n                if(self.taskElements[id]){\n                    //update\n                    self.taskElements[id].update(entry);\n                    if(self.taskElements[id].getStatus() !== entry.status){\n                        //highlight status change only\n                        self.taskElements[id].highlight();\n                    }\n                }else{\n                    //create\n                    self.addNewTask(entry);\n                }\n                found.push(id);\n            });\n\n            //remove any element from the list that are not found in the new data collection (task has been archived server side)\n            _.forEach(_.difference(_.keys(self.taskElements), found), function(id){\n                self.list.removeElement(self.taskElements[id]);\n                delete self.taskElements[id];\n            });\n\n            this.trigger('listchange');\n            return this;\n        },\n\n        /**\n         * Trigger the pulse animation on the status badge\n         * @returns {taskQueueManager} - self for chaining\n         */\n        pulse : function pulse(){\n            if(this.badge){\n                this.badge.pulse(3);\n            }\n            return this;\n        },\n\n        /**\n         * Show the list component\n         * @event listshow - Emitted when the list is displayed\n         * @returns {taskQueueManager} - self for chaining\n         */\n        showList : function showList() {\n            if (this.list) {\n                this.list.show();\n                this.trigger('listshow');\n            }\n            return this;\n        },\n\n        /**\n         * Hide the list component\n         * @event listhide - Emitted when the list is hidden\n         * @returns {taskQueueManager} - self for chaining\n         */\n        hideList : function hideList() {\n            if (this.list) {\n                this.list.hide();\n                this.trigger('listhide');\n            }\n            return this;\n        },\n\n        /**\n         * Remove all finished element (completed or failed) from the list\n         * @returns {taskQueueManager}\n         */\n        removeAllFinished : function removeAllFinished(){\n\n            var self = this;\n\n            _(this.taskElements).filter(function(element){\n                return (element.getStatus() === 'completed' || element.getStatus() === 'failed');\n            }).forEach(function(element){\n                delete self.taskElements[element.getId()];\n                self.list.removeElement(element);\n                self.trigger('listchange');\n            });\n\n            this.trigger('listclearfinished');\n            return this;\n        },\n\n        /**\n         * Toggle the visibility of the clear all button according to the element status\n         * @returns {taskQueueManager}\n         */\n        selfUpdateClearButton : function selfUpdateClearButton(){\n            var $clearAllBox = this.getElement().find('.clear-box');\n            var finishedCount = _(this.taskElements).map(function(element){\n                return element.getStatus();\n            }).filter(function(status){\n                return (status === 'completed' || status === 'failed');\n            }).size();\n            if(finishedCount > 0){\n                //show button\n                hider.show($clearAllBox);\n            }else{\n                hider.hide($clearAllBox);\n            }\n            return this;\n        }\n    };\n\n    /**\n     * Builds the task queue manager\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskQueueManager} the component\n     *\n     * @event remove - Emitted when a list element is removed\n     * @event download - Emitted when a list element requests the file download associated to a completed task\n     * @event report - Emitted when a list element requests a task report to be displayed\n     * @event redirect - Emitted when a list element requests a redirection to the created resource\n     * @event listchange - Emitted when the list element list has been updated\n     * @event listclearfinished - Emitted when all the finished element from the list is removed\n     */\n    return function taskQueueManagerFactory(config, data) {\n\n        data = data || {};\n\n        /**\n         * The component\n         * @typedef {ui/component} taskQueueManager\n         */\n        return makeAbsorbable(component(taskQueue))\n            .setTemplate(managerTpl)\n            .on('destroy listhide', function(){\n                $(document).off('click.task-queue-manager');\n            })\n            .on('init', function() {\n                //initialize the task element collection\n                this.taskElements = {};\n\n                //create the list\n                this.list = makeAlignable(taskListFactory())\n                    .init({\n                        title : __('Background tasks'),\n                        emptyText : __('There is currently no background task'),\n                    });\n            })\n            .on('listshow', function(){\n                var self = this;\n                var $component = this.getElement();\n                //close the popup when clicking outside of the component\n                $(document).off('click.task-queue-manager').on('click.task-queue-manager', function(e){\n                    if($component.get(0) !== e.target && !$.contains($component.get(0), e.target)){\n                        if(!self.list.is('hidden')){\n                            self.hideList();\n                        }\n                    }\n                });\n            })\n            .on('listchange', function(){\n                this.selfUpdateBadge();\n                this.selfUpdateClearButton();\n            })\n            .on('render', function() {\n\n                var self = this;\n                var $trigger = this.getElement();\n\n                //position the list\n                this.list.render($trigger)\n                    .moveBy(0, 0)\n                    .alignWith($trigger, _alignementConfig.initial)\n                    .hide();//start hidden\n\n                //load initial data\n                this.loadData(data);\n\n                //prevent closing the panel when clicking on it\n                this.list.getElement()\n                    .addClass('overflown-element')\n                    .on('click', function(e){\n                        e.stopPropagation();\n                    });\n\n                this.list.on('clearall', function(){\n                    self.removeAllFinished();\n                });\n\n                //toggle list visibility\n                $trigger.on('click', function(){\n                    if(self.list.is('hidden')){\n                        self.showList();\n                    }else{\n                        self.hideList();\n                    }\n                });\n\n            })\n            .init(config || {});\n    };\n\n});\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('context')) :\n    typeof define === 'function' && define.amd ? define('util/url',['lodash', 'context'], factory) :\n    (global = global || self, global['util/url'] = factory(global._, global.context));\n}(this, function (_, context) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    context = context && context.hasOwnProperty('default') ? context['default'] : context;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var parsers = {\n        absolute: /^(?:[a-z]+:)?\\/\\//i,\n        base64: /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/,\n        query: /(?:^|&)([^&=]*)=?([^&]*)/g,\n        url: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    };\n\n    /**\n     * The Url util\n     * @exports util/url\n     */\n    var urlUtil = {\n        /*\n         * The parse method is a adaptation of parseUri from\n         * Steven Levithan <stevenlevithan.com> under the MIT License\n         */\n\n        /**\n         * Parse the given URL and create an object with each URL chunks.\n         *\n         * BE CAREFUL! This util is different from UrlParser.\n         * This one works only from the given string, when UrlParser work from window.location.\n         * It means UrlParser will resolve the host of a relative URL using the host of the current window.\n         *\n         * @param {String} url - the URL to parse\n         * @returns {Object} parsedUrl with the properties available in key below and query that contains query string key/values.\n         */\n        parse: function parse(url) {\n            var matches;\n            var keys = [\n                'source',\n                'protocol',\n                'authority',\n                'userInfo',\n                'user',\n                'password',\n                'host',\n                'port',\n                'relative',\n                'path',\n                'directory',\n                'file',\n                'queryString',\n                'hash'\n            ];\n            var i = keys.length;\n            var parsed = Object.create({\n                toString: function() {\n                    return this.source;\n                }\n            });\n\n            parsed.base64 = parsers.base64.test(url);\n\n            if (parsed.base64) {\n                parsed.source = url;\n            } else {\n                matches = parsers.url.exec(url);\n                while (i--) {\n                    parsed[keys[i]] = matches[i] || '';\n                }\n                parsed.query = {};\n                parsed.queryString.replace(parsers.query, function($0, $1, $2) {\n                    if ($1) {\n                        parsed.query[$1] = $2;\n                    }\n                });\n            }\n            return parsed;\n        },\n\n        /**\n         * Check whether an URL is absolute\n         * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n         * @returns {Boolean|undefined} true if the url is absolute, or undefined if the URL cannot be checked\n         */\n        isAbsolute: function isAbsolute(url) {\n            //url from parse\n            if (typeof url === 'object' && url.hasOwnProperty('source')) {\n                return url.source !== url.relative;\n            }\n            if (typeof url === 'string') {\n                return parsers.absolute.test(url);\n            }\n        },\n\n        /**\n         * Check whether an URL is relative\n         * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n         * @returns {Boolean|undefined} true if the url is relative, or undefined if the URL cannot be checked\n         */\n        isRelative: function isRelative(url) {\n            var absolute = this.isAbsolute(url);\n            if (typeof absolute === 'boolean') {\n                return !absolute;\n            }\n        },\n\n        /**\n         * Check whether an URL is encoded in base64\n         * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n         * @returns {Boolean|undefined} true if the url is base64, or undefined if the URL cannot be checked\n         */\n        isBase64: function isBase64(url) {\n            if (typeof url === 'object' && url.hasOwnProperty('source')) {\n                return url.base64;\n            }\n            if (typeof url === 'string') {\n                return parsers.base64.test(url);\n            }\n        },\n\n        /**\n         * Determine whether encoding is required to match XML standards for attributes\n         * @param {String} url\n         * @returns {String}\n         */\n        encodeAsXmlAttr: function encodeAsXmlAttr(uri) {\n            return /[<>&']+/.test(uri) ? encodeURIComponent(uri) : uri;\n        },\n\n        /**\n         * Build a URL.\n         * It does not take case about baseURL.\n         *\n         * @param {String|Array} path - the URL path. Clean concat if an array (no dupe slashes)\n         * @param {Object} [params] - params to add to the URL\n         * @returns {String} the URL\n         */\n        build: function build(path, params) {\n            var url,\n                queryString = '',\n                hasQueryString;\n\n            if (path) {\n                if (_.isString(path)) {\n                    url = path;\n                }\n                if (_.isArray(path)) {\n                    url = '';\n                    _.forEach(path, function(chunk) {\n                        if (/\\/$/.test(url) && /^\\//.test(chunk)) {\n                            url += chunk.substr(1);\n                        } else if (url !== '' && !/\\/$/.test(url) && !/^\\//.test(chunk)) {\n                            url += '/' + chunk;\n                        } else {\n                            url += chunk;\n                        }\n                    });\n                }\n                if (_.isPlainObject(params)) {\n                    hasQueryString = url.indexOf('?') > -1;\n                    queryString = _.reduce(\n                        params,\n                        function(acc, value, key) {\n                            if (!_.isEmpty(acc) || hasQueryString) {\n                                acc += '&';\n                            }\n                            if (typeof value === 'object' && !_.isArray(value)) {\n                                _.forOwn(value, function(parameterValue, parameterName) {\n                                    acc +=\n                                        encodeURIComponent(key) +\n                                        '[' +\n                                        encodeURIComponent(parameterName) +\n                                        ']=' +\n                                        encodeURIComponent(parameterValue) +\n                                        '&';\n                                });\n                            } else {\n                                acc += encodeURIComponent(key) + '=' + encodeURIComponent(value);\n                            }\n                            return acc;\n                        },\n                        queryString\n                    );\n                    if (!_.isEmpty(queryString)) {\n                        if (!hasQueryString) {\n                            url += '?';\n                        }\n                        url += queryString;\n                    }\n                }\n            }\n\n            return url;\n        },\n\n        /**\n         * Get the URL from a TAO controller route\n         * @param {String} action - The controller's action\n         * @param {String} controller - The controller's name\n         * @param {String} extension - The controller's extension\n         * @param {String} [rootUrl] - to change the root url, otherwise taken from context\n         * @param {Object} [params] - params to add to the URL\n         * @returns {String} the url\n         *\n         * @throws {TypeError} if one of the required parameter is missing or empty\n         */\n        route: function route(action, controller, extension, params, rootUrl) {\n            var routeParts = [extension, controller, action];\n\n            if (\n                _.some(routeParts, function(value) {\n                    return _.isEmpty(value) || !_.isString(value);\n                })\n            ) {\n                throw new TypeError('All parts are required to build an URL');\n            }\n\n            rootUrl = rootUrl || (context && context['root_url']);\n\n            return this.build([rootUrl].concat(routeParts), params);\n        }\n    };\n\n    return urlUtil;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('core/eventifier')) :\n    typeof define === 'function' && define.amd ? define('core/polling',['lodash', 'core/promise', 'core/eventifier'], factory) :\n    (global = global || self, global['core/polling'] = factory(global._, global['core/promise'], global['core/eventifier']));\n}(this, function (_, Promise, eventifier) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The default value of the polling interval\n     * @type {Number}\n     * @private\n     */\n    var _defaultInterval = 60 * 1000;\n\n    /**\n     * Create a polling manager for a particular action\n     * @param {Object|Function} [config] - A config object, or the action called on each iteration\n     * @param {Function} [config.action] - The callback action called on each iteration, the polling instance is provided as first argument\n     * @param {Number|String} [config.interval] - The minimal time between two iterations\n     * @param {Number|String} [config.max] - Set a max number of iterations, after what the polling is stopped.\n     * @param {Boolean} [config.autoStart] - Whether or not the polling should start immediately\n     * @param {Object} [config.context] - An optional context to apply on each action call\n     * @returns {polling}\n     */\n    var pollingFactory = function pollingFactory(config) {\n        var timer, promise, interval, max, iter, action, context, autoStart;\n        var state = {};\n\n        /**\n         * Fires a new timer\n         */\n        var startTimer = function startTimer() {\n            timer = setTimeout(iteration, interval);\n            state.stopped = false;\n            state.pending = true;\n        };\n\n        /**\n         * Stops the current timer\n         */\n        var stopTimer = function stopTimer() {\n            clearTimeout(timer);\n            timer = null;\n            state.stopped = true;\n            state.pending = false;\n        };\n\n        /**\n         * Runs an iteration of the polling loop\n         */\n        var iteration = function iteration() {\n            // prevent more iterations than needed to be ran\n            if (max && iter >= max) {\n                // breaks the polling\n                polling.stop();\n                return;\n            }\n\n            // count the iteration\n            iter = (iter || 0) + 1;\n            state.processing = true;\n            state.pending = false;\n\n            /**\n             * Notifies the action is about to be called\n             * @event polling#call\n             */\n            polling.trigger('call');\n\n            // process the action in the right context\n            action.call(context, polling);\n\n            // next iteration in synchronous mode\n            if (!promise && !state.stopped) {\n                state.processing = false;\n                startTimer();\n            }\n        };\n\n        /**\n         * Defines the polling manager\n         * @type {Object}\n         */\n        var polling = {\n            /**\n             * Gets the current action into asynchronous mode.\n             * The next iteration won't be executed until the resolve method has been called.\n             * However if the reject method is called, the polling is then stopped!\n             * @returns {Object} Returns a promise resolver that provides resolve() and reject() methods\n             */\n            async: function async() {\n                var resolver = {};\n\n                // create a promise and extract the control callbacks\n                promise = new Promise(function(resolve, reject) {\n                    resolver.resolve = resolve;\n                    resolver.reject = reject;\n                });\n\n                // directly install the pending actions\n                promise\n                    .then(function() {\n                        promise = null;\n                        state.processing = false;\n\n                        // next iteration only if allowed\n                        if (!state.stopped) {\n                            startTimer();\n                        }\n\n                        /**\n                         * Notifies the polling continues\n                         * @event polling#resolved\n                         */\n                        polling.trigger('resolved');\n                    })\n                    .catch(function() {\n                        promise = null;\n                        state.processing = false;\n\n                        // breaks the polling\n                        polling.stop();\n\n                        /**\n                         * Notifies the polling has been halted\n                         * @event polling#rejected\n                         */\n                        polling.trigger('rejected');\n                    });\n\n                /**\n                 * Notifies the current action is asynchronous\n                 * @event polling#async\n                 * @param {Object} resolver\n                 * @param {Function} resolver.resolve\n                 * @param {Function} resolver.reject\n                 */\n                polling.trigger('async', resolver);\n\n                return resolver;\n            },\n\n            /**\n             * Forces the next iteration to be executed now, unless it is already running.\n             * If the polling has been stopped, start it again.\n             * @returns {polling}\n             */\n            next: function next() {\n                var _next;\n\n                // reset the counter if the polling is stopped\n                if (state.stopped) {\n                    iter = 0;\n                }\n\n                // ensure the scheduling if off\n                stopTimer();\n\n                // prevent more iterations than needed to be ran\n                if (max && iter >= max) {\n                    return this;\n                }\n\n                // the next() method can be called either to force a next iteration or to start immediately the action\n                // so we need to ensure the schedule is not blocked\n                state.stopped = false;\n\n                if (!promise) {\n                    /**\n                     * Notifies the action\n                     * @event polling#next\n                     * @param {polling} polling\n                     */\n                    this.trigger('next');\n\n                    iteration();\n                } else {\n                    // as a promise is still pending, ensure a call to next() will be processed after\n                    _next = this.next.bind(this);\n                    promise.then(_next).catch(_next);\n                }\n                return this;\n            },\n\n            /**\n             * Starts the polling if it is not currently running\n             * @returns {polling}\n             */\n            start: function start() {\n                if (!timer) {\n                    iter = 0;\n                    startTimer();\n\n                    /**\n                     * Notifies the start\n                     * @event polling#start\n                     */\n                    this.trigger('start');\n                }\n                return this;\n            },\n\n            /**\n             * Stops the polling if it is currently running\n             * @returns {polling}\n             */\n            stop: function stop() {\n                stopTimer();\n\n                /**\n                 * Notifies the stop\n                 * @event polling#stop\n                 */\n                this.trigger('stop');\n\n                return this;\n            },\n\n            /**\n             * Sets the minimum time interval between two actions\n             * @param {Number|String} value\n             * @returns {polling}\n             */\n            setInterval: function setInterval(value) {\n                interval = Math.abs(parseInt(value, 10) || _defaultInterval);\n\n                /**\n                 * Notifies the interval change\n                 * @event polling#setinterval\n                 * @param {Number} interval\n                 */\n                this.trigger('setinterval', interval);\n\n                return this;\n            },\n\n            /**\n             * Gets the minimum time interval between two actions\n             * @returns {Number}\n             */\n            getInterval: function getInterval() {\n                return interval;\n            },\n\n            /**\n             * Sets the polling action\n             * @param {Function} fn\n             * @returns {polling}\n             */\n            setAction: function setAction(fn) {\n                action = fn;\n\n                /**\n                 * Notifies the action change\n                 * @event polling#setaction\n                 * @param {Function} action\n                 */\n                this.trigger('setaction', action);\n\n                return this;\n            },\n\n            /**\n             * Gets the polling action\n             * @returns {Function}\n             */\n            getAction: function getAction() {\n                return action;\n            },\n\n            /**\n             * Sets the context applied on each action call\n             * @param {Object} ctx\n             * @returns {polling}\n             */\n            setContext: function setContext(ctx) {\n                context = ctx || this;\n\n                /**\n                 * Notifies the context change\n                 * @event polling#setcontext\n                 * @param {Object} context\n                 */\n                this.trigger('setcontext', ctx);\n\n                return this;\n            },\n\n            /**\n             * Gets the context applied on each action call\n             * @returns {Object}\n             */\n            getContext: function getContext() {\n                return context;\n            },\n\n            /**\n             * Sets the max number of polling occurrences\n             * @param {Number} value\n             * @returns {polling}\n             */\n            setMax: function setMax(value) {\n                max = Math.abs(parseInt(value, 10) || 0);\n                return this;\n            },\n\n            /**\n             * Gets the max number of polling occurrences\n             * @returns {Number}\n             */\n            getMax: function getMax() {\n                return max;\n            },\n\n            /**\n             * Gets the number of ran iterations\n             * @returns {Number}\n             */\n            getIteration: function getIteration() {\n                return iter || 0;\n            },\n\n            /**\n             * Checks if the manager is in a particular state\n             * @param {String} stateName The name of the state to check. Possible values are:\n             * - stopped: the polling manager is stopped, and won't process action until restart\n             * - pending: the polling manager has scheduled an action an is waiting for it processing\n             * - processing: the polling manager is currently processing an action and wait for its completion\n             * @returns {Boolean}\n             */\n            is: function is(stateName) {\n                return !!state[stateName];\n            }\n        };\n\n        eventifier(polling);\n\n        // some defaults\n        interval = _defaultInterval;\n        context = polling;\n        action = null;\n        state.stopped = true;\n        autoStart = false;\n        iter = 0;\n\n        // maybe only the action is provided\n        if (_.isFunction(config)) {\n            polling.setAction(config);\n            config = null;\n        }\n\n        // loads the config\n        if (_.isObject(config)) {\n            polling.setAction(config.action);\n            polling.setInterval(config.interval || arguments[1]);\n            polling.setContext(config.context);\n            polling.setMax(config.max);\n            autoStart = !!config.autoStart;\n        }\n\n        if (autoStart) {\n            polling.start();\n        }\n\n        return polling;\n    };\n\n    return pollingFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('core/eventifier'), require('lib/uuid')) :\n    typeof define === 'function' && define.amd ? define('core/promiseQueue',['lodash', 'core/promise', 'core/eventifier', 'lib/uuid'], factory) :\n    (global = global || self, global['core/promiseQueue'] = factory(global._, global['core/promise'], global['core/eventifier'], global['lib/uuid']));\n}(this, function (_, Promise, eventifier, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 Open Assessment Technologies SA\n     */\n\n    /**\n     * Creates a new promise queue\n     * @returns {promiseQueue}\n     */\n    function promiseQueueFactory() {\n        //where we keep the pending promises\n        var queue = {};\n\n        var getId = function getId() {\n            var id = 'promise-' + uuid(6);\n            if (typeof queue[id] === 'undefined') {\n                return id;\n            }\n            return getId();\n        };\n\n        /**\n         * @typedef {promiseQueue}\n         */\n        return {\n            /**\n             * Just add another promise to the queue\n             * @param {Promise} promise\n             * @return {promiseQueue} chains\n             */\n            add: function add(promise) {\n                queue[getId()] = promise;\n                return this;\n            },\n\n            /**\n             * Get the queue values\n             * @returns {Promise[]} the array of promises in the queue\n             */\n            getValues: function getValues() {\n                return _.values(queue);\n            },\n\n            /**\n             * Empty the queue\n             * @return {promiseQueue} chains\n             */\n            clear: function clear() {\n                queue = {};\n                return this;\n            },\n\n            /**\n             * Run the given promise at the end of the queue,\n             * @param {Function} promiseFn - a function that returns a promise\n             * @returns {Promise}\n             */\n            serie: function serie(promiseFn) {\n                var id = getId();\n\n                //the actual queue to execute before running the given promise\n                var currentQueue = this.getValues();\n\n                //use an emitter to notify the promise fulfillment, internally.\n                var emitter = eventifier();\n\n                //add a waiting promise into the queue (for others who are calling the queue)\n                queue[id] = new Promise(function(resolve) {\n                    emitter.on('fulfilled', resolve);\n                });\n\n                //wait for the queue,\n                //then run the given promise\n                //and resolve the waiting promise (for others)\n                return Promise.all(currentQueue)\n                    .then(function() {\n                        if (_.isFunction(promiseFn)) {\n                            return promiseFn();\n                        }\n                    })\n                    .then(function(data) {\n                        emitter.trigger('fulfilled');\n                        delete queue[id];\n                        return data;\n                    })\n                    .catch(function(err) {\n                        queue = {};\n                        throw err;\n                    });\n            }\n        };\n    }\n\n    return promiseQueueFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('core/promiseQueue'), require('lib/uuid')) :\n    typeof define === 'function' && define.amd ? define('core/store/localstorage',['lodash', 'core/promise', 'core/promiseQueue', 'lib/uuid'], factory) :\n    (global = global || self, global['core/store/localstorage'] = factory(global._, global['core/promise'], global['core/promiseQueue'], global['lib/uuid']));\n}(this, function (_, Promise, promiseQueue, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Prefix all databases\n     * @type {String}\n     */\n    var prefix = 'tao-store-';\n\n    /**\n     * Alias to the Storage API\n     * @type {Storage}\n     */\n    var storage = window.localStorage;\n\n    /**\n     * The name of the store that contains the index of known stores.\n     * @type {String}\n     */\n    var knownStoresName = 'index';\n\n    /**\n     * The name of the store that contains the store id\n     * @type {String}\n     */\n    var idStoreName = 'id';\n\n    var writingQueue = promiseQueue();\n\n    /**\n     * Set an entry into a store\n     * @param {String} storeName - unprefixed store name\n     * @param {String} key - entry key\n     * @param {*} value - the value to set\n     * @returns {Promise<Boolean>}\n     */\n    var setEntry = function setEntry(storeName, key, value) {\n        return new Promise(function(resolve, reject){\n            try{\n                storage.setItem(prefix + storeName + '.' + key, JSON.stringify(value));\n                resolve(true);\n            } catch(ex){\n                reject(ex);\n            }\n        });\n    };\n\n    /**\n     * Get an entry from a store\n     * @param {String} storeName - unprefixed store name\n     * @param {String} key - entry key\n     * @returns {Promise<*>} resolves with the value\n     */\n    var getEntry = function getEntry(storeName, key) {\n        return new Promise(function(resolve, reject){\n            var value;\n            try{\n                value = storage.getItem(prefix + storeName + '.' + key);\n                if(value === null){\n                    resolve();\n                } else {\n                    resolve(JSON.parse(value));\n                }\n            } catch(ex){\n                reject(ex);\n            }\n        });\n    };\n\n    /**\n     * Gets access to the store that contains the index of known stores.\n     * @returns {Promise}\n     */\n    var getKnownStores = function getKnownStores() {\n        return getEntry(knownStoresName, 'stores');\n    };\n\n    /**\n     * Adds a store into the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise<Boolean>}\n     */\n    var registerStore = function registerStore(storeName) {\n        return getKnownStores()\n            .then(function(stores){\n                stores = stores || {};\n                stores[storeName] = {\n                    name : storeName,\n                    lastOpen : Date.now()\n                };\n                return setEntry(knownStoresName, 'stores', stores);\n            })\n        ;\n    };\n\n    /**\n     * Removes a store from the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise<Boolean>}\n     */\n    var unregisterStore = function unregisterStore(storeName) {\n        return getKnownStores()\n            .then(function(stores){\n                stores = stores || {};\n                delete stores[storeName];\n                return setEntry(knownStoresName, 'stores', stores);\n            })\n        ;\n    };\n\n    /**\n     * Open and access a store\n     * @param {String} storeName - the store name to open\n     * @returns {Object} the store backend\n     * @throws {TypeError} without a storeName\n     */\n    var localStorageBackend = function localStorageBackend(storeName){\n\n        var name;\n        var registered = false;\n\n        var openStore = function openStore(){\n            if(registered){\n                return Promise.resolve();\n            }\n            return registerStore(storeName)\n                    .then(function(){\n                        registered = true;\n                    });\n        };\n        if(_.isEmpty(storeName) || !_.isString(storeName)){\n            throw new TypeError('The store name is required');\n        }\n\n        //prefix all storage entries to avoid global keys confusion\n        name = prefix + storeName + '.';\n\n\n        /**\n         * The store\n         */\n        return {\n\n            /**\n             * Get an item with the given key\n             * @param {String} key\n             * @returns {Promise} with the result in resolve, undefined if nothing\n             */\n            getItem : function getItem(key){\n                return writingQueue.serie(function(){\n                    return openStore().then(function(){\n                        return getEntry(storeName, key);\n                    });\n                });\n            },\n\n            /**\n             * Set an item with the given key\n             * @param {String} key - the item key\n             * @param {*} value - the item value\n             * @returns {Promise} with true in resolve if added/updated\n             */\n            setItem :  function setItem(key, value){\n                return writingQueue.serie(function(){\n                    return openStore().then(function(){\n                        return setEntry(storeName, key, value);\n                    });\n                });\n            },\n\n            /**\n             * Remove an item with the given key\n             * @param {String} key - the item key\n             * @returns {Promise} with true in resolve if removed\n             */\n            removeItem : function removeItem(key){\n                return writingQueue.serie(function(){\n                    return openStore().then(function(){\n                        storage.removeItem(name + key);\n                        return true;\n                    });\n                });\n            },\n\n            /**\n             * Get all store items\n             * @returns {Promise<Object>} with a collection of items\n             */\n            getItems: function getItems() {\n                var keyPattern = new RegExp('^' + name);\n                return writingQueue.serie(function(){\n                    return openStore().then(function(){\n                        return  _(storage)\n                            .map(function(entry, index){\n                                return storage.key(index);\n                            })\n                            .filter(function(key){\n                                return keyPattern.test(key);\n                            })\n                            .reduce(function(acc, key){\n                                var value;\n                                var exposedKey = key.replace(name, '');\n                                try {\n                                    value = storage.getItem(key);\n                                    if(value !== null){\n                                        acc[exposedKey] = JSON.parse(value);\n                                    }\n                                }\n                                catch(ex){\n                                    acc[exposedKey] = null;\n                                }\n                                return acc;\n                            }, {});\n                    });\n                });\n            },\n\n            /**\n             * Clear the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            clear : function clear(){\n                var keyPattern = new RegExp('^' + name);\n                return writingQueue.serie(function(){\n                    return openStore().then(function(){\n                        _(storage)\n                            .map(function(entry, index){\n                                return storage.key(index);\n                            })\n                            .filter(function(key){\n                                return keyPattern.test(key);\n                            })\n                            .forEach(function(key){\n                                storage.removeItem(key);\n                            });\n                        return true;\n                    });\n                });\n            },\n\n            /**\n             * Delete the database related to the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            removeStore : function removeStore() {\n                return this.clear().then(function(){\n                    return unregisterStore(storeName);\n                });\n            }\n        };\n    };\n\n    /**\n     * Removes all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @returns {Promise} with true in resolve once cleaned\n     */\n    localStorageBackend.removeAll = function removeAll(validate) {\n        if (!_.isFunction(validate)) {\n            validate = null;\n        }\n        return getKnownStores().then(function(stores){\n            var removing = _(stores)\n                .filter(function(store, storeName){\n                    return validate ? validate(storeName, store) : true;\n                })\n                .map(function(store){\n                    if(store && store.name){\n                        return localStorageBackend(store.name).removeStore();\n                    }\n                    return Promise.resolve();\n                })\n                .value();\n\n            return Promise.all(removing);\n        });\n    };\n\n\n    /**\n     * Get all stores\n     * @param {Function} [validate] - An optional callback that validates the stores to retrieve\n     * @returns {Promise<String[]>} resolves with the list of stores\n     */\n    localStorageBackend.getAll = function getAll(validate) {\n        return getKnownStores().then(function(stores){\n            return _(stores)\n                .filter(function(store, storeName){\n                    return validate ? validate(storeName, store) : true;\n                })\n                .map(function(store){\n                    return store.name;\n                })\n                .value();\n        });\n    };\n\n    /**\n     * Get the identifier of the storage\n     * @returns {Promise} that resolves with the store identifier\n     */\n    localStorageBackend.getStoreIdentifier = function getStoreIdentifier(){\n        var idStore = localStorageBackend(idStoreName);\n\n        //we use the storeName also as the id\n        return idStore.getItem(idStoreName).then(function(id){\n            if(!_.isEmpty(id)){\n                return id;\n            }\n            id = uuid();\n\n            return idStore.setItem(idStoreName, id).then(function(){\n                return id;\n            });\n        });\n    };\n\n    return localStorageBackend;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('lib/store/idbstore'), require('lib/uuid')) :\n    typeof define === 'function' && define.amd ? define('core/store/indexeddb',['lodash', 'core/promise', 'lib/store/idbstore', 'lib/uuid'], factory) :\n    (global = global || self, global['core/store/indexeddb'] = factory(global._, global['core/promise'], global['lib/store/idbstore'], global['lib/uuid']));\n}(this, function (_, Promise, IDBStore, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    IDBStore = IDBStore && IDBStore.hasOwnProperty('default') ? IDBStore['default'] : IDBStore;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Prefix all databases\n     * @type {String}\n     */\n    var prefix = 'tao-store-';\n\n    /**\n     * Access to the index of known stores.\n     * This index is needed to maintain the list of stores created by TAO, in order to apply an auto clean up.\n     * @type {Promise}\n     */\n    var knownStores;\n\n    /**\n     * The name of the store that contains the index of known stores.\n     * @type {String}\n     */\n    var knownStoresName = 'index';\n\n    /**\n     * The name of the store that contains the store id\n     * @type {String}\n     */\n    var idStoreName = 'id';\n\n    /**\n     * Check if we're using the v2 of IndexedDB\n     * @type {Boolean}\n     */\n    var isIndexedDB2 = 'getAll' in IDBObjectStore.prototype;\n\n    /**\n     * Opens a store\n     * @returns {Promise} with store instance in resolve\n     */\n    var openStore = function openStore(storeName) {\n        return new Promise(function(resolve, reject) {\n            var store = new IDBStore({\n                dbVersion: 1,\n                storeName: storeName,\n                storePrefix: prefix,\n                keyPath: 'key',\n                autoIncrement: true,\n                onStoreReady: function onStoreReady() {\n                    // auto closes when the changed version reflects a DB deletion\n                    store.db.onversionchange = function onversionchange(e) {\n                        if (!e || !e.newVersion) {\n                            store.db.close();\n                        }\n                    };\n                    resolve(store);\n                },\n                onError: reject\n            });\n        });\n    };\n\n    /**\n     * Sets an entry into a particular store\n     * @param store\n     * @param key\n     * @param value\n     * @returns {Promise}\n     */\n    var setEntry = function setEntry(store, key, value) {\n        return new Promise(function(resolve, reject) {\n            var entry = {\n                key: key,\n                value: value\n            };\n            var success = function success(returnKey) {\n                resolve(returnKey === key);\n            };\n            store.put(entry, success, reject);\n        });\n    };\n\n    /**\n     * Gets an entry from a particular store\n     * @param store\n     * @param key\n     * @returns {Promise}\n     */\n    var getEntry = function getEntry(store, key) {\n        return new Promise(function(resolve, reject) {\n            var success = function success(entry) {\n                if (!entry || typeof entry.value === 'undefined') {\n                    return resolve(entry);\n                }\n\n                resolve(entry.value);\n            };\n            store.get(key, success, reject);\n        });\n    };\n\n    /**\n     * Get entries from a store\n     * @param store\n     * @returns {Promise<Object>} entries\n     */\n    var getEntries = function getEntries(store) {\n        return new Promise(function(resolve, reject) {\n            var success = function success(entries) {\n                if (!_.isArray(entries)) {\n                    return resolve({});\n                }\n\n                resolve(\n                    _.reduce(\n                        entries,\n                        function(acc, entry) {\n                            if (entry.key && entry.value) {\n                                acc[entry.key] = entry.value;\n                            }\n                            return acc;\n                        },\n                        {}\n                    )\n                );\n            };\n            store.getAll(success, reject);\n        });\n    };\n\n    /**\n     * Remove an entry from a particular store\n     * @param store\n     * @param key\n     * @param value\n     * @returns {Promise}\n     */\n    var removeEntry = function removeEntry(store, key) {\n        return new Promise(function(resolve, reject) {\n            var success = function success(result) {\n                resolve(result !== false);\n            };\n            store.remove(key, success, reject);\n        });\n    };\n\n    /**\n     * Gets access to the store that contains the index of known stores.\n     * @returns {Promise}\n     */\n    var getKnownStores = function getKnownStores() {\n        if (!knownStores) {\n            knownStores = openStore(knownStoresName);\n        }\n        return knownStores;\n    };\n\n    /**\n     * Adds a store into the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise}\n     */\n    var registerStore = function registerStore(storeName) {\n        return getKnownStores().then(function(store) {\n            return setEntry(store, storeName, {\n                name: storeName,\n                lastOpen: Date.now()\n            });\n        });\n    };\n\n    /**\n     * Removes a store from the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise}\n     */\n    var unregisterStore = function unregisterStore(storeName) {\n        return getKnownStores().then(function(store) {\n            return removeEntry(store, storeName);\n        });\n    };\n\n    /**\n     * Deletes a store, then removes it from the index of known stores.\n     * @param store\n     * @param storeName\n     * @returns {Promise}\n     */\n    var deleteStore = function deleteStore(store, storeName) {\n        return new Promise(function(resolve, reject) {\n            var success = function success() {\n                unregisterStore(storeName)\n                    .then(function() {\n                        resolve(true);\n                    })\n                    .catch(reject);\n            };\n            //with old implementation, deleting a store is\n            //either unsupported or buggy\n            if (isIndexedDB2) {\n                store.deleteDatabase(success, reject);\n            } else {\n                store.clear(success, reject);\n            }\n        });\n    };\n\n    /**\n     * Open and access a store\n     * @param {String} storeName - the store name to open\n     * @returns {Object} the store backend\n     * @throws {TypeError} without a storeName\n     */\n    var indexDbBackend = function indexDbBackend(storeName) {\n        //keep a ref of the running store\n        var innerStore;\n\n        /**\n         * Get the store\n         * @returns {Promise} with store instance in resolve\n         */\n        var getStore = function getStore() {\n            if (!innerStore) {\n                innerStore = openStore(storeName).then(function(store) {\n                    return registerStore(storeName).then(function() {\n                        return Promise.resolve(store);\n                    });\n                });\n            }\n            return innerStore;\n        };\n\n        //keep a ref to the promise actually writing\n        var writePromise;\n\n        /**\n         * Ensure write promises are executed in series\n         * @param {Function} getWritingPromise - the function that run the promise\n         * @returns {Promise} the original one\n         */\n        var ensureSerie = function ensureSerie(getWritingPromise) {\n            //first promise, keep the ref\n            if (!writePromise) {\n                writePromise = getWritingPromise();\n                return writePromise;\n            }\n\n            //create a wrapping promise\n            return new Promise(function(resolve, reject) {\n                //run the current request\n                var runWrite = function() {\n                    var p = getWritingPromise();\n                    writePromise = p; //and keep the ref\n                    p.then(resolve).catch(reject);\n                };\n\n                //wait the previous to resolve or fail and run the current one\n                writePromise.then(runWrite).catch(runWrite);\n            });\n        };\n\n        if (_.isEmpty(storeName) || !_.isString(storeName)) {\n            throw new TypeError('The store name is required');\n        }\n\n        /**\n         * The store\n         */\n        return {\n            /**\n             * Get an item with the given key\n             * @param {String} key\n             * @returns {Promise} with the result in resolve, undefined if nothing\n             */\n            getItem: function getItem(key) {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return getEntry(store, key);\n                    });\n                });\n            },\n\n            /**\n             * Set an item with the given key\n             * @param {String} key - the item key\n             * @param {*} value - the item value\n             * @returns {Promise} with true in resolve if added/updated\n             */\n            setItem: function setItem(key, value) {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return setEntry(store, key, value);\n                    });\n                });\n            },\n\n            /**\n             * Remove an item with the given key\n             * @param {String} key - the item key\n             * @returns {Promise} with true in resolve if removed\n             */\n            removeItem: function removeItem(key) {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return removeEntry(store, key);\n                    });\n                });\n            },\n\n            /**\n             * Get all store items\n             * @returns {Promise<Object>} with a collection of items\n             */\n            getItems: function getItems() {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return getEntries(store);\n                    });\n                });\n            },\n\n            /**\n             * Clear the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            clear: function clear() {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return new Promise(function(resolve, reject) {\n                            var success = function success() {\n                                resolve(true);\n                            };\n                            store.clear(success, reject);\n                        });\n                    });\n                });\n            },\n\n            /**\n             * Delete the database related to the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            removeStore: function removeStore() {\n                return ensureSerie(function getWritingPromise() {\n                    return getStore().then(function(store) {\n                        return deleteStore(store, storeName);\n                    });\n                });\n            }\n        };\n    };\n\n    /**\n     * Removes all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @param {Function} [backend] - An optional storage handler to use\n     * @returns {Promise} with true in resolve once cleaned\n     */\n    indexDbBackend.removeAll = function removeAll(validate) {\n        if (!_.isFunction(validate)) {\n            validate = null;\n        }\n        return getKnownStores().then(function(store) {\n            return new Promise(function(resolve, reject) {\n                function cleanUp(entries) {\n                    var all = [];\n                    _.forEach(entries, function(entry) {\n                        var storeName = entry && entry.key;\n                        if (storeName) {\n                            all.push(\n                                openStore(storeName).then(function(storeToRemove) {\n                                    if (!validate || validate(storeName, entry.value)) {\n                                        return deleteStore(storeToRemove, storeName);\n                                    }\n                                })\n                            );\n                        }\n                    });\n\n                    Promise.all(all)\n                        .then(resolve)\n                        .catch(reject);\n                }\n                store.getAll(cleanUp, reject);\n            });\n        });\n    };\n\n    /**\n     * Get all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @param {Function} [backend] - An optional storage handler to use\n     * @returns {Promise} with true in resolve once cleaned\n     */\n    indexDbBackend.getAll = function getAll(validate) {\n        if (!_.isFunction(validate)) {\n            validate = function valid() {\n                return true;\n            };\n        }\n        return getKnownStores().then(function(store) {\n            return new Promise(function(resolve, reject) {\n                store.getAll(function(entries) {\n                    var storeNames = _(entries)\n                        .filter(function(entry) {\n                            return entry && entry.key && validate(entry.key, entry.value);\n                        })\n                        .map(function(entry) {\n                            return entry.key;\n                        })\n                        .value();\n\n                    return resolve(storeNames);\n                }, reject);\n            });\n        });\n    };\n\n    /**\n     * Get the identifier of the storage\n     * @returns {Promise} that resolves with the store identifier\n     */\n    indexDbBackend.getStoreIdentifier = function getStoreIdentifier() {\n        return openStore(idStoreName).then(function(store) {\n            return getEntry(store, idStoreName).then(function(id) {\n                if (!_.isEmpty(id)) {\n                    return id;\n                }\n                id = uuid();\n\n                return setEntry(store, idStoreName, id).then(function() {\n                    return id;\n                });\n            });\n        });\n    };\n\n    return indexDbBackend;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('lib/uuid')) :\n    typeof define === 'function' && define.amd ? define('core/store/memory',['lodash', 'core/promise', 'lib/uuid'], factory) :\n    (global = global || self, global['core/store/memory'] = factory(global._, global['core/promise'], global['lib/uuid']));\n}(this, function (_, Promise, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * where data dwelves\n     */\n    var memoryStore = {};\n\n    /**\n     * The storage identifier\n     */\n    var idStore;\n\n    /**\n     * Open and access a store\n     * @param {String} storeName - the store name to open\n     * @returns {Object} the store backend\n     * @throws {TypeError} without a storeName\n     */\n    var memoryStorageBackend = function memoryStorageBackend(storeName) {\n        if (_.isEmpty(storeName) || !_.isString(storeName)) {\n            throw new TypeError('The store name is required');\n        }\n\n        memoryStore[storeName] = memoryStore[storeName] || {};\n\n        /**\n         * The store\n         */\n        return {\n            /**\n             * Get an item with the given key\n             * @param {String} key\n             * @returns {Promise} with the result in resolve, undfined if nothing\n             */\n            getItem: function getItem(key) {\n                if (!_.isPlainObject(memoryStore[storeName])) {\n                    return Promise.resolve();\n                }\n                return Promise.resolve(memoryStore[storeName][key]);\n            },\n\n            /**\n             * Set an item with the given key\n             * @param {String} key - the item key\n             * @param {*} value - the item value\n             * @returns {Promise} with true in resolve if added/updated\n             */\n            setItem: function setItem(key, value) {\n                if (!_.isPlainObject(memoryStore[storeName])) {\n                    memoryStore[storeName] = {};\n                }\n                memoryStore[storeName][key] = value;\n                return Promise.resolve(true);\n            },\n\n            /**\n             * Remove an item with the given key\n             * @param {String} key - the item key\n             * @returns {Promise} with true in resolve if removed\n             */\n            removeItem: function removeItem(key) {\n                memoryStore[storeName] = _.omit(memoryStore[storeName], key);\n                return Promise.resolve(typeof memoryStore[storeName][key] === 'undefined');\n            },\n\n            /**\n             * Get all store items\n             * @returns {Promise<Object>} with a collection of items\n             */\n            getItems: function getItems() {\n                return Promise.resolve(memoryStore[storeName]);\n            },\n\n            /**\n             * Clear the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            clear: function clear() {\n                memoryStore[storeName] = {};\n                return Promise.resolve(true);\n            },\n\n            /**\n             * Delete the database related to the current store\n             * @returns {Promise} with true in resolve once cleared\n             */\n            removeStore: function removeStore() {\n                memoryStore = _.omit(memoryStore, storeName);\n                return Promise.resolve(typeof memoryStore[storeName] === 'undefined');\n            }\n        };\n    };\n\n    /**\n     * Removes all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @returns {Promise} with true in resolve once cleaned\n     */\n    memoryStorageBackend.removeAll = function removeAll(validate) {\n        if (!_.isFunction(validate)) {\n            validate = null;\n        }\n        memoryStore = _.omit(memoryStore, function(store, storeName) {\n            return validate ? validate(storeName) : true;\n        });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * Get all stores\n     * @param {Function} [validate] - An optional callback that validates the stores to retrieve\n     * @returns {Promise<String[]>} resolves with the list of stores\n     */\n    memoryStorageBackend.getAll = function getAll(validate) {\n        var storeNames = [];\n        if (!_.isFunction(validate)) {\n            validate = null;\n        }\n        storeNames = _(memoryStore)\n            .map(function(store, storeName) {\n                return storeName;\n            })\n            .filter(function(storeName) {\n                return validate ? validate(storeName) : true;\n            })\n            .value();\n\n        return Promise.resolve(storeNames);\n    };\n\n    /**\n     * Get the identifier of the storage\n     * @returns {Promise} that resolves with the store identifier\n     */\n    memoryStorageBackend.getStoreIdentifier = function getStoreIdentifier() {\n        //we use the storeName also as the id\n        if (_.isEmpty(idStore)) {\n            idStore = uuid();\n        }\n        return Promise.resolve(idStore);\n    };\n\n    return memoryStorageBackend;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('moment'), require('module'), require('core/logger'), require('core/promise'), require('core/store/localstorage'), require('core/store/indexeddb'), require('core/store/memory')) :\n    typeof define === 'function' && define.amd ? define('core/store',['lodash', 'moment', 'module', 'core/logger', 'core/promise', 'core/store/localstorage', 'core/store/indexeddb', 'core/store/memory'], factory) :\n    (global = global || self, global['core/store'] = factory(global._, global.moment, global.module, global['core/logger'], global['core/promise'], global['core/store/localstorage'], global['core/store/indexeddb'], global['core/store/memory']));\n}(this, function (_, moment, module, loggerFactory, Promise, localStorageBackend, indexedDBBackend, memoryBackend) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    localStorageBackend = localStorageBackend && localStorageBackend.hasOwnProperty('default') ? localStorageBackend['default'] : localStorageBackend;\n    indexedDBBackend = indexedDBBackend && indexedDBBackend.hasOwnProperty('default') ? indexedDBBackend['default'] : indexedDBBackend;\n    memoryBackend = memoryBackend && memoryBackend.hasOwnProperty('default') ? memoryBackend['default'] : memoryBackend;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    var supportsIndexedDB = false;\n    var dectectionDone = false;\n    var quotaChecked = false;\n\n    /**\n     * The exported store module, can be used as a function to get one store\n     * or as an object to run methods on multiple stores.\n     *\n     * @type {Function|Object}\n     */\n    var store;\n\n    /**\n     * The list of required methods exposed by a store backend\n     * @type {String[]}\n     */\n    var backendApi = ['removeAll', 'getAll', 'getStoreIdentifier'];\n\n    /**\n     * The list of required methods exposed by a store implementation\n     * @type {String[]}\n     */\n    var storeApi = ['getItem', 'setItem', 'removeItem', 'getItems', 'clear', 'removeStore'];\n\n    /**\n     * Dedicated logger\n     */\n    var logger = loggerFactory('core/store');\n\n    /**\n     * Main config\n     */\n    var config = _.defaults(module.config() || {}, {\n        /**\n         * Percent of used space (ie. 80% used)\n         * to consider the browser as having low space\n         * @type {Number}\n         */\n        lowSpaceRatio: 80,\n\n        /**\n         * Default duration thresholds to invalidate stores\n         *\n         * @type {Object<String>} ISO 8601  duration\n         */\n        invalidation: {\n            //candidate for invalidation if we're going over quota\n            staled: 'P2W',\n\n            //candidate for upfront invalidation if estimates are low\n            oldster: 'P2M'\n        }\n    });\n\n    /**\n     * Detect IndexedDB support.\n     * Due to a bug in Firefox private mode, we need to try to open a database to be sure it's available.\n     * @returns {Promise} that resolve the result\n     */\n    var isIndexDBSupported = function isIndexDBSupported() {\n        if (dectectionDone) {\n            return Promise.resolve(supportsIndexedDB);\n        }\n        return new Promise(function(resolve) {\n            var test, indexedDB;\n            var done = function done(result) {\n                supportsIndexedDB = !!result;\n                dectectionDone = true;\n                return resolve(supportsIndexedDB);\n            };\n            try {\n                indexedDB =\n                    window.indexedDB ||\n                    window.webkitIndexedDB ||\n                    window.mozIndexedDB ||\n                    window.OIndexedDB ||\n                    window.msIndexedDB;\n                if (!indexedDB) {\n                    return done(false);\n                }\n\n                //we need to try to open a db, for example FF in private browsing will fail.\n                test = indexedDB.open('__feature_test', 1);\n                test.onsuccess = function() {\n                    if (test.result) {\n                        test.result.close();\n                        return done(true);\n                    }\n                };\n                //if we can't open a DB, we assume, we fallback\n                test.onerror = function(e) {\n                    e.preventDefault();\n                    done(false);\n                    return false;\n                };\n            } catch (err) {\n                //a sync err, we fallback\n                done(false);\n            }\n        });\n    };\n\n    /**\n     * Check storage estimates and invalidate old\n     * Estimates aren't widely supported,\n     * but that worth to try it (progressive enhancement)\n     */\n    var checkQuotas = function checkQuotas() {\n        if (!quotaChecked && 'storage' in window.navigator && window.navigator.storage.estimate) {\n            window.navigator.storage\n                .estimate()\n                .then(function(estimate) {\n                    var usedRatio = 0;\n                    if (_.isNumber(estimate.usage) && _.isNumber(estimate.quota) && estimate.quota > 0) {\n                        usedRatio = estimate.usage / estimate.quota;\n                        if (usedRatio > config.lowSpaceRatio) {\n                            logger.warn('The browser storage is getting low ' + usedRatio.toFixed(2) + '% used', estimate);\n                            logger.warn('We will attempt to clean oldster databases in persistent backends');\n                            store.cleanUpSpace(config.invalidation.oldster, [], localStorageBackend);\n                            if (isIndexDBSupported) {\n                                store.cleanUpSpace(config.invalidation.oldster, [], indexedDBBackend);\n                            }\n                        } else {\n                            logger.debug('Browser storage estimate : ' + usedRatio.toFixed(2) + '% used', estimate);\n                        }\n                    }\n                })\n                .catch(function(err) {\n                    logger.warn('Unable to retrieve quotas : ' + err.message);\n                });\n        }\n        quotaChecked = true;\n    };\n\n    /**\n     * Check the backend object complies with the API\n     * @param {Object} backend - the backend object to check\n     * @returns {Boolean} true if valid\n     */\n    var isBackendApiValid = function isBackendApiValid(backend) {\n        return _.all(backendApi, function methodExists(method) {\n            return _.isFunction(backend[method]);\n        });\n    };\n\n    /**\n     * Check the storage object complies with the Storage API\n     * @param {Storage} storage - the storage object to check\n     * @returns {Boolean} true if valid\n     */\n    var isStorageApiValid = function isStorageApiValid(storage) {\n        return _.all(storeApi, function methodExists(method) {\n            return _.isFunction(storage[method]);\n        });\n    };\n\n    /**\n     * Load the backend based either on the pre-selected and the current support\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the backend\n     */\n    var loadBackend = function loadBackend(preselectedBackend) {\n        return isIndexDBSupported().then(function() {\n            var backend = preselectedBackend || (supportsIndexedDB ? indexedDBBackend : localStorageBackend);\n            if (!_.isFunction(backend)) {\n                return Promise.reject(new TypeError('No backend, no storage!'));\n            }\n            if (!isBackendApiValid(backend)) {\n                return Promise.reject(new TypeError(\"This backend doesn't comply with the store backend API\"));\n            }\n\n            //attempt to check the quotas\n            if (backend !== memoryBackend) {\n                checkQuotas();\n            }\n\n            return backend;\n        });\n    };\n\n    /**\n     * Loads a store\n     *\n     * @param {String} storeName - the name of the store\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the Storage a Storage Like instance\n     */\n    store = function storeLoader(storeName, preselectedBackend) {\n        return loadBackend(preselectedBackend).then(function(backend) {\n            var storeInstance = backend(storeName);\n\n            if (!isStorageApiValid(storeInstance)) {\n                return Promise.reject(new TypeError(\"The store doesn't comply with the Storage interface\"));\n            }\n\n            return storeInstance;\n        });\n    };\n\n    /**\n     * The available backends,\n     * exposed.\n     */\n    store.backends = {\n        localStorage: localStorageBackend,\n        indexedDB: indexedDBBackend,\n        memory: memoryBackend\n    };\n\n    /**\n     * Removes all storage\n     * @param {validateStore} [validate] - An optional callback that validates the store to delete\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} with true in resolve once cleaned\n     */\n    store.removeAll = function removeAll(validate, preselectedBackend) {\n        return loadBackend(preselectedBackend).then(function(backend) {\n            /**\n             * @callback validateStore\n             * @param {String} storeName - the name of the store\n             * @param {Object} store - the store details\n             */\n            return backend.removeAll(validate);\n        });\n    };\n\n    /**\n     * Clean up storage meeting the invalidation conditions\n     * @param {Number|String} [since] - unix timestamp in ms or ISO duration, to compare with lastOpen\n     * @param {RegExp} [storeNamePattern] - applies only on store names that matches the pattern\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise<Boolean>}\n     */\n    store.cleanUpSpace = function cleanUpSpace(since, storeNamePattern, preselectedBackend) {\n        var tsThreshold;\n\n        /**\n         * Create the invalidation callback\n         * @type {validateStore}\n         */\n        var invalidate = function invalidate(storeName, storeEntry) {\n            if (!storeName || !storeEntry) {\n                return false;\n            }\n\n            //storeName matches ?\n            if (storeNamePattern instanceof RegExp && !storeNamePattern.test(storeName)) {\n                return false;\n            }\n            return _.isNumber(storeEntry.lastOpen) && _.isNumber(tsThreshold) && storeEntry.lastOpen <= tsThreshold;\n        };\n\n        if (_.isNumber(since) && since > 0) {\n            tsThreshold = since;\n        } else {\n            if (!_.isString(since)) {\n                since = config.invalidation.oldster;\n            }\n            tsThreshold = moment()\n                .subtract(moment.duration(since))\n                .valueOf();\n        }\n\n        logger.info('Trying to remove stores lastly opened before ' + tsThreshold + '(' + since + ')');\n\n        return store.removeAll(invalidate, preselectedBackend);\n    };\n\n    /**\n     * Get the name/key of all storages\n     * @param {validateStore} [validate] - An optional callback that validates the store\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise<String[]>} resolves with the names of the stores\n     */\n    store.getAll = function getAll(validate, preselectedBackend) {\n        return loadBackend(preselectedBackend).then(function(backend) {\n            return backend.getAll(validate);\n        });\n    };\n\n    /**\n     * Get the identifier of either the current (or the pre-selected store)\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the identifier\n     */\n    store.getIdentifier = function getIdentifier(preselectedBackend) {\n        return loadBackend(preselectedBackend).then(function(backend) {\n            return backend.getStoreIdentifier();\n        });\n    };\n\n    var store$1 = store;\n\n    return store$1;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/promise'), require('core/store')) :\n    typeof define === 'function' && define.amd ? define('core/tokenStore',['lodash', 'core/promise', 'core/store'], factory) :\n    (global = global || self, global['core/tokenStore'] = factory(global._, global['core/promise'], global['core/store']));\n}(this, function (_, Promise, store) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    store = store && store.hasOwnProperty('default') ? store['default'] : store;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 Open Assessment Technologies SA\n     */\n\n    /**\n     * The default number of tokens to store\n     */\n    var defaultConfig = {\n        maxSize: 6,\n        tokenTimeLimit: 1000 * 60 * 24\n    };\n\n    /**\n     * Create a token store\n     * @param {Object} [options]\n     * @param {Number} [options.maxSize = 6] - the store limit\n     * @param {Number} [options.tokenTimeLimit] - time in milliseconds each token remains valid for\n     * @returns {tokenStore}\n     */\n    function tokenStoreFactory(options) {\n        var config = _.defaults(options || {}, defaultConfig);\n\n        // In memory storage\n        // For security reasons, this is preferred over the indexeddb or localStorage implementations\n        var getStore = function getStore() {\n            return store('tokenStore.tokens', store.backends.memory);\n        };\n\n        /**\n         * @typedef tokenStore\n         */\n        return {\n            /**\n             * Get the oldest token from the queue\n             * Remove its store entry as well\n             *\n             * @returns {Promise<Object>} the token object\n             */\n            dequeue: function dequeue() {\n                var self = this;\n                return self.getIndex().then(function(latestIndex) {\n                    var key = _.first(latestIndex);\n                    if (!key) return Promise.resolve();\n\n                    return getStore()\n                        .then(function(storage) {\n                            return storage.getItem(key);\n                        })\n                        .then(function(token) {\n                            return self.remove(key).then(function() {\n                                return token;\n                            });\n                        });\n                });\n            },\n\n            /**\n             * Add a new token object to the queue\n             * Add an entry to the store as well\n             *\n             * @param {Object} token - the token object\n             * @param {String} token.value - long alphanumeric string\n             * @param {Number} token.receivedAt - timestamp\n             * @returns {Promise<Boolean>} - true if added\n             */\n            enqueue: function enqueue(token) {\n                var self = this;\n                // Handle legacy param type:\n                if (_.isString(token)) {\n                    token = {\n                        value: token,\n                        receivedAt: Date.now()\n                    };\n                }\n                return getStore()\n                    .then(function(storage) {\n                        return storage.setItem(token.value, token);\n                    })\n                    .then(function(updated) {\n                        if (updated) {\n                            return self.enforceMaxSize().then(function() {\n                                return true;\n                            });\n                        }\n                        return false;\n                    });\n            },\n\n            /**\n             * Generate a new (chronologically-sorted) index from the store contents\n             * (because it would not be unique if stored in the module)\n             *\n             * @returns {Promise<Array>}\n             */\n            getIndex: function getIndex() {\n                return this.getTokens().then(function(tokens) {\n                    return _.chain(tokens)\n                        .values()\n                        .sort(function(t1, t2) {\n                            return t1.receivedAt - t2.receivedAt;\n                        })\n                        .map('value')\n                        .value();\n                });\n            },\n\n            /**\n             * Check whether the given token is in the store\n             *\n             * @param {String} key - token string\n             * @returns {Boolean}\n             */\n            has: function has(key) {\n                return this.getIndex().then(function(latestIndex) {\n                    return _.contains(latestIndex, key);\n                });\n            },\n\n            /**\n             * Remove the token from the queue and the store\n             *\n             * @param {String} key - token string\n             * @returns {Promise<Boolean>} resolves once removed\n             */\n            remove: function remove(key) {\n                return this.has(key).then(function(result) {\n                    if (result) {\n                        return getStore().then(function(storage) {\n                            return storage.removeItem(key);\n                        });\n                    }\n                    return false;\n                });\n            },\n\n            /**\n             * Empty the queue and store\n             * @returns {Promise}\n             */\n            clear: function clear() {\n                return getStore().then(function(storage) {\n                    return storage.clear();\n                });\n            },\n\n            /**\n             * Gets all tokens in the store\n             * @returns {Promise<Array>} - token objects\n             */\n            getTokens: function getTokens() {\n                return getStore().then(function(storage) {\n                    return storage.getItems();\n                });\n            },\n\n            /**\n             * Gets the current size of the store\n             * @returns {Promise<Integer>}\n             */\n            getSize: function getSize() {\n                return this.getIndex().then(function(latestIndex) {\n                    return latestIndex.length;\n                });\n            },\n\n            /**\n             * Setter for maximum pool size\n             * @param {Integer} size\n             */\n            setMaxSize: function setMaxSize(size) {\n                var self = this;\n                if (_.isNumber(size) && size > 0 && size !== config.maxSize) {\n                    config.maxSize = size;\n                    self.enforceMaxSize();\n                }\n            },\n\n            /**\n             * Removes oldest tokens, if the pool is above its size limit\n             * (Could happen if maxSize is reduced during the life of the tokenStore)\n             * @returns {Promise} - resolves when done\n             */\n            enforceMaxSize: function enforceMaxSize() {\n                var self = this;\n                return this.getIndex().then(function(latestIndex) {\n                    var keysToRemove;\n                    var excess = latestIndex.length - config.maxSize;\n                    if (excess > 0) {\n                        keysToRemove = latestIndex.slice(0, excess);\n                        return Promise.all(\n                            _.map(keysToRemove, function(key) {\n                                return self.remove(key);\n                            })\n                        );\n                    }\n                    return true;\n                });\n            },\n\n            /**\n             * Checks one token and removes it from the store if expired\n             * @param {Object} token - the token object\n             * @returns {Promise<Boolean>}\n             */\n            checkExpiry: function checkExpiry(token) {\n                if (Date.now() - token.receivedAt > config.tokenTimeLimit) {\n                    return this.remove(token.value);\n                }\n                return true;\n            },\n\n            /**\n             * Checks all the tokens in the store to see if they expired\n             * @returns {Promise<Boolean>} - resolves to true\n             */\n            expireOldTokens: function expireOldTokens() {\n                var self = this;\n                return self.getTokens().then(function(tokens) {\n                    // Check each token's expiry, synchronously:\n                    return _.reduce(\n                        tokens,\n                        function(previousPromise, nextToken) {\n                            return previousPromise.then(function() {\n                                return self.checkExpiry(nextToken);\n                            });\n                        },\n                        Promise.resolve()\n                    ).then(function() {\n                        // All done\n                        return true;\n                    });\n                });\n            }\n        };\n    }\n\n    return tokenStoreFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('module'), require('core/tokenStore'), require('core/promise'), require('core/promiseQueue')) :\n    typeof define === 'function' && define.amd ? define('core/tokenHandler',['lodash', 'module', 'core/tokenStore', 'core/promise', 'core/promiseQueue'], factory) :\n    (global = global || self, global['core/tokenHandler'] = factory(global._, global.module, global['core/tokenStore'], global['core/promise'], global['core/promiseQueue']));\n}(this, function (_, module, tokenStoreFactory, Promise, promiseQueue) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    tokenStoreFactory = tokenStoreFactory && tokenStoreFactory.hasOwnProperty('default') ? tokenStoreFactory['default'] : tokenStoreFactory;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    var clientConfigFetched = false;\n\n    var defaults = {\n        maxSize: 6,\n        tokenTimeLimit: 1000 * 60 * 24\n    };\n\n    /**\n     * Stores the security token queue\n     * @param {Object} [options]\n     * @param {String} [options.maxSize]\n     * @param {String} [options.tokenTimeLimit]\n     * @param {String} [options.initialToken]\n     * @returns {tokenHandler}\n     */\n    function tokenHandlerFactory(options) {\n        var tokenStore;\n\n        // Convert legacy parameter:\n        if (_.isString(options)) {\n            options = {\n                initialToken: options\n            };\n        }\n        options = _.defaults({}, options, defaults);\n        // Initialise storage for tokens:\n        tokenStore = tokenStoreFactory(options);\n\n        return {\n            /**\n             * Gets the next security token from the token queue\n             * If none are available, it can check the ClientConfig (once only per page)\n             * Once the token is got, it is erased from the store (because they are single-use by design)\n             *\n             * @returns {Promise<String>} the token value\n             */\n            getToken: function getToken() {\n                var self = this;\n                var initialToken = options.initialToken;\n\n                var getFirstTokenValue = function getFirstTokenValue() {\n                    return tokenStore.dequeue().then(function(currentToken) {\n                        if (currentToken) {\n                            return currentToken.value;\n                        }\n                        return null;\n                    });\n                };\n\n                // If set, initialToken will be provided directly, without using store:\n                if (initialToken) {\n                    options.initialToken = null;\n                    return Promise.resolve(initialToken);\n                }\n\n                // Some async checks before we go for the token:\n                return tokenStore\n                    .expireOldTokens()\n                    .then(function() {\n                        return tokenStore.getSize();\n                    })\n                    .then(function(queueSize) {\n                        if (queueSize > 0) {\n                            // Token available, use it\n                            return getFirstTokenValue();\n                        } else if (!clientConfigFetched) {\n                            // Client Config allowed! (first and only time)\n                            return self.getClientConfigTokens().then(getFirstTokenValue);\n                        } else {\n                            // No more token options, refresh needed\n                            return Promise.reject(new Error('No tokens available. Please refresh the page.'));\n                        }\n                    });\n            },\n\n            /**\n             * Adds a new security token to the token queue\n             * Internally, old tokens are deleted to keep queue within maximum pool size\n             * @param {String} newToken\n             * @returns {Promise<Boolean>} - resolves true if successful\n             */\n            setToken: function setToken(newToken) {\n                return tokenStore.enqueue(newToken);\n            },\n\n            /**\n             * Extracts tokens from the Client Config which should be received on every page load\n             * @returns {Promise<Boolean>} - resolves true when completed\n             */\n            getClientConfigTokens: function getClientConfigTokens() {\n                var self = this;\n                var clientTokens = _.map(module.config().tokens, function(serverToken) {\n                    return {\n                        value: serverToken,\n                        receivedAt: Date.now()\n                    };\n                });\n\n                // Record that this function ran:\n                clientConfigFetched = true;\n\n                return Promise.resolve(clientTokens).then(function(newTokens) {\n                    // Add the fetched tokens to the store\n                    // Uses a promiseQueue to ensure synchronous adding\n                    var setTokenQueue = promiseQueue();\n\n                    _.forEach(newTokens, function(token) {\n                        setTokenQueue.serie(function() {\n                            return self.setToken(token);\n                        });\n                    });\n\n                    return setTokenQueue.serie(function() {\n                        return true;\n                    });\n                });\n            },\n\n            /**\n             * Clears the token store\n             * @returns {Promise<Boolean>} - resolves to true when cleared\n             */\n            clearStore: function clearStore() {\n                return tokenStore.clear();\n            },\n\n            /**\n             * Getter for the current queue length\n             * @returns {Promise<Integer>}\n             */\n            getQueueLength: function getQueueLength() {\n                return tokenStore.getSize();\n            },\n\n            /**\n             * Setter for maximum pool size\n             * @param {Integer} size\n             */\n            setMaxSize: function setMaxSize(size) {\n                tokenStore.setMaxSize(size);\n            }\n        };\n    }\n\n    return tokenHandlerFactory;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery'), require('lodash'), require('i18n'), require('module'), require('context'), require('core/promise'), require('core/promiseQueue'), require('core/tokenHandler'), require('core/logger')) :\n    typeof define === 'function' && define.amd ? define('core/request',['jquery', 'lodash', 'i18n', 'module', 'context', 'core/promise', 'core/promiseQueue', 'core/tokenHandler', 'core/logger'], factory) :\n    (global = global || self, global['core/request'] = factory(global.$, global._, global.__, global.module, global.context, global['core/promise'], global['core/promiseQueue'], global['core/tokenHandler'], global['core/logger']));\n}(this, function ($, _, __, module, context, Promise, promiseQueue, tokenHandlerFactory, loggerFactory) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    context = context && context.hasOwnProperty('default') ? context['default'] : context;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n    tokenHandlerFactory = tokenHandlerFactory && tokenHandlerFactory.hasOwnProperty('default') ? tokenHandlerFactory['default'] : tokenHandlerFactory;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA;\n     */\n\n    var tokenHeaderName = 'X-CSRF-Token';\n\n    var tokenHandler = tokenHandlerFactory();\n\n    var queue = promiseQueue();\n\n    var logger = loggerFactory('core/request');\n\n    /**\n     * Create a new error based on the given response\n     * @param {Object} response - the server body response as plain object\n     * @param {String} fallbackMessage - the error message in case the response isn't correct\n     * @param {Number} httpCode - the response HTTP code\n     * @param {Boolean} httpSent - the sent status\n     * @returns {Error} the new error\n     */\n    var createError = function createError(response, fallbackMessage, httpCode, httpSent) {\n        var err;\n        if (response && response.errorCode) {\n            err = new Error(response.errorCode + ' : ' + (response.errorMsg || response.errorMessage || response.error));\n        } else {\n            err = new Error(fallbackMessage);\n        }\n        err.response = response;\n        err.sent = httpSent;\n\n        if (httpCode) {\n            err.code = httpCode;\n        }\n        return err;\n    };\n\n    /**\n     * Request content from a TAO endpoint\n     * @param {Object} options\n     * @param {String} options.url - the endpoint full url\n     * @param {String} [options.method='GET'] - the HTTP method\n     * @param {Object} [options.data] - additional parameters (if method is 'POST')\n     * @param {Object} [options.headers] - the HTTP headers\n     * @param {String} [options.contentType] - what kind of data we're sending - usually 'json'\n     * @param {String} [options.dataType] - what kind of data expected in response\n     * @param {Boolean} [options.noToken=false] - by default, a token is always sent. If noToken=true, disables the token requirement\n     * @param {Boolean} [options.background] - if true, the request should be done in the background, which in practice does not trigger the global handlers like ajaxStart or ajaxStop\n     * @param {Boolean} [options.sequential] - if true, the request must join a queue to be run sequentially\n     * @param {Number}  [options.timeout] - timeout in seconds for the AJAX request\n     * @returns {Promise} resolves with response, or reject if something went wrong\n     */\n    function request(options) {\n        // Allow external config to override user option\n        if (module.config().noToken) {\n            options.noToken = true;\n        }\n\n        if (_.isEmpty(options.url)) {\n            throw new TypeError('At least give a URL...');\n        }\n\n        /**\n         * Function wrapper which allows the contents to be run now, or added to a queue\n         * @returns {Promise} resolves with response, or rejects if something went wrong\n         */\n        function runRequest() {\n            /**\n             * Fetches a security token and appends it to headers, if required\n             * @returns {Promise<Object>} - resolves with headers object\n             */\n            var computeHeaders = function computeHeaders() {\n                var headers = _.extend({}, options.headers);\n                if (!options.noToken) {\n                    return tokenHandler.getToken().then(function(token) {\n                        headers[tokenHeaderName] = token || 'none';\n                        return headers;\n                    });\n                }\n                return Promise.resolve(headers);\n            };\n\n            /**\n             * Extracts returned security token from headers and adds it to store\n             * @param {Object} xhr\n             * @returns {Promise} - resolves when done\n             */\n            var setTokenFromXhr = function setTokenFromXhr(xhr) {\n                var token;\n\n                if (_.isFunction(xhr.getResponseHeader)) {\n                    token = xhr.getResponseHeader(tokenHeaderName);\n                    logger.debug('received %s header %s', tokenHeaderName, token);\n\n                    if (token) {\n                        return tokenHandler.setToken(token);\n                    }\n                }\n                return Promise.resolve();\n            };\n\n            return computeHeaders().then(function(customHeaders) {\n                return new Promise(function(resolve, reject) {\n                    var noop;\n                    $.ajax({\n                        url: options.url,\n                        method: options.method || 'GET',\n                        headers: customHeaders,\n                        data: options.data,\n                        contentType: options.contentType || noop,\n                        dataType: options.dataType || 'json',\n                        async: true,\n                        timeout: options.timeout * 1000 || context.timeout * 1000 || 0,\n                        beforeSend: function() {\n                            if (!_.isEmpty(customHeaders)) {\n                                logger.debug(\n                                    'sending %s header %s',\n                                    tokenHeaderName,\n                                    customHeaders && customHeaders[tokenHeaderName]\n                                );\n                            }\n                        },\n                        global: !options.background //TODO fix this with TT-260\n                    })\n                        .done(function(response, status, xhr) {\n                            setTokenFromXhr(xhr)\n                                .then(function() {\n                                    if (\n                                        xhr.status === 204 ||\n                                        (response && response.errorCode === 204) ||\n                                        status === 'nocontent'\n                                    ) {\n                                        // no content, so resolve with empty data.\n                                        return resolve();\n                                    }\n\n                                    // handle case where token expired or invalid\n                                    if (xhr.status === 403 || (response && response.errorCode === 403)) {\n                                        return reject(\n                                            createError(\n                                                response,\n                                                xhr.status + ' : ' + xhr.statusText,\n                                                xhr.status,\n                                                xhr.readyState > 0\n                                            )\n                                        );\n                                    }\n\n                                    if (response && response.success === true) {\n                                        // there's some data\n                                        return resolve(response);\n                                    }\n\n                                    //the server has handled the error\n                                    reject(\n                                        createError(\n                                            response,\n                                            __('The server has sent an empty response'),\n                                            xhr.status,\n                                            xhr.readyState > 0\n                                        )\n                                    );\n                                })\n                                .catch(function(error) {\n                                    logger.error(error);\n                                    reject(createError(response, error, xhr.status, xhr.readyState > 0));\n                                });\n                        })\n                        .fail(function(xhr, textStatus, errorThrown) {\n                            var response;\n                            try {\n                                response = JSON.parse(xhr.responseText);\n                            } catch (parseErr) {\n                                response = xhr.responseText;\n                            }\n\n                            response = _.defaults(response, {\n                                success: false,\n                                source: 'network',\n                                cause: options.url,\n                                purpose: 'proxy',\n                                context: this,\n                                code: xhr.status,\n                                sent: xhr.readyState > 0,\n                                type: 'error',\n                                message: errorThrown || __('An error occurred!')\n                            });\n\n                            setTokenFromXhr(xhr)\n                                .then(function() {\n                                    reject(\n                                        createError(\n                                            response,\n                                            xhr.status + ' : ' + xhr.statusText,\n                                            xhr.status,\n                                            xhr.readyState > 0\n                                        )\n                                    );\n                                })\n                                .catch(function(error) {\n                                    logger.error(error);\n                                    reject(createError(response, error, xhr.status, xhr.readyState > 0));\n                                });\n                        });\n                });\n            });\n        }\n\n        // Decide how to launch the request based on certain params:\n        return tokenHandler.getQueueLength().then(function(queueLength) {\n            if (options.noToken === true) {\n                // no token protection, run the request\n                return runRequest();\n            } else if (options.sequential || queueLength === 1) {\n                // limited tokens, sequential queue must be used\n                return queue.serie(runRequest);\n            } else {\n                // tokens ready\n                return runRequest();\n            }\n        });\n    }\n\n    return request;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('core/request')) :\n    typeof define === 'function' && define.amd ? define('core/dataProvider/request',['lodash', 'core/request'], factory) :\n    (global = global || self, global['core/dataProvider/request'] = factory(global._, global['core/request']));\n}(this, function (_, coreRequest) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    coreRequest = coreRequest && coreRequest.hasOwnProperty('default') ? coreRequest['default'] : coreRequest;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA;\n     */\n\n    /**\n     * A wrapper for the core module which requests content from a TAO endpoint\n     *\n     * @param {String} url - the endpoint full url\n     * @param {Object} [data] - additional parameters\n     * @param {String} [method='GET'] - the HTTP method\n     * @param {Object} [headers] - the HTTP header\n     * @param {Boolean} [background] - tells if the request should be done in the background, which in practice does not trigger the global handlers like ajaxStart or ajaxStop\n     * @param {Boolean} [noToken=true] - the default is a request with no token, set this to false to require a token\n     * @returns {Promise} that resolves with data or reject if something went wrong\n     */\n    function request(url, data, method, headers, background, noToken) {\n        return coreRequest({\n            url: url,\n            data: data,\n            method: method,\n            headers: headers,\n            background: background,\n            noToken: noToken === false ? false : true\n        }).then(function(response) {\n            if (!_.isUndefined(response)) {\n                if (response.success) {\n                    return response.data;\n                }\n                throw new Error(response.data);\n            }\n        });\n    }\n\n    return request;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('util/regexEscape',factory) :\n    (global = global || self, global['util/regexEscape'] = factory());\n}(this, function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * Escapes -\\/\\\\^$*+?.()|[\\]{} inside a string. Use when\n     * concatenating a string for usage in new RegExp().\n     *\n     * @author dieter <dieter@taotesting.com>\n     */\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    return regexEscape;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('util/regexEscape')) :\n    typeof define === 'function' && define.amd ? define('util/wrapLongWords',['util/regexEscape'], factory) :\n    (global = global || self, global['util/wrapLongWords'] = factory(global['util/regexEscape']));\n}(this, function (regexEscape) { 'use strict';\n\n    regexEscape = regexEscape && regexEscape.hasOwnProperty('default') ? regexEscape['default'] : regexEscape;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * Builds a chunked term from a too long one.\n     *\n     * Internet Explorer will not insert a line-break before a period or a colon (and possibly other characters),\n     * even when they're preceded by a space. To address this chunks starting with one of the problematic characters\n     * will have this removed and it will be appended to the previous chunk.\n     *\n     * @param longWord\n     * @param chunkExp\n     * @returns {string}\n     */\n    var getCutTerm = function getCutTerm(longWord, chunkExp) {\n        var cutTerms = longWord.match(chunkExp),\n            i = cutTerms.length,\n            oldFirst = '',\n            newFirst = '',\n            offenders = ['.', ':', ';'];\n\n        while (i--) {\n            newFirst = cutTerms[i].charAt(0);\n            if (offenders.indexOf(newFirst) > -1) {\n                cutTerms[i] = cutTerms[i].substr(1);\n            }\n            if (offenders.indexOf(oldFirst) > -1) {\n                cutTerms[i] = cutTerms[i] + oldFirst;\n            }\n            oldFirst = newFirst;\n        }\n        return cutTerms.join(' ');\n    };\n\n    /**\n     * Wrap very long strings after n characters\n     *\n     * @param str\n     * @param threshold number of characters to break after\n     * @returns {string}\n     */\n    function wrapLongWords(str, threshold) {\n        // add whitespaces to provoke line breaks before HTML tags\n        str = str.toString().replace(/([\\w])</g, '$1 <');\n\n        var chunkExp = new RegExp('.{1,' + threshold + '}', 'g'),\n            longWords = str.match(new RegExp('[\\\\S]{' + threshold + ',}', 'g')) || [],\n            i = longWords.length,\n            cut;\n\n        while (i--) {\n            cut = getCutTerm(longWords[i], chunkExp);\n            str = str.replace(new RegExp(regexEscape(longWords[i]), 'g'), cut);\n        }\n\n        return str;\n    }\n\n    return wrapLongWords;\n\n}));\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('util/encode',factory) :\n    (global = global || self, global['util/encode'] = factory());\n}(this, function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     *\n     * @author dieter <dieter@taotesting.com>\n     */\n\n    var _reQuot = /\"/g;\n    var _reApos = /'/g;\n\n    /**\n     * Encodes an HTML string to be safely displayed without code interpretation\n     *\n     * @param {String} html\n     * @returns {String}\n     */\n    var encodeHTML = function encodeHTML(html) {\n        // @see http://tinyurl.com/ko75kph\n        return document.createElement('a').appendChild(document.createTextNode(html)).parentNode.innerHTML;\n    };\n\n    /**\n     * Encodes an HTML string to be safely use inside an attribute\n     *\n     * @param {String} html\n     * @returns {String}\n     */\n    var encodeAttribute = function encodeAttribute(html) {\n        // use replaces chain instead of unified replace with map for performances reasons\n        // @see http://jsperf.com/htmlencoderegex/68\n        return encodeHTML(html)\n            .replace(_reQuot, '&quot;')\n            .replace(_reApos, '&apos;');\n    };\n\n    /**\n     * Encodes a Unicode string to Base64.\n     * Borrowed from MDN: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n     * @param {String} str\n     * @returns {String}\n     */\n    function encodeBase64(str) {\n        // first we use encodeURIComponent to get percent-encoded UTF-8,\n        // then we convert the percent encodings into raw bytes which\n        // can be fed into btoa.\n        return btoa(\n            encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\n                return String.fromCharCode('0x' + p1);\n            })\n        );\n    }\n\n    /**\n     * Decodes a Base64 string to Unicode string.\n     * Borrowed from MDN: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n     * @param {String} str\n     * @returns {String}\n     */\n    function decodeBase64(str) {\n        // Going backwards: from bytestream, to percent-encoding, to original string.\n        return decodeURIComponent(\n            Array.prototype.map\n                .call(atob(str), function(c) {\n                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n                })\n                .join('')\n        );\n    }\n\n    var encode = {\n        html: encodeHTML,\n        attribute: encodeAttribute,\n        encodeBase64: encodeBase64,\n        decodeBase64: decodeBase64\n    };\n\n    return encode;\n\n}));\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Sam <sam@taotesting.com>\n */\ndefine('taoTaskQueue/controller/main',[\n    'jquery',\n    'taoTaskQueue/component/manager/manager',\n    'ui/taskQueue/taskQueue'\n],\nfunction ($, taskQueueManagerFactory, taskQueue) {\n    'use strict';\n\n    /**\n     * This controller initialize all the task queue component globally for tao backoffice use\n     * @exports taoTaskQueue/controller/main\n     */\n    return {\n        start() {\n\n            var taskManager = taskQueueManagerFactory({\n                replace: true\n            })\n            .on('remove', taskId => taskQueue.archive(taskId) )\n            .on('report', taskId => {\n                //show report in popup\n                taskQueue.get(taskId).then( task => taskManager.showDetail(task) );\n            })\n            .on('download', taskId => taskQueue.download(taskId) )\n            .on('redirect', taskId => taskQueue.redirect(taskId) )\n            .on('listclearfinished', () => {\n                taskQueue\n                    .pollAllStop()\n                    .archive('all')\n                    .then( () => taskQueue.pollAll() );\n            })\n            .render($('#taskqueue').parent())\n            .hide();//start hidden to prevent blinking effect\n\n            //listen to events started by the task queue model\n            taskQueue\n                .on('taskcreated', data => {\n                    if(taskManager.list.is('hidden')){\n                        taskManager.absorbBurst(data.sourceDom, [0, 300, 600]).then( () => {\n                            taskManager.addNewTask(data.task);\n                            taskQueue.pollAll();\n                        });\n                    }else{\n                        taskManager.addNewTask(data.task, true);\n                        taskQueue.pollAll();\n                    }\n                })\n                .on('multitaskstatuschange', () =>  taskManager.pulse() )\n                .on('pollAll', tasks => {\n                    if (taskManager.is('hidden')) {\n                        taskManager.show();\n                    }\n                    taskManager.loadData(tasks);\n                })\n                .pollAll(true);//start polling immediately on load\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoTaskQueue/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'taoTaskQueue/controller/main'\n            }\n        }\n    };\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('div.task-element{position:relative;background:#f3f1ef;padding:10px 20px;width:100%;height:70px;-webkit-transition:background, 2s, ease-out, 0s;-moz-transition:background, 2s, ease-out, 0s;-ms-transition:background, 2s, ease-out, 0s;-o-transition:background, 2s, ease-out, 0s;transition:background, 2s, ease-out, 0s}div.task-element.highlight{background:white;-webkit-transition:background, 0s, ease-out, 0s;-moz-transition:background, 0s, ease-out, 0s;-ms-transition:background, 0s, ease-out, 0s;-o-transition:background, 0s, ease-out, 0s;transition:background, 0s, ease-out, 0s}div.task-element .container-icon{position:absolute}div.task-element .container-icon .shape{display:inline-block;border-radius:50%;width:40px;height:40px;top:2px;position:relative}div.task-element .container-icon .shape [class^=\\\"icon-\\\"],div.task-element .container-icon .shape [class*=\\\" icon-\\\"]{font-size:20px;font-size:2rem;position:relative;top:9px;left:12px;text-shadow:none}div.task-element .container-icon .shape .icon-export,div.task-element .container-icon .shape .icon-import,div.task-element .container-icon .shape .icon-connect{left:10px}div.task-element .container-icon .shape .icon-property-advanced,div.task-element .container-icon .shape .icon-result-ok,div.task-element .container-icon .shape .icon-result-nok{top:10px;left:10px}div.task-element.in_progress .container-icon .shape{background:#0e5d91}div.task-element.in_progress .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.in_progress .container-icon .shape [class*=\\\" icon-\\\"]{color:#e7eff4}div.task-element.in_progress .action-group.action-bottom [data-role=\\\"notify\\\"]{display:none}div.task-element.in_progress .action-group.action-top [data-role=\\\"remove\\\"]{display:none}div.task-element.completed .container-icon .shape{background:#0e914b}div.task-element.completed .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.completed .container-icon .shape [class*=\\\" icon-\\\"]{color:#e7f4ed}div.task-element.completed .action-group.action-bottom [data-role=\\\"download\\\"],div.task-element.completed .action-group.action-bottom [data-role=\\\"report\\\"],div.task-element.completed .action-group.action-bottom [data-role=\\\"redirect\\\"]{display:inline-block}div.task-element.failed .container-icon .shape{background:#ba122b}div.task-element.failed .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.failed .container-icon .shape [class*=\\\" icon-\\\"]{color:#f8e7ea}div.task-element.failed .action-group.action-bottom [data-role=\\\"download\\\"],div.task-element.failed .action-group.action-bottom [data-role=\\\"report\\\"],div.task-element.failed .action-group.action-bottom [data-role=\\\"redirect\\\"]{display:inline-block}div.task-element .container-text{padding-top:0px;margin-left:60px;width:240px}div.task-element .container-text .label{min-height:22px;max-height:38px;overflow:hidden;color:#222}div.task-element .container-text .time{color:#92918f;font-size:12px;font-size:1.2rem}div.task-element .action-group{position:absolute}div.task-element .action-group [class^=\\\"icon-\\\"],div.task-element .action-group [class*=\\\" icon-\\\"]{font-size:16px;font-size:1.6rem;background-color:transparent;width:20px;height:20px;display:inline-block;padding-left:4px;margin-left:5px;cursor:pointer}div.task-element .action-group [class^=\\\"icon-\\\"]:hover,div.task-element .action-group [class*=\\\" icon-\\\"]:hover{opacity:0.6}div.task-element .action-group.action-top{top:6px;right:14px}div.task-element .action-group.action-bottom{bottom:6px;right:12px}div.task-element .action-group.action-bottom [class^=\\\"icon-\\\"],div.task-element .action-group.action-bottom [class*=\\\" icon-\\\"]{display:none}\\n\\n/*# sourceMappingURL=element.css.map */div.task-detail-element{position:relative;padding:10px 20px;width:600px;min-height:250px;background:#f3f1ef}div.task-detail-element .detail-description .label{margin-right:4px;color:#222;font-weight:bold}div.task-detail-element .detail-description .time{margin-left:4px;color:#92918f;font-size:12px;font-size:1.2rem}div.task-detail-element .detail-body{max-height:500px;overflow-y:auto;padding:10px 0}div.task-detail-element .action-top{position:absolute;top:9px;right:14px}div.task-detail-element .action-top [class^=\\\"icon-\\\"],div.task-detail-element .action-top [class*=\\\" icon-\\\"]{font-size:16px;font-size:1.6rem;color:#222;background-color:transparent;width:20px;height:20px;display:inline-block;padding-left:4px;margin-left:5px;cursor:pointer}div.task-detail-element .action-top [class^=\\\"icon-\\\"]:hover,div.task-detail-element .action-top [class*=\\\" icon-\\\"]:hover{opacity:0.6}div.task-detail-element .no-detail{display:none}div.task-detail-element.noreport .no-detail{display:block;color:#92918f}\\n\\n/*# sourceMappingURL=report.css.map */div.task-listing{position:relative;cursor:default;padding-top:0px}div.task-listing div.box{position:relative;min-height:76px;min-width:360px;background:#f3f1ef;-webkit-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-moz-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-ms-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-o-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}div.task-listing div.box .description{padding:2px 20px;background:#dbd9d7;color:#222;font-weight:bold;border-bottom:solid 1px #ddd;min-height:8px}div.task-listing div.box .arrow{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg);border:1px #ddd solid;border-right:none;border-bottom:none;width:16px;height:16px;background:#dbd9d7;color:#222;position:absolute;right:14px;top:-9px}div.task-listing div.box ul.task-list{position:relative;top:0;left:0;right:0;opacity:1;padding:0 !important;border:none;max-height:460px;overflow:auto;background:#c2c1bf;position:relative}div.task-listing div.box ul.task-list li{position:relative;width:100%;max-height:100px;color:#222;background:#c2c1bf}div.task-listing div.box ul.task-list li:not(:last-child){border-bottom:solid 1px #dbd9d7}div.task-listing div.box ul.task-list li.inserting{max-height:0;-webkit-transition:max-height, .5s, ease-out, 0s;-moz-transition:max-height, .5s, ease-out, 0s;-ms-transition:max-height, .5s, ease-out, 0s;-o-transition:max-height, .5s, ease-out, 0s;transition:max-height, .5s, ease-out, 0s}div.task-listing div.box ul.task-list li.inserting .task-element{height:0px}div.task-listing div.box ul.task-list li.inserted{min-height:70px}div.task-listing div.box ul.task-list li .task-element{transform:scaleY(1);-webkit-transition:scaleY, .6s, ease-out, 0s;-moz-transition:scaleY, .6s, ease-out, 0s;-ms-transition:scaleY, .6s, ease-out, 0s;-o-transition:scaleY, .6s, ease-out, 0s;transition:scaleY, .6s, ease-out, 0s}div.task-listing div.box ul.task-list li .task-element.new-element{transform-origin:20% 0;transform:scaleY(0)}div.task-listing div.box .clear-box{text-align:center;border-top:solid 1px #ddd;background:#eceae8;padding:2px 0}div.task-listing div.box .clear-box .clear-all{text-decoration:none;color:#3e7da7}div.task-listing div.box .clear-box .clear-all:hover{text-decoration:underline;color:#0e5d91}div.task-listing div.box .empty-placeholder{width:100%;position:absolute;top:25px;padding:12px 20px;font-style:italic;color:#222}div.task-listing div.box .view-detail{display:none}div.task-listing.detail-view .box .task-list,div.task-listing.detail-view .box .clear-box{display:none}div.task-listing.detail-view .box .view-detail{display:block;position:relative}\\n\\n/*# sourceMappingURL=list.css.map */.task-manager-container{cursor:pointer;position:relative;width:40px;height:64px;background-color:transparent;padding:22px 8px 0px}.task-manager-container:hover{-webkit-transition:background-color 0.2s ease;-moz-transition:background-color 0.2s ease;-ms-transition:background-color 0.2s ease;-o-transition:background-color 0.2s ease;transition:background-color 0.2s ease;background-color:rgba(14,93,145,0.5);text-decoration:none}.dark-bar nav .settings-menu:hover ~ .persistent-menu .task-listing .box{box-shadow:none;border-color:#eee}.dark-bar nav .settings-menu:hover ~ .persistent-menu .task-listing .box .arrow{display:none}\\n\\n/*# sourceMappingURL=manager.css.map */');\n","\ndefine(\"taoTaskQueue/loader/taoTaskQueue.bundle\", function(){});\n"]}