{"version":3,"sources":["routes.js","../component/listing/tpl/element!tpl","../component/listing/css/element!css","../component/listing/element.js","../component/listing/tpl/report!tpl","../component/listing/css/report!css","../component/listing/report.js","../component/listing/tpl/list!tpl","../component/listing/tpl/elementWrapper!tpl","../component/listing/css/list!css","../component/listing/list.js","../component/manager/tpl/manager!tpl","../component/manager/css/manager!css","../component/manager/manager.js","../model/taskQueueModel.js","../model/taskQueue.js","main.js","../../../../../../../../../../../../onLayerEnd0.js"],"names":["define","Main","actions","index","hb","template","Handlebars","depth0","helpers","partials","data","this","compilerInfo","merge","stack1","helper","options","buffer","functionType","escapeExpression","helperMissing","status","call","hash","icon","taskLabel","time","__","$","_","moment","component","hider","elementTpl","_defaults","_allowedStatus","_categoryMap","import","export","delivery_comp","transfer","create","update","delete","_statusIcon","in_progress","completed","failed","getLabelString","getFormattedTime","from","elapsed","unix","parseInt","getTimeString","createdAt","createdAtElapsed","updatedAt","updatedAtElapsed","getIcon","isPlainObject","Error","category","taskElementApi","getId","id","getStatus","getData","$container","getElement","assign","find","removeAttr","addClass","html","setStatus","toggle","hasFile","trigger","highlight","delay","removeClass","self","indexOf","is","forEach","without","st","setState","config","initConfig","defaults","setTemplate","on","$component","click","init","reportFactory","reportElementApi","report","isArray","children","length","replace","render","title","emptyText","listElementFactory","listTpl","elementWrapperTpl","listApi","removeElement","listElement","destroy","remove","insertElement","$li","prepend","setDetail","detailElement","show","hideDetail","scrollToTop","get","scrollTo","animateInsertion","$listElement","parent","badgeFactory","makeAlignable","makeAbsorbable","makePulsable","reportElementFactory","taskListFactory","managerTpl","getBadgeDataFromStatus","tasksStatuses","running","numberOfTasksInProgress","numberOfTasksFailed","type","loading","value","numberOfTasksCompleted","getBadgeDataFromElements","elements","statusMap","created","stats","element","taskQueue","getTaskElements","taskElements","showDetail","taskData","list","reportElement","alignWith","hPos","hOrigin","vPos","vOrigin","hOffset","addNewTask","animate","taskId","selfUpdateBadge","badgeData","badge","loadData","tasksData","found","entry","push","pulse","$trigger","moveBy","hide","e","stopPropagation","Promise","eventifier","polling","request","hasSameState","task1","task2","url","archive","all","download","pollSingleIntervals","iteration","interval","pollAllIntervals","model","_cache","singlePollings","getPollSingleIntervals","cloneDeep","getPollAllIntervals","setEndpoints","urls","TypeError","then","resolve","reject","catch","err","getAll","limit","newCache","task","difference","keys","res","pollAll","immediate","loop","pollingIntervals","_updateInterval","pollingInstance","pollingInterval","shift","setInterval","globalPolling","start","action","done","async","taskDataArray","next","pollAllStop","stop","pollSingle","poll","finished","pollSingleStop","taskCreate","creationResult","result","extra","fileDownload","httpMethod","failCallback","urlHelper","taskQueueModelFactory","route","taskQueueManagerFactory","taskManager","absorbBurst","sourceDom","tasks","c","d","document","a","i","s","createElement","getElementsByTagName","cssText","createTextNode"],"mappings":"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","file":"routes.js","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoTaskQueue/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'taoTaskQueue/controller/main'\n            }\n        }\n    };\n});\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/element', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"task-element \";\n  if (helper = helpers.status) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.status); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <div class=\\\"container-icon\\\">\\n        <div class=\\\"shape\\\">\\n            <span class=\\\"\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"/>\\n        </div>\\n    </div>\\n    <div class=\\\"container-text\\\">\\n        <div class=\\\"label\\\">\";\n  if (helper = helpers.taskLabel) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.taskLabel); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"time\\\">\";\n  if (helper = helpers.time) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.time); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n    </div>\\n    <div class=\\\"action-group action-top\\\">\\n        <span data-role=\\\"remove\\\" class=\\\"icon-result-nok\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"remove\", options) : helperMissing.call(depth0, \"__\", \"remove\", options)))\n    + \"\\\"/>\\n    </div>\\n    <div class=\\\"action-group action-bottom\\\">\\n        <span data-role=\\\"notify\\\" class=\\\"icon-preview\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"notify me when done\", options) : helperMissing.call(depth0, \"__\", \"notify me when done\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"download\\\" class=\\\"icon-download\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"download\", options) : helperMissing.call(depth0, \"__\", \"download\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"report\\\" class=\\\"icon-document\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"see report\", options) : helperMissing.call(depth0, \"__\", \"see report\", options)))\n    + \"\\\"/>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/element',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/element',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/component',\n    'ui/hider',\n    'tpl!taoTaskQueue/component/listing/tpl/element',\n    'css!taoTaskQueue/component/listing/css/element'\n], function ($, _, __, moment, component, hider, elementTpl) {\n    'use strict';\n\n    var _defaults = {\n    };\n\n    var _allowedStatus = ['in_progress', 'failed', 'completed'];\n\n    var _categoryMap = {\n        import : 'import',\n        export : 'export',\n        delivery_comp : 'delivery',\n        transfer : 'connect',\n        create : 'magicwand',\n        update : 'edit',\n        delete : 'bin'\n    };\n\n    var _statusIcon = {\n        in_progress : 'property-advanced',\n        completed: 'result-ok',\n        failed: 'result-nok',\n    };\n\n    /**\n     * Get the task name to be displayed to the user\n     * @param {Object} data - the standard task object\n     * @returns {String}\n     */\n    var getLabelString = function getLabelString(data){\n        return data.taskLabel;\n    };\n\n    /**\n     * Get the formatted duration string\n     * @param {Number} from - the start time in unix timestamp\n     * @param {Number} elapsed - the duration in seconds\n     * @returns {Number}\n     */\n    var getFormattedTime = function getFormattedTime(from, elapsed){\n        return moment.unix(from).from(moment.unix(parseInt(from, 10)+parseInt(elapsed, 10)));\n    };\n\n    /**\n     * Get the formatted time string according to the current task data\n     * @param data - the standard task object\n     * @returns {String}\n     */\n    var getTimeString = function getTimeString(data){\n        switch(data.status){\n            case 'created':\n            case 'in_progress':\n                return __('Started %s', getFormattedTime(data.createdAt, data.createdAtElapsed));\n            case 'completed':\n                return __('Completed %s', getFormattedTime(data.updatedAt, data.updatedAtElapsed));\n            case 'failed':\n                return __('Failed %s', getFormattedTime(data.updatedAt, data.updatedAtElapsed));\n            default:\n                return '';\n        }\n    };\n\n    /**\n     * Get the appropriate icon according to the task data\n     * @param {Object} data - the standard task object\n     * @returns {string}\n     */\n    var getIcon = function getIcon(data){\n        var icon;\n        if(!_.isPlainObject(data)){\n            throw new Error('invalid data');\n        }\n        if(data.category && _categoryMap[data.category]){\n            icon = _categoryMap[data.category];\n        }else if(data.status && _statusIcon[data.status]){\n            icon = _statusIcon[data.status];\n        }else {\n            icon = _statusIcon.in_progress;\n        }\n        return 'icon-'+icon;\n    };\n\n    var taskElementApi = {\n\n        /**\n         * Get the id of the task element\n         * @returns {String}\n         */\n        getId : function getId(){\n            if(this.data && this.data.id){\n                return this.data.id;\n            }\n        },\n\n        /**\n         * Get the status of the task element\n         * @returns {String}\n         */\n        getStatus : function getStatus(){\n            if(this.data && this.data.status){\n                return this.data.status;\n            }\n        },\n\n        /**\n         * Get the data of the task element\n         * @returns {Object}\n         */\n        getData : function getData(){\n            return this.data;\n        },\n\n        /**\n         * Update the data and rendering of it\n         * @param data\n         * @returns {taskElement}\n         */\n        update : function update(data){\n            var $container = this.getElement();\n\n            _.assign(this.data || {}, data);\n\n            $container.find('.shape > span').removeAttr('class').addClass(getIcon(this.data));\n            $container.find('.label').html(getLabelString(this.data));\n            $container.find('.time').html(getTimeString(this.data));\n\n            this.setStatus(this.data.status);\n            //bonus: check if there is any report and display the report button only when needed\n\n            hider.toggle($container.find('.action-bottom [data-role=\"download\"]'), this.data.hasFile);\n\n            this.trigger('update');\n            return this;\n        },\n\n        /**\n         * Add transition to highlight the element (useful after an update for instance)\n         * @returns {taskElement}\n         */\n        highlight : function highlight(){\n            var $container = this.getElement();\n            $container.addClass('highlight');\n            _.delay(function(){\n                $container.removeClass('highlight');\n            }, 500);\n            return this;\n        },\n\n        /**\n         * Set the status of the task element\n         * @param {String} status\n         * @returns {taskElement}\n         */\n        setStatus : function setStatus(status){\n            var self = this;\n            if(!status){\n                throw new Error('status should not be empty');\n            }\n\n            if(['created'].indexOf(status) !== -1){\n                status = 'in_progress';\n            }\n\n            if(_allowedStatus.indexOf(status) === -1){\n                throw new Error('unknown status '+status);\n            }\n            if(!this.is(status)){\n                _.forEach(_.without(_allowedStatus, status), function(st){\n                    self.setState(st, false);\n                });\n                this.setState(status, true);\n            }\n            return this;\n        }\n    };\n\n    /**\n     * Builds a task listing element\n     *\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskElement} the component\n     *\n     * @event remove - Emitted when the element requests to be removed\n     * @event download - Emitted when the element requests downloading its associated file\n     * @event report - Emitted when a list element requests its related report to be displayed\n     * @event update - Emitted when the display update is done\n     */\n    return function taskElementFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskElement\n         */\n        return component(taskElementApi)\n            .setTemplate(elementTpl)\n            .on('init', function(){\n                this.data = data || {};\n            })\n            .on('render', function() {\n\n                var self = this;\n                var $component = this.getElement();\n\n                this.update(data);\n\n                $component.find('[data-role=\"download\"]').click(function(){\n                    self.trigger('download');\n                });\n                $component.find('[data-role=\"remove\"]').click(function(){\n                    self.trigger('remove');\n                });\n                $component.find('[data-role=\"report\"]').click(function(){\n                    self.trigger('report');\n                });\n\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/report', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-detail-element\\\">\\n    <div class=\\\"detail-description\\\">\\n        <span class=\\\"label\\\"></span>\\n        <span class=\\\"time\\\"></span>\\n    </div>\\n    <div class=\\\"action-group action-top\\\">\\n        <span data-role=\\\"close\\\" class=\\\"icon-compress\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"close report\", options) : helperMissing.call(depth0, \"__\", \"close report\", options)))\n    + \"\\\"/>\\n    </div>\\n    <div class=\\\"detail-body\\\">\\n    </div>\\n    <div class=\\\"no-detail\\\">\\n        <span class=\\\"message\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No report available\", options) : helperMissing.call(depth0, \"__\", \"No report available\", options)))\n    + \"</span>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/report',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/report',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/component',\n    'ui/hider',\n    'ui/report',\n    'tpl!taoTaskQueue/component/listing/tpl/report',\n    'css!taoTaskQueue/component/listing/css/report'\n], function ($, _, __, moment, component, hider, reportFactory, elementTpl) {\n    'use strict';\n\n    var _defaults = {\n    };\n\n    var reportElementApi = {\n        /**\n         * Update the task report with the data\n         * @param {Object} data - the standard task log data\n         * @param {String} data.taskLabel - the task name to be displayed to user\n         * @param {Object} data.report - the standard report object\n         */\n        update : function update(data){\n\n            var $component = this.getElement();\n            $component.find('.label').html(data.taskLabel);\n\n            //set report here\n            if(data.report && _.isArray(data.report.children) && data.report.children.length){\n                this.setState('noreport', false);\n                reportFactory({replace:true}, data.report.children[0]).render($component.find('.detail-body'));\n            }else{\n                this.setState('noreport', true);\n            }\n        }\n    };\n\n    /**\n     * Builds a task listing element\n     *\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskReport} the component\n     *\n     * @event close - Emitted when the report needs to be closed\n     */\n    return function taskReportFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskReport\n         */\n        return component(reportElementApi)\n            .setTemplate(elementTpl)\n            .on('render', function() {\n\n                var self = this;\n                var $component = this.getElement();\n\n                this.update(data);\n\n                $component.find('[data-role=\"close\"]').click(function(){\n                    self.trigger('close');\n                });\n\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/list', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-listing\\\">\\n    <div class=\\\"box\\\">\\n        <div class=\\\"arrow\\\"></div>\\n        <div class=\\\"description\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"empty-placeholder\\\">\";\n  if (helper = helpers.emptyText) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.emptyText); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <ul class=\\\"task-list plain\\\"></ul>\\n        <div class=\\\"view-detail\\\"></div>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/elementWrapper', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></li>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/list',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/list',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'taoTaskQueue/component/listing/element',\n    'tpl!taoTaskQueue/component/listing/tpl/list',\n    'tpl!taoTaskQueue/component/listing/tpl/elementWrapper',\n    'css!taoTaskQueue/component/listing/css/list'\n], function ($, _, __, component, listElementFactory, listTpl, elementWrapperTpl) {\n    'use strict';\n\n    var _defaults = {\n        title : 'Task List',\n        emptyText : __('The list is currently empty.')\n    };\n\n    var listApi = {\n        /**\n         * Remove a list element\n         * @param {taoTaskQueue/component/listing/element} listElement\n         * @returns {taskList}\n         */\n        removeElement : function removeElement(listElement){\n            listElement.destroy();\n            this.getElement().find('ul li[data-id=\"'+listElement.getId()+'\"]').remove();\n            return this;\n        },\n\n        /**\n         * Insert a list element\n         * @param {taoTaskQueue/component/listing/element} listElement\n         * @returns {taskList}\n         */\n        insertElement : function insertElement(listElement){\n            var id = listElement.getId();\n            var $li = $(elementWrapperTpl({\n                id : id\n            }));\n            this.getElement().find('ul').prepend($li);\n            listElement.render($li);\n            return this;\n        },\n\n        /**\n         * Show the detail\n         * @param {taoTaskQueue/component/listing/report} detailElement - the detail element to be shown\n         * @param {Booleam} [show] - should the detail of an element be immediately shown or not\n         * @returns {taskList}\n         */\n        setDetail : function setDetail(detailElement, show){\n            detailElement.render(this.getElement().find('.view-detail'));\n            if(show){\n                this.setState('detail-view', true);\n            }\n            return this;\n        },\n\n        /**\n         * Hide the detail panel and display the default list view again\n         * @returns {taskList}\n         */\n        hideDetail : function hideDetail(){\n            this.setState('detail-view', false);\n            return this;\n        },\n\n        /**\n         * Scroll to the top of the list\n         * @returns {taskList}\n         */\n        scrollToTop : function scrollToTop(){\n            this.getElement().find('.task-list').get(0).scrollTo(0, 0);\n            return this;\n        },\n\n        /**\n         * Animate the insertion tset emphasis on it\n         * @param listElement\n         * @returns {taskList}\n         */\n        animateInsertion : function animateInsertion(listElement){\n            var $listElement = listElement.getElement();\n            var $container = $listElement.parent();\n            $container.addClass('inserting');\n            $listElement.addClass('new-element');\n            _.delay(function(){\n                $container.removeClass('inserting');\n                _.delay(function(){\n                    $listElement.removeClass('new-element');\n                }, 400);\n            },100);\n            return this;\n        }\n    };\n\n    /**\n     * Builds a simple task list component\n     *\n     * @param {Object} config - the component config\n     * @returns {taskList} the component\n     */\n    return function taskListFactory(config) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskList\n         */\n        return component(listApi)\n            .setTemplate(listTpl)\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/manager/tpl/manager', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-manager-container\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Background tasks\", options) : helperMissing.call(depth0, \"__\", \"Background tasks\", options)))\n    + \"\\\">\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/manager/css/manager',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/manager/manager',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'ui/component',\n    'ui/badge/badge',\n    'ui/component/alignable',\n    'ui/animable/absorbable/absorbable',\n    'ui/animable/pulsable/pulsable',\n    'taoTaskQueue/component/listing/element',\n    'taoTaskQueue/component/listing/report',\n    'taoTaskQueue/component/listing/list',\n    'tpl!taoTaskQueue/component/manager/tpl/manager',\n    'css!taoTaskQueue/component/manager/css/manager'\n], function ($, _, __, hider, component, badgeFactory, makeAlignable, makeAbsorbable, makePulsable, listElementFactory, reportElementFactory, taskListFactory, managerTpl) {\n    'use strict';\n\n    /**\n     * Transform the task log summary into a configuration set for the badge\n     * @param {Object} tasksStatuses - the task log summary\n     * @returns {Object} the new badge data to be displayed following the format {type, loading, value}\n     */\n    var getBadgeDataFromStatus = function getBadgeDataFromStatus(tasksStatuses){\n        var running = (tasksStatuses.numberOfTasksInProgress > 0);\n        if(tasksStatuses){\n            if(tasksStatuses.numberOfTasksFailed){\n                return {\n                    type : 'error',\n                    loading : running,\n                    value : parseInt(tasksStatuses.numberOfTasksFailed, 10),\n                };\n            }\n            if(tasksStatuses.numberOfTasksCompleted){\n                return {\n                    type : 'success',\n                    loading : running,\n                    value : parseInt(tasksStatuses.numberOfTasksCompleted, 10),\n                };\n            }\n            if(tasksStatuses.numberOfTasksInProgress){\n                return {\n                    type : 'info',\n                    loading : running,\n                    value : parseInt(tasksStatuses.numberOfTasksInProgress, 10),\n                };\n            }\n            //hide badge in this case\n            return {value:0};\n        }\n    };\n\n    /**\n     * Transform the internal list of elements into a configuration set for the badge\n     * @param {Object} elements - internal collection of task elements\n     * @returns {Object} the new badge data to be displayed following the format {type, loading, value}\n     */\n    var getBadgeDataFromElements = function getBadgeDataFromElements(elements){\n\n        var statusMap = {\n            in_progress: 'numberOfTasksInProgress',\n            created: 'numberOfTasksInProgress',\n            failed: 'numberOfTasksFailed',\n            completed: 'numberOfTasksCompleted',\n        };\n\n        var stats = {\n            numberOfTasksFailed : 0,\n            numberOfTasksCompleted : 0,\n            numberOfTasksInProgress : 0\n        };\n\n        _.forEach(elements, function(element){\n            var status = element.getStatus();\n            if(statusMap[status]){\n                //it is a know state, so add to the stats array\n                stats[statusMap[status]]++;\n            }\n        });\n\n        return getBadgeDataFromStatus(stats);\n    };\n\n    var taskQueue = {\n\n        /**\n         * Get the list of task elements\n         * @returns {taskQueueManager} - self for chaining\n         */\n        getTaskElements : function getTaskElements(){\n            return this.taskElements;\n        },\n\n        /**\n         * Show the details associated to a task\n         * @param {Object} tasksData - a single task data to view the report form\n         * @returns {taskQueueManager} - self for chaining\n         */\n        showDetail : function showDetail(taskData){\n            var $component = this.getElement();\n            var list = this.list;\n            var reportElement = reportElementFactory({replace:true}, taskData)\n                .on('close', function(){\n                    list.hideDetail();\n                    list.alignWith($component, {\n                        hPos: 'center',\n                        hOrigin: 'center',\n                        vPos: 'bottom',\n                        vOrigin: 'top',\n                        hOffset: -156\n                    });\n                    this.destroy();\n                });\n            list.setDetail(reportElement, true);\n            list.alignWith($component, {\n                hPos: 'center',\n                hOrigin: 'center',\n                vPos: 'bottom',\n                vOrigin: 'top',\n                hOffset: -156-121\n            });\n            return this;\n        },\n\n        /**\n         * Add a new task\n         * @param {Object} tasksData - a single task data to be added to the list\n         * @param {Boolean} [animate=false] - tells if the new task addition should be made through a smooth transition effect\n         * @returns {taskQueueManager} - self for chaining\n         */\n        addNewTask : function addNewTask(taskData, animate){\n            var self = this;\n            var taskId = taskData.id;\n            var listElement = listElementFactory({}, taskData)\n                .on('remove', function(){\n                    delete self.taskElements[taskId];\n                    self.list.removeElement(listElement);\n                    self.trigger('remove', taskId);\n                    self.selfUpdateBadge();\n                })\n                .on('report', function(){\n                    self.trigger('report', taskId);\n                })\n                .on('download', function(){\n                    self.trigger('download', taskId);\n                });\n\n\n            if(animate){\n                if(this.list.is('hidden')){\n                    this.list.show();\n                }\n                this.list.scrollToTop();\n            }\n\n            this.list.insertElement(listElement);\n            this.taskElements[taskId] = listElement;\n            this.selfUpdateBadge();\n\n            if(animate){\n                this.list.animateInsertion(listElement);\n            }\n            return this;\n        },\n\n        /**\n         * Update the badge display according to the current status of the tasks in the list\n         * @returns {taskQueueManager} - self for chaining\n         */\n        selfUpdateBadge : function selfUpdateBadge(){\n            var badgeData = getBadgeDataFromElements(this.getTaskElements());\n            if(!this.badge){\n                this.badge = makePulsable(badgeFactory(badgeData)).render(this.getElement());\n            }else{\n                this.badge.update(badgeData);\n            }\n            return this;\n        },\n\n        /**\n         * Load the the array of task element data requested form the server REST API\n         * @param {Array} tasksData - the task data to be loaded from the server REST API call\n         * @returns {taskQueueManager} - self for chaining\n         */\n        loadData : function loadData(tasksData){\n            var self = this;\n            var found = [];\n            _.forEach(tasksData, function(entry){\n                var id = entry.id;\n                if(self.taskElements[id]){\n                    //update\n                    self.taskElements[id].update(entry);\n                    if(self.taskElements[id].getStatus() !== entry.status){\n                        //highlight status change only\n                        self.taskElements[id].highlight();\n                    }\n                }else{\n                    //create\n                    self.addNewTask(entry);\n                }\n                found.push(id);\n            });\n            this.selfUpdateBadge();\n            return this;\n        },\n\n        /**\n         * Trigger the pulse animation on the status badge\n         * @returns {taskQueueManager} - self for chaining\n         */\n        pulse : function pulse(){\n            if(this.badge){\n                this.badge.pulse(3);\n            }\n            return this;\n        }\n    };\n\n    /**\n     * Builds the task queue manager\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskQueueManager} the component\n     *\n     * @event remove - Emitted when a list element is removed\n     * @event download - Emitted when a list element requests the file download associated to a completed task\n     * @event report - Emitted when a list element requests a task report to be displayed\n     * @event listshow - Emitted when the list is displayed\n     * @event listhide - Emitted when the list is hidden\n     */\n    return function taskQueueManagerFactory(config, data) {\n\n        data = data || {};\n\n        /**\n         * The component\n         * @typedef {ui/component} taskQueueManager\n         */\n        return makeAbsorbable(component(taskQueue))\n            .setTemplate(managerTpl)\n            .on('init', function() {\n                //initialiaze the task element collection\n                this.taskElements = {};\n            })\n            .on('render', function() {\n\n                var self = this;\n                var $trigger = this.getElement();\n\n                //create the list\n                this.list = makeAlignable(taskListFactory())\n                    .init({\n                        title : __('Background tasks'),\n                        emptyText : __('There is currently no background task'),\n                    });\n\n                //position it\n                this.list.render($trigger)\n                    .moveBy(0, 0)\n                    .alignWith($trigger, {\n                        hPos: 'center',\n                        hOrigin: 'center',\n                        vPos: 'bottom',\n                        vOrigin: 'top',\n                        hOffset: -156\n                    })\n                    .hide();//start hidden\n\n                //load initial data\n                this.loadData(data);\n\n                //prevent closing the panel when clicking on it\n                this.list.getElement()\n                    .addClass('overflown-element')\n                    .on('click', function(e){\n                    e.stopPropagation();\n                });\n\n                //toggle list visibility\n                $trigger.on('click', function(){\n                    if(self.list.is('hidden')){\n                        self.list.show();\n                        self.trigger('listshow');\n                    }else{\n                        self.list.hide();\n                        self.trigger('listhide');\n                    }\n                });\n            })\n            .init(config || {});\n    };\n\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/model/taskQueueModel',[\n    'jquery',\n    'lodash',\n    'core/promise',\n    'core/eventifier',\n    'core/polling',\n    'core/dataProvider/request',\n    'jquery.fileDownload'\n], function ($, _, Promise, eventifier, polling, request) {\n    'use strict';\n\n    var _defaults = {\n        url : {\n            get: '',\n            archive: '',\n            all : '',\n            download : ''\n        },\n        pollSingleIntervals : [\n            {iteration: 4, interval:1000},\n        ],\n        pollAllIntervals : [\n            {iteration: 10, interval:5000},\n            {iteration: 0, interval:10000}//infinite\n        ]\n    };\n\n    function hasSameState(task1, task2){\n        if(task1.status === task2.status){\n            return true;\n        }else if(task1.status === 'created' || task1.status === 'in_progress'){\n            return  (task2.status === 'created' || task2.status === 'in_progress');\n        }\n        return false;\n    }\n\n    return function taskQueueModel(config) {\n\n        var model;\n        /**\n         * cached array of task data\n         * @type {Object}\n         */\n        var _cache;\n\n        //store instance of single polling\n        var singlePollings = {};\n\n        var getPollSingleIntervals = function getPollSingleIntervals(){\n            if(config.pollSingleIntervals && _.isArray(config.pollSingleIntervals)){\n                return _.cloneDeep(config.pollSingleIntervals);\n            }\n        };\n\n        var getPollAllIntervals = function getPollAllIntervals(){\n            if(config.pollAllIntervals && _.isArray(config.pollAllIntervals)){\n                return _.cloneDeep(config.pollAllIntervals);\n            }\n        };\n\n        config = _.defaults(config || {}, _defaults);\n\n        model = eventifier({\n\n            setEndpoints : function setEndpoints(urls){\n                _.assign(config.url, urls || {});\n                return this;\n            },\n\n            /**\n             * Get the status of a task identified by its unique task id\n             *\n             * @param {String} taskId - unique task identifier\n             * @returns {Promise}\n             */\n            get : function get(taskId){\n                var status;\n\n                if(!config.url || !config.url.get){\n                    throw new TypeError('config.url.get is not configured while get() is being called');\n                }\n\n                status = request(config.url.get, {taskId: taskId}, 'GET', {}, true)\n                    .then(function(taskData){\n                        //check taskData\n                        if(taskData && taskData.status){\n                            if(_cache){\n                                //detect change\n                                if(!_cache[taskData.id]){\n                                    model.trigger('singletaskadded', taskData);\n                                }else if(!hasSameState(_cache[taskData.id], taskData)){\n                                    //check if the status has changed\n                                    model.trigger('singletaskstatuschange', taskData);\n                                }\n                            }else{\n                                _cache = {};\n                            }\n                            _cache[taskData.id] = taskData;\n                            return Promise.resolve(taskData);\n                        }\n                        return Promise.reject(new Error('failed to get task data'));\n                    });\n\n                status.catch(function(err){\n                    model.trigger('error', err);\n                });\n\n                return status;\n            },\n\n            /**\n             * Get the status of all task identified by its unique task id\n             *\n             * @returns {Promise}\n             */\n            getAll : function getAll(){\n                var status;\n\n                if(!config.url || !config.url.all){\n                    throw new TypeError('config.url.all is not configured while getAll() is being called');\n                }\n\n                status = request(config.url.all, {limit: 100}, 'GET', {}, true)\n                    .then(function(taskData){\n                        var newCache = {};\n                        //check taskData\n                        if(taskData){\n                            if(_cache){\n                                //detect change\n                                _.forEach(taskData, function(task){\n                                    var id = task.id;\n                                    if(!_cache[id]){\n                                        model.trigger('multitaskadded', task);\n                                    }else if(!hasSameState(_cache[id], task)){\n                                        //check if the status has changed\n                                        model.trigger('multitaskstatuschange', task);\n                                    }\n                                    newCache[id] = task;\n                                });\n                                _.forEach(_.difference(_.keys(_cache), _.keys(newCache)), function(id){\n                                    model.trigger('taskremoved', _cache[id]);\n                                });\n                            }else{\n                                _.forEach(taskData, function(task){\n                                    newCache[task.id] = task;\n                                });\n                            }\n                            //update local cache\n                            _cache = newCache;\n\n                            return Promise.resolve(taskData);\n                        }\n                        return Promise.reject(new Error('failed to get all task data'));\n                    });\n\n                status.catch(function(err){\n                    model.trigger('error', err);\n                });\n\n                return status;\n            },\n\n            /**\n             * Remove a task identified by its unique task id\n             *\n             * @param {String} taskId - unique task identifier\n             * @returns {Promise}\n             */\n            archive : function archive(taskId){\n\n                var status;\n\n                if(!config.url || !config.url.archive){\n                    throw new TypeError('config.url.archive is not configured while archive() is being called');\n                }\n\n                status = request(config.url.archive, {taskId : taskId}, 'GET', {}, true)\n                    .then(function(){\n                        return Promise.resolve();\n                    });\n\n                status.catch(function(res){\n                    model.trigger('error', res);\n                });\n\n                return status;\n            },\n\n            /**\n             * Poll status for all tasks\n             */\n\n            /**\n             * Poll status for all tasks\n             * @param {Boolean} [immediate] - tells if the polling should immediately start (otherwise, will wait until the next iteration)\n             * @returns {*}\n             */\n            pollAll : function pollAll(immediate){\n\n                var self = this;\n                var loop = 0;\n                var pollingIntervals = getPollAllIntervals();\n\n                /**\n                 * gradually increase the polling interval to ease server load\n                 * @private\n                 * @param {Object} pollingInstance - a poll object\n                 */\n                var _updateInterval = function _updateInterval(pollingInstance){\n                    var pollingInterval;\n                    if(loop){\n                        loop --;\n                    }else{\n                        pollingInterval = pollingIntervals.shift();\n                        if(pollingInterval && typeof pollingInterval.iteration !== 'undefined' && pollingInterval.interval){\n                            loop = pollingInterval.iteration;\n                            pollingInstance.setInterval(pollingInterval.interval);\n                        }\n                    }\n                };\n\n                if(!config.url || !config.url.all){\n                    throw new TypeError('config.url.all is not configured while pollAll() is being called');\n                }\n\n                if(!this.globalPolling){\n                    //no global polling yet, create one\n                    this.globalPolling = polling({\n                        action: function action() {\n                            // get into asynchronous mode\n                            var done = this.async();\n                            model.getAll().then(function(taskDataArray){\n                                model.trigger('pollAll', taskDataArray);\n                                _updateInterval(self.globalPolling);\n                                done.resolve();\n                            }).catch(function(){\n                                done.reject();\n                            });\n                        }\n                    });\n                    _updateInterval(this.globalPolling);\n                    this.globalPolling.start();\n                    this.trigger('pollAllStart');\n                }else{\n                    this.globalPolling.start();\n                    this.trigger('pollAllStart');\n                }\n\n                if(immediate){\n                    //if it is request to immediate start polling, start it now\n                    this.globalPolling.next();\n                }\n\n                return model;\n            },\n            pollAllStop : function pollAllStop(){\n                if(this.globalPolling){\n                    this.globalPolling.stop();\n                    this.trigger('pollAllStop');\n                }\n                return this;\n            },\n            pollSingle : function pollSingle(taskId){\n\n                var self = this;\n                var loop = 0;\n\n                var pollingIntervals = getPollSingleIntervals();\n\n                /**\n                 * gradually increase the polling interval to ease server load\n                 * @private\n                 * @param {Object} pollingInstance - a poll object\n                 */\n                var _updateInterval = function _updateInterval(pollingInstance){\n                    var pollingInterval;\n                    if(loop){\n                        loop --;\n                        return true;//continue polling\n                    }else{\n                        pollingInterval = pollingIntervals.shift();\n                        if(pollingInterval && pollingInterval.iteration && pollingInterval.interval){\n                            loop = pollingInterval.iteration;\n                            pollingInstance.setInterval(pollingInterval.interval);\n                            return true;//continue polling\n                        }else{\n                            //stop polling\n                            return false;\n                        }\n                    }\n                };\n\n                if(!config.url || !config.url.get){\n                    throw new TypeError('config.url.get is not configured while pollSingle() is being called');\n                }\n\n                if(singlePollings[taskId]){\n                    singlePollings[taskId].stop();\n                }\n\n                return new Promise(function(resolve){\n                    var poll = polling({\n                        action: function action() {\n                            // get into asynchronous mode\n                            var done = this.async();\n                            self.get(taskId).then(function(taskData){\n                                if(taskData.status === 'completed' || taskData.status === 'failed'){\n                                    //the status status could be either \"completed\" or \"failed\"\n                                    poll.stop();\n                                    self.trigger('pollSingleFinished', taskId, taskData);\n                                    resolve({finished: true, task: taskData});\n                                }else if(!_updateInterval(poll)){\n                                    //if we have reached the end of the total polling config\n                                    self.trigger('pollSingleFinished', taskId, taskData);\n                                    resolve({finished: false, task: taskData});\n                                }else{\n                                    self.trigger('pollSingle', taskId, taskData);\n                                    done.resolve();//go to next poll iteration\n                                }\n\n                            }).catch(function(){\n                                done.reject();\n                            });\n                        }\n                    });\n                    _updateInterval(poll);\n                    singlePollings[taskId] = poll.start();\n                    self.trigger('pollSingleStart', taskId);\n                });\n            },\n            pollSingleStop : function pollSingleStop(taskId){\n                if(singlePollings && singlePollings[taskId]){\n                    singlePollings[taskId].stop();\n                    this.trigger('pollSingleStop', taskId);\n                }\n                return this;\n            },\n            create : function create(url, data){\n                var taskCreate, self = this;\n                taskCreate = request(url, data, 'POST', {}, true)\n                    .then(function(creationResult){\n                        //poll short result:\n                        if(creationResult && creationResult.task && creationResult.task.id){\n                            self.trigger('created', creationResult);\n                            return self.pollSingle(creationResult.task.id).then(function(result){\n                                if(creationResult.extra){\n                                    result.extra = creationResult.extra;\n                                }\n                                if(result.finished){\n                                    //send to queue\n                                    self.trigger('fastFinished', result);\n                                }else{\n                                    //send to queue\n                                    self.trigger('enqueued', result);\n                                }\n                                return Promise.resolve(result);\n                            });\n                        }\n                        return Promise.reject(new Error('failed to get task data'));\n                    });\n\n                taskCreate.catch(function(err){\n                    model.trigger('error', err);\n                });\n\n                return taskCreate;\n            },\n            download : function download(taskId){\n\n                if(!config.url || !config.url.download){\n                    throw new TypeError('config.url.download is not configured while download() is being called');\n                }\n\n                $.fileDownload(config.url.download, {\n                    httpMethod: 'POST',\n                    data: {taskId : taskId},\n                    failCallback: function (err) {\n                        model.trigger('error', err);\n                    }\n                });\n            }\n        });\n\n        return model;\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/model/taskQueue',[\n    'util/url',\n    'taoTaskQueue/model/taskQueueModel'\n], function (urlHelper, taskQueueModelFactory) {\n    'use strict';\n\n    return taskQueueModelFactory({\n        url : {\n            get: urlHelper.route('get', 'TaskQueueWebApi', 'taoTaskQueue'),\n            archive: urlHelper.route('archive', 'TaskQueueWebApi', 'taoTaskQueue'),\n            all : urlHelper.route('getAll', 'TaskQueueWebApi', 'taoTaskQueue'),\n            download : urlHelper.route('download', 'TaskQueueWebApi', 'taoTaskQueue')\n        },\n        pollSingleIntervals : [\n            {iteration: 1, interval:1000},\n        ],\n        pollAllIntervals : [\n            {iteration: 0, interval:5000},\n        ]\n    });\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Sam <sam@taotesting.com>\n */\ndefine('taoTaskQueue/controller/main',[\n    'jquery',\n    'taoTaskQueue/component/manager/manager',\n    'taoTaskQueue/model/taskQueue'\n],\nfunction ($, taskQueueManagerFactory, taskQueue) {\n    'use strict';\n\n    /**\n     * This controller initialize all the task queue component globally for tao backoffice use\n     * @exports taoTaskQueue/controller/main\n     */\n    return {\n        start: function () {\n\n            var taskManager = taskQueueManagerFactory({\n                    replace: true\n                })\n                .on('remove', function (taskId) {\n                    taskQueue.archive(taskId);\n                })\n                .on('report', function (taskId) {\n                    taskQueue.get(taskId).then(function (task) {\n                        //show report in popup\n                        taskManager.showDetail(task);\n                    });\n                })\n                .on('download', function (taskId) {\n                    taskQueue.download(taskId);\n                })\n                .render($('#taskqueue').parent())\n                .hide();//start hidden to prevent blinking effect\n\n            //listen to events started by the task queue model\n            taskQueue.on('taskcreated', function(data){\n                if(taskManager.list.is('hidden')){\n                    taskManager.absorbBurst(data.sourceDom, [0, 200, 400, 800, 1000, 1200, 1500]).then(function(){\n                        taskManager.addNewTask(data.task);\n                        taskQueue.pollAll();\n                    });\n                }else{\n                    taskManager.addNewTask(data.task, true);\n                    taskQueue.pollAll();\n                }\n            }).on('multitaskstatuschange', function(){\n                taskManager.pulse();\n            }).on('pollAll', function (tasks) {\n                if(taskManager.is('hidden')){\n                    taskManager.show();\n                }\n                taskManager.loadData(tasks);\n            }).pollAll(true);//start polling immediately on load\n        }\n    };\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('div.task-element{position:relative;background:#f3f1ef;padding:10px 20px;width:100%;height:70px;-webkit-transition:background, 2s, ease-out, 0s;-moz-transition:background, 2s, ease-out, 0s;-ms-transition:background, 2s, ease-out, 0s;-o-transition:background, 2s, ease-out, 0s;transition:background, 2s, ease-out, 0s}div.task-element.highlight{background:white;-webkit-transition:background, 0s, ease-out, 0s;-moz-transition:background, 0s, ease-out, 0s;-ms-transition:background, 0s, ease-out, 0s;-o-transition:background, 0s, ease-out, 0s;transition:background, 0s, ease-out, 0s}div.task-element .container-icon{position:absolute}div.task-element .container-icon .shape{display:inline-block;border-radius:50%;width:40px;height:40px;top:2px;position:relative}div.task-element .container-icon .shape [class^=\\\"icon-\\\"],div.task-element .container-icon .shape [class*=\\\" icon-\\\"]{font-size:20px;font-size:2rem;position:relative;top:9px;left:12px;text-shadow:none}div.task-element .container-icon .shape .icon-export,div.task-element .container-icon .shape .icon-import,div.task-element .container-icon .shape .icon-connect{left:10px}div.task-element .container-icon .shape .icon-property-advanced,div.task-element .container-icon .shape .icon-result-ok,div.task-element .container-icon .shape .icon-result-nok{top:10px;left:10px}div.task-element.in_progress .container-icon .shape{background:#0e5d91}div.task-element.in_progress .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.in_progress .container-icon .shape [class*=\\\" icon-\\\"]{color:#e7eff4}div.task-element.in_progress .action-group.action-bottom [data-role=\\\"notify\\\"]{display:none}div.task-element.in_progress .action-group.action-top [data-role=\\\"remove\\\"]{display:none}div.task-element.completed .container-icon .shape{background:#0e914b}div.task-element.completed .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.completed .container-icon .shape [class*=\\\" icon-\\\"]{color:#e7f4ed}div.task-element.completed .action-group.action-bottom [data-role=\\\"download\\\"],div.task-element.completed .action-group.action-bottom [data-role=\\\"report\\\"]{display:inline-block}div.task-element.failed .container-icon .shape{background:#ba122b}div.task-element.failed .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.failed .container-icon .shape [class*=\\\" icon-\\\"]{color:#f8e7ea}div.task-element.failed .action-group.action-bottom [data-role=\\\"download\\\"],div.task-element.failed .action-group.action-bottom [data-role=\\\"report\\\"]{display:inline-block}div.task-element .container-text{padding-top:4px;margin-left:60px;width:240px}div.task-element .container-text .label{max-height:38px;color:#222}div.task-element .container-text .time{color:#92918f;font-size:12px;font-size:1.2rem}div.task-element .action-group{position:absolute}div.task-element .action-group [class^=\\\"icon-\\\"],div.task-element .action-group [class*=\\\" icon-\\\"]{font-size:16px;font-size:1.6rem;background-color:transparent;width:20px;height:20px;display:inline-block;padding-left:4px;margin-left:5px;cursor:pointer}div.task-element .action-group [class^=\\\"icon-\\\"]:hover,div.task-element .action-group [class*=\\\" icon-\\\"]:hover{opacity:0.6}div.task-element .action-group.action-top{top:6px;right:14px}div.task-element .action-group.action-bottom{bottom:6px;right:12px}div.task-element .action-group.action-bottom [class^=\\\"icon-\\\"],div.task-element .action-group.action-bottom [class*=\\\" icon-\\\"]{display:none}\\n\\n/*# sourceMappingURL=element.css.map */div.task-detail-element{position:relative;padding:10px 20px;width:600px;min-height:250px;background:#f3f1ef}div.task-detail-element .detail-description .label{margin-right:4px;color:#222;font-weight:bold}div.task-detail-element .detail-description .time{margin-left:4px;color:#92918f;font-size:12px;font-size:1.2rem}div.task-detail-element .detail-body{max-height:500px;overflow-y:auto;padding:10px 0}div.task-detail-element .action-top{position:absolute;top:9px;right:14px}div.task-detail-element .action-top [class^=\\\"icon-\\\"],div.task-detail-element .action-top [class*=\\\" icon-\\\"]{font-size:16px;font-size:1.6rem;color:#222;background-color:transparent;width:20px;height:20px;display:inline-block;padding-left:4px;margin-left:5px;cursor:pointer}div.task-detail-element .action-top [class^=\\\"icon-\\\"]:hover,div.task-detail-element .action-top [class*=\\\" icon-\\\"]:hover{opacity:0.6}div.task-detail-element .no-detail{display:none}div.task-detail-element.noreport .no-detail{display:block;color:#92918f}\\n\\n/*# sourceMappingURL=report.css.map */div.task-listing{position:relative;cursor:default;padding-top:0px}div.task-listing div.box{position:relative;min-height:76px;min-width:360px;background:#f3f1ef;-webkit-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-moz-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-ms-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-o-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}div.task-listing div.box .description{padding:2px 20px;background:#dbd9d7;color:#222;font-weight:bold;border-bottom:solid 1px #ddd;min-height:8px}div.task-listing div.box .arrow{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg);border:1px #ddd solid;border-right:none;border-bottom:none;width:16px;height:16px;background:#dbd9d7;color:#222;position:absolute;right:14px;top:-9px}div.task-listing div.box ul.task-list{position:relative;top:0;left:0;right:0;opacity:1;padding:0 !important;border:none;max-height:460px;overflow:auto;background:#c2c1bf;position:relative}div.task-listing div.box ul.task-list li{position:relative;width:100%;max-height:100px;color:#222;background:#c2c1bf}div.task-listing div.box ul.task-list li:not(:last-child){border-bottom:solid 1px #dbd9d7}div.task-listing div.box ul.task-list li.inserting{max-height:0;-webkit-transition:max-height, .5s, ease-out, 0s;-moz-transition:max-height, .5s, ease-out, 0s;-ms-transition:max-height, .5s, ease-out, 0s;-o-transition:max-height, .5s, ease-out, 0s;transition:max-height, .5s, ease-out, 0s}div.task-listing div.box ul.task-list li.inserting .task-element{height:0px}div.task-listing div.box ul.task-list li.inserted{min-height:70px}div.task-listing div.box ul.task-list li .task-element{transform:scaleY(1);-webkit-transition:scaleY, .6s, ease-out, 0s;-moz-transition:scaleY, .6s, ease-out, 0s;-ms-transition:scaleY, .6s, ease-out, 0s;-o-transition:scaleY, .6s, ease-out, 0s;transition:scaleY, .6s, ease-out, 0s}div.task-listing div.box ul.task-list li .task-element.new-element{transform-origin:20% 0;transform:scaleY(0)}div.task-listing div.box .empty-placeholder{width:100%;position:absolute;top:25px;padding:12px 20px;font-style:italic;color:#222}div.task-listing div.box .view-detail{display:none}div.task-listing.detail-view .box .task-list{display:none}div.task-listing.detail-view .box .view-detail{display:block;position:relative}\\n\\n/*# sourceMappingURL=list.css.map */.task-manager-container{cursor:pointer;position:relative;width:40px;height:64px;background-color:transparent;padding:22px 8px 0px}.task-manager-container:hover{-webkit-transition:background-color 0.2s ease;-moz-transition:background-color 0.2s ease;-ms-transition:background-color 0.2s ease;-o-transition:background-color 0.2s ease;transition:background-color 0.2s ease;background-color:rgba(14,93,145,0.5);text-decoration:none}.dark-bar nav .settings-menu:hover ~ .persistent-menu .task-listing .box{box-shadow:none;border-color:#eee}.dark-bar nav .settings-menu:hover ~ .persistent-menu .task-listing .box .arrow{display:none}\\n\\n/*# sourceMappingURL=manager.css.map */');\n"]}