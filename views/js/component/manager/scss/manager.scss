@import "inc/bootstrap";

$listBorderColor: #333;

.task-manager-container {
    cursor: pointer;
    position: relative;
    display: inline-block;
    width: 40px;
    height: 64px;
    background: $darkBar;
    padding: 22px 8px 0px;
    .badge{
        position: absolute;
        top: 14px;
        right: 7px;
    }
    .profile-main-loader{
        .loader {
            width: 24px;
            height:24px;
            &:before {
                content: '';
                display: block;
                padding-top: 100%;
            }
            .circular-loader {
                @include animation(rotate 2s linear infinite);
                @include vendor-prefix(transform-origin, center center);
                height: 100%;
                width: 100%;
                position: absolute;
                top: 0;
                left: 0;
                margin: auto;
                .loader-path {
                    stroke-linecap: round;
                    stroke-width:5;
                    stroke-dasharray: 150,200;
                    stroke-dashoffset: -10;
                    @include vendor-prefix(animation, 'dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite');
                }
            }
        }
        @include keyframes(rotate) {
            100% {
                @include vendor-prefix(transform, rotate(360deg));
            }
        }
        @include keyframes(dash) {
            0% {
                stroke-dasharray: 1,200;
                stroke-dashoffset: 0;
            }
            50% {
                stroke-dasharray: 89,200;
                stroke-dashoffset: -35;
            }
            100% {
                stroke-dasharray: 89,200;
                stroke-dashoffset: -124;
            }
        }
        @include keyframes(color) {
            0% {stroke: #70c542;}
            40% {stroke: #70c542;}
            66% {stroke: #70c542;}
            80%, 90% {stroke: #70c542;}
        }
    }

}

.task-manager-trigger {
    position: relative;
    font-size: 18px;
    color: white;
    text-shadow: none;
}

.badge {
    svg {
        position: absolute;
        top: -8px;
        right: -8px;
        g.badge-info {
            path {
                fill: $info;
            }
            text {
                fill: whiten($info, 0.8);
            }
        }
        g.badge-success {
            path {
                fill: $success;
            }
            text {
                fill: whiten($success, 0.8);
            }
        }
        g.badge-error {
            path {
                fill: $error;
            }
            text {
                fill: whiten($error, 0.8);
            }
        }
    }
}

.task-listing {
    cursor:default;
    padding-top: 8px;
    .box {
        position: relative;
        min-width: 360px;
        background: $canvas;
        @include simple-border($listBorderColor);
        .description {
            padding: 2px 20px;
            background: blacken($canvas, 0.1);
            color: $textColor;
            font-weight: bold;
            border-bottom: solid 1px $listBorderColor;
        }
        .arrow {
            @include vendor-prefix(transform, rotate(45deg));
            border: 1px $listBorderColor solid;
            border-right: none;
            border-bottom: none;
            width: 12px;
            height: 12px;
            background: blacken($canvas, 0.1);
            color: $textColor;
            position: absolute;
            right: calc(50% - 6px);
            top: -7px;
        }
        ul{
            max-height: 460px;
            overflow: auto;
            li{
                width: 100%;
                max-height: 100px;
                color: $textColor;
                background: blacken($canvas, 0.2);
                &.inserting{
                    max-height: 0;
                    @include transition('max-height', 0.5s);
                    .notif-element{
                        height: 0px;
                    }
                }
                &.inserted{
                    min-height: 70px;
                }

                //enable smooth transition when added
                .notif-element {
                    transform: scaleY(1);
                    @include transition('scaleY', 0.5s);
                    &.new-element{
                        transform-origin: 20% 0;
                        transform: scaleY(0);
                    }
                }
            }
        }
    }
}

.notif-element {
    position: relative;
    background: $canvas;
    padding: 10px 20px;
    width: 100%;
    height: 70px;
    border-bottom: solid 1px blacken($canvas, 0.2);

    //adding transition for highlighting the element after an update
    @include transition('background', 2s);
    &.highlight{
        background: white;
        @include transition('background', 0s);
    }

    .container-icon{
        position: absolute;
        .shape{
            display: inline-block;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            top: 2px;
            position: relative;
            [class^="icon-"], [class*=" icon-"] {
                @include font-size(20);
                position: relative;
                top:9px;
                left:10px;
                text-shadow: none;
            }
        }
    }
    &.in_progress{
        .container-icon .shape{
            background: $info;
            [class^="icon-"], [class*=" icon-"]{
                color: whiten($info, 0.9);
            }
        }
        .action-group.action-bottom [data-role="notify"]{
            display: none;
        }
        .action-group.action-top [data-role="delete"]{
            display: none;
        }
    }
    &.completed{
        .container-icon .shape{
            background: $success;
            [class^="icon-"], [class*=" icon-"]{
                color: whiten($success, 0.9);
            }
        }
        .action-group.action-bottom{
            [data-role="download"], [data-role="report"]{
                display: inline-block;
            }
        }
    }
    &.failed{
        .container-icon .shape{
            background: $error;
            [class^="icon-"], [class*=" icon-"]{
                color: whiten($error, 0.9);
            }
        }
        .action-group.action-bottom{
            [data-role="download"], [data-role="report"]{
                display: inline-block;
            }
        }
    }
    .container-text{
        padding-top: 4px;
        margin-left: 60px;
        .label{
            color: $textColor;
        }
        .time{
            color: blacken($canvas, 0.4);
            @include font-size(12);
        }
    }
    .action-group{
        position: absolute;
        [class^="icon-"], [class*=" icon-"] {
            @include font-size(16);
            background-color: transparent;
            width: 20px;
            height: 20px;
            display: inline-block;
            padding-left: 4px;
            margin-left: 5px;
            cursor: pointer;
            &:hover{
                opacity: 0.6;
            }
        }
        &.action-top{
            top: 6px;
            right: 6px;
        }
        &.action-bottom{
            bottom: 6px;
            right: 4px;
            [class^="icon-"], [class*=" icon-"] {
                display: none;
            }
        }
    }
}

.pulse {
    display: inline-block;
    position: absolute;
    top: 0;
    right: 0;
    width: 10px;
    height: 10px;
    border-radius: 250%;
    background: red;
    cursor: pointer;
    box-shadow: 0 0 0 rgba(204, 169, 44, 0.6);
    //animation: pulse 2s 5;
    @include keyframes(pulse) {
        0% {box-shadow: 0 0 0 0 rgba(204, 169, 44, 0.6)}
        50% {box-shadow: 0 0 0 30px rgba(204, 169, 44, 0)}
        100% {box-shadow: 0 0 0 0 rgba(204, 169, 44, 0)}
    }
    @include animation(pulse 1s ease-out infinite);
}